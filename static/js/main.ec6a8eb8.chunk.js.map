{"version":3,"sources":["actions/game.js","constants/checkoutModes.js","constants/checkinModes.js","services/gameInformationService.js","reducers/game.js","services/fetchService.js","services/configService.js","util/functionUtil.js","components/modals/SimpleModal.js","actions/modal.js","util/actionUtil.js","actions/playerPermission.js","actions/notifications.js","actions/user.js","reducers/user.js","reducers/playerPermission.js","actions/games.js","reducers/games.js","actions/stateMemory.js","reducers/stateMemory.js","actions/statistics.js","services/sortService.js","reducers/statistics.js","reducers/modal.js","actions/serverInformation.js","reducers/serverInformation.js","reducers/notifications.js","actions/speech.js","reducers/speech.js","reducers/index.js","constants/navigationItems.js","components/general/input/DropdownTextfield.js","util/documentUtil.js","components/views/newgame/NewGameConfig.js","containers/NewGameConfigContainer.js","components/views/game/ScoreButtons.js","containers/ScoreButtonsContainer.js","components/views/game/Player.js","containers/PlayerContainer.js","components/views/game/Game.js","services/speechSynthService.js","containers/GameContainer.js","services/storageService.js","components/views/statistics/GamesBarChart.js","components/views/statistics/DartsBarChart.js","components/general/loaders/StackLoader.js","components/views/statistics/DartsRadarChart.js","components/general/alerts/OnlyForLoggedInUsers.js","containers/OnlyForLoggedInUsersContainer.js","components/views/statistics/Statistics.js","containers/StatisticsContainer.js","components/views/settings/SpeechSettings.js","components/general/CustomDropDownMenuItem.js","components/general/navigationbar/NavigationBarDropdown.js","components/general/navigationbar/NavigationBar.js","components/general/navigationbar/NavigationBarItem.js","components/modals/DeletionConfirmationModal.js","components/views/settings/UserSettings.js","containers/UserSettingsContainer.js","components/views/settings/Settings.js","containers/SettingsContainer.js","components/modals/LoginModal.js","containers/modals/LoginModalContainer.js","components/modals/SignUpModal.js","containers/modals/SignUpModalContainer.js","components/views/about/About.js","containers/AboutContainer.js","containers/modals/SimpleModalContainer.js","components/views/main/ButtonTile.js","components/views/main/NavigationTile.js","components/views/main/TileRow.js","components/views/main/Main.js","containers/MainContainer.js","util/dateUtil.js","components/views/notifications/Notifications.js","containers/NotificationsContainer.js","components/app/FullscreenButton.js","components/general/loaders/NavbarLoginLoader.js","components/app/AppNavigationBar.js","containers/AppNavigationBarContainer.js","components/app/App.js","containers/AppContainer.js","index.js"],"names":["START_NEW_GAME","ADD_DART","UNDO_DART","EXIT_GAME","REMATCH","exitGame","type","SINGLE_OUT","key","text","DOUBLE_OUT","ALL_CHECKOUT_MODES","SINGLE_IN","DOUBLE_IN","ALL_CHECKIN_MODES","isThrownOver","score","dart","checkOutMode","value","multiplier","getTurnInformation","players","startScore","checkInMode","playerInformationList","i","length","dartCount","average","checkInCondition","prevPlayerIndex","prevAufnahmeIndex","prevDartIndex","playerIndex","aufnahmeIndex","dartIndex","aufnahmeStartScore","undefined","aufnahmen","dartScore","checkOutCondition","thrownOver","aufnahmenCount","currentAufnahmeScore","currentAufnahme","toFixed","turnInformation","current","previous","playerInformation","initPlayers","game","state","arguments","action","training","validatedDart","Object","objectSpread","currentTurnInfo","turnInfo","winner","announcementText","name","addDart","splice","previousTurnInfo","undoDart","playersCopy","slice","startingPlayer","push","shift","fetchGet","url","onSuccess","onResponseNotOK","onError","baseFetch","fetchPost","data","fetchPut","fetchDelete","method","fetchParameter","credentials","body","JSON","stringify","headers","content-type","fetch","then","response","ok","contentType","get","indexOf","json","Promise","reject","status","message","error","console","PRODUCTION_CLIENT_HOSTNAME","PRODUCTION_HOST","DEV_PROTOCOL","DEV_PORT","getConfig","window","location","hostname","configForHost","host","resourceUrls","user","playerPermission","statistic","serverInformation","notification","loginUrl","logoutUrl","ifEnterKey","ifKey","keyCode","target","TYPE_INFORMATION","SimpleModal","props","_this","classCallCheck","this","appearance","possibleConstructorReturn","getPrototypeOf","call","item","modalType","getAppearanceByModalType","prevProps","setState","_this2","react_default","a","createElement","react_bootstrap_es","show","onKeyDown","hide","ifEscKey","Body","style","paddingTop","paddingBottom","glyph","color","title","Footer","width","bsStyle","onClick","onConfirm","onCancel","React","Component","HIDE_CURRENT_MODAL","SHOW_MODAL","showConfirmation","showInformation","showError","defaultErrorHandling","dispatch","errorAction","logout","REQUEST_FETCH_PERMITTED_USERS","FETCH_PERMITTED_USERS_SUCCESSFUL","FETCH_PERMITTED_USERS_FAILED","REQUEST_FETCH_PLAYABLE_USERS","FETCH_PLAYABLE_USERS_SUCCESSFUL","FETCH_PLAYABLE_USERS_FAILED","REQUEST_UPDATE_PLAYER_PERMISSION","ADD_PLAYER_PERMISSION_SUCCESSFUL","REMOVE_PLAYER_PERMISSION_SUCCESSFUL","UPDATE_PLAYER_PERMISSION_FAILED","requestFetchPermittedUsers","fetchPermittedUsersSuccessful","users","fetchPermittedUsersFailed","requestFetchPlayableUsers","fetchPlayableUsersSuccessful","fetchPlayableUsersFailed","requestUpdatePlayerPermission","addPlayerPermissionSuccessful","changedUser","removePlayerPermissionSuccessful","changedUserId","updatePlayerPermissionFailed","fetchPlayableUsers","responseNotOk","fetchPermittedUsers","REQUEST_FETCH_NOTIFICATIONS","FETCH_NOTIFICATIONS_SUCCESSFUL","FETCH_NOTIFICATIONS_FAILED","REQUEST_MARK_NOTIFICATIONS_AS_READ","MARK_NOTIFICATIONS_AS_READ_SUCCESSFUL","MARK_NOTIFICATIONS_AS_READ_FAILED","requestFetchNotifications","fetchNotificationsSuccessful","notifications","fetchNotificationsFailed","requestMarkNotificationsAsRead","notificationIds","markNotificationsAsReadSuccessful","markNotificationsAsReadFailed","fetchNotifications","SHOW_LOGIN_MODAL","HIDE_LOGIN_MODAL","SHOW_SIGNUP_MODAL","HIDE_SIGNUP_MODAL","REQUEST_LOGIN","LOGIN_SUCCESSFUL","LOGIN_FAILED","REQUEST_LOGIN_BY_TOKEN","LOGIN_BY_TOKEN_SUCCESSFUL","LOGIN_BY_TOKEN_FAILED","REQUEST_LOGOUT","LOGOUT_SUCCESSFUL","LOGOUT_FAILED","REQUEST_SIGNUP","SIGNUP_SUCCESSFUL","SIGNUP_FAILED","REQUEST_MODIFY_USER","MODIFY_USER_SUCCESSFUL","MODIFY_USER_FAILED","REQUEST_DELETE_USER","DELETE_USER_SUCCESSFUL","DELETE_USER_FAILED","showLoginModal","requestLogin","loginSuccessful","loginFailed","requestLoginByToken","loginByTokenSuccessful","userInfo","loginByTokenFailed","requestLogout","logoutSuccessful","logoutFailed","requestSignUp","signUpSuccessful","signUpFailed","requestModifyUser","modifyUserSuccessful","modifyUserFailed","requestDeleteUser","deleteUserSuccessful","deleteUserFailed","login","password","loginByToken","showErrorOnFailure","id","showSignUpModal","isLoggedIn","isLoggingIn","isLoggingOut","isSigningUp","isModifying","isDeletingUser","playableUsers","isFetchingPlayableUsers","permittedUsers","isFetchingPermittedUsers","isUpdatingPlayerPermission","permittedUsersAfterAdd","permittedUsersAfterRemove","indexToRemove","map","REQUEST_ARCHIVE_GAME","ARCHIVE_GAME_SUCCESSFUL","ARCHIVE_GAME_FAILED","requestArchiveGame","archiveGameSuccessful","archiveGameFailed","games","isArchiving","MEMORIZE_STATE","stateMemory","states","newStates","REQUEST_FETCH_STATISTICS","FETCH_STATISTICS_SUCCESSFUL","FETCH_STATISTICS_FAILED","requestFetchStatistics","fetchStatisticsSuccessful","fetchStatisticsFailed","sortPlayerByNameAsc","b","sortDartDataByScoreDesc","scoreA","parseInt","scoreB","scoreBoardOrder","sortDartDataByScoreBoardOrder","scoreAIndex","scoreBIndex","sortGameDataByOpponentAsc","opponent","statistics","isFetching","totalGames","totalDarts","possibleCheckoutDarts","checkoutDarts","gamesWon","gamesLost","dartData","gamesData","darts","countsPerScore","property","hasOwnProperty","singleCount","doubleCount","tripleCount","sort","countsPerPlayer","wonCount","lostCount","totalCount","possibleCheckoutCount","checkoutCount","modal","items","newItems","REQUEST_SERVER_VERSION","FETCH_SERVER_VERSION_SUCCESSFUL","FETCH_SERVER_VERSION_FAILED","requestServerVersion","fetchServerVersionSuccessful","version","fetchServerVersionFailed","isFetchingVersion","INITIAL_STATE","unreadNotifications","getUnreadNotifications","allNotifications","unread","read","newNotifications","j","newUnread","SET_POSSIBLE_VOICES","SET_SELECTED_VOICE_BY_NAME","TOGGLE_SPEECH_OUTPUT","setSelectedVoiceByName","voiceName","speech","possibleVoices","selectedVoice","defaultVoice","speechOutputActive","voices","default","newSelectedVoice","combineReducers","NavigationItem","icon","route","NAVIGATION_ITEM","NEW_GAME","NEW_TRAINING","GAME","NOTIFICATIONS","STATISTICS","SETTINGS","SETTINGS_USER","SETTINGS_PATH","SETTINGS_SPEECH","SETTINGS_PERMISSIONS","ABOUT","LOGIN","LOGOUT","DropdownTextfield","iconFactory","choices","showDropdownToggle","display","position","top","left","placeholder","onChange","e","onInputChange","borderTopRightRadius","borderBottomRightRadius","textAlign","autoFocus","Toggle","borderLeftWidth","Menu","minWidth","choice","getTextForChoice","onDropdownClick","dropdownPropertyName","documentUtil","setTitlePrefix","titlePrefix","prefix","document","SCORE_CHOICES","NewGameConfig","initialState","selectedPlayers","colStyle","marginBottom","colStyleButton","swapPlayerSelection","bind","assertThisInitialized","handleScoreChange","handleUnregisteredUserChange","handleCheckInModeChange","handleCheckOutModeChange","onStartNewGameButtonClicked","startNewGame","playerIconFactory","isFetchingUsers","selected","playableUser","getPlayableUserByName","memorizeState","selectedPlayerIndex","player","swapped","reverse","isValidScore","test","validateGameConfig","gameRunning","preventDefault","validationMessages","showWarning","validationMessagesToListEntries","listEntries","userId","userName","Number","history","playerName","placement","overlay","_this3","className","xs","sm","input_DropdownTextfield","newValue","changeSelectedPlayer","xsOffset","smOffset","block","defaultValue","mode","bsSize","disabled","getMemoryKeyByProps","ownProps","putPlayerInFront","index","unshift","connect","fetchAllUsersFailed","ScoreButtons","margin","padding","toggleDouble","toggleTriple","cols","_loop","ToggleButtonGroup","vertical","ToggleButton","Player","borderRadius","activeBorder","blackBorder","rowStyle","borderedColStyle","border","pStyle","fontWeight","pStyleSmall","fontSize","pStyleBig","borderTopLeftRadius","borderRight","borderTop","borderBottomLeftRadius","dart1","borderLeft","dart2","dart3","aufnahme","getDarts","Game","gameFinishedModalShow","rematchStartingPlayer","paddingLeft","paddingRight","modalBodyStyle","handleGameFinishedModalClose","handleRematchStartingPlayerChanged","voice","utterance","SpeechSynthesisUtterance","speechSynthesis","speaking","cancel","setTimeout","speak","height","xsPush","smPush","borderBottom","toggleSpeechOutput","xsPull","smPull","PlayerContainer","ScoreButtonsContainer","dialogClassName","onHide","keyboard","backdrop","archiveGame","rematch","marginLeft","exit","localStorageService","localStorage","getItem","setItem","GamesBarChart","es6","dataKey","labelFormatter","isAnimationActive","stackId","fill","DartsBarChart","interval","StackLoader","label","DartsRadarChart","sortAndFillData","sortedData","existing","getExisitingScore","windowWidth","innerWidth","screen","windowHeight","innerHeight","cx","cy","outerRadius","angle","scale","stroke","fillOpacity","OnlyForLoggedInUsers","children","marginTop","showLogin","DART_CHART_TYPE_BAR","Statistics","dartChartType","tableStyle","borderCollapse","verticalAlign","dartsBarChartRef","createRef","dartsRadarChartRef","handleDartChartTypeChange","fetchStatistics","scrollRef","getRefForDartChartType","scrollIntoView","behavior","OnlyForLoggedInUsersContainer","isFetchingStatistics","loaders_StackLoader","createStatisticsView","createDartsView","createGamesView","responsive","colSpan","rowSpan","getDartCheckoutRate","ref","statistics_DartsBarChart","statistics_DartsRadarChart","getWinRate","statistics_GamesBarChart","getRate","possible","rate","isNaN","SpeechSettings","componentClass","maxWidth","onSelectedVoiceChange","possibleVoice","CustomDropDownMenuItem","role","onSelect","NavigationBarDropdown","menuClassName","right","fullWidth","noCaret","withCaret","general_CustomDropDownMenuItem","NavigationBarContainer","unmergedItems","mergedItems","dropdownConfig","Error","DropdownConfig","showCaret","NavigationBar","lastWidth","mergeCount","bar","resetMergeCount","maxMergeCount","shouldMerge","addEventListener","prevState","snapshot","fixedChanged","fixedItems","filter","notFalse","leftMergedChanged","leftContainer","leftUnmergedChanged","rightMergedChanged","rightContainer","rightUnmergedChanged","prevCount","element","removeEventListener","offsetWidth","scrollWidth","count","singleDropdown","allUnmergedRightLinks","allMergedRightLinks","mergedRightLinks","unmergedRightLinks","allUnmergedLeftLinks","allMergedLeftLinks","mergedLeftLinks","unmergedLeftLinks","singleDropdownLinks","concat","divider","mergeRightLengthDiff","rightSliceIndex","mergeLeftLengthDiff","leftSliceIndex","alignCenter","justifyContent","small","navigationbar_NavigationBarDropdown","NavigationBarItem","react_router_dom_es","to","navigationItem","showText","nameMatch","DeletionConfirmationModal","handleNameChange","handlePasswordChange","match","Glyphicon","isDeleting","isButtonDisabled","deleteUser","UserSettings","currentPassword","newPassword","passwordRepeat","passwordsMatch","saveButtonDisabled","showDeletionConfirmationModal","handleUserNameChange","handleCurrentPasswordChange","handleNewPasswordChange","handlePasswordRepeatChange","modals_DeletionConfirmationModal","isModifyingUser","modifyUser","newName","Settings","userNameToPermit","permitButtonDisabled","playersInformation","mergeUsers","handleUserNameToPermitChange","buttonDisabled","navigationBarItems","navigationbar_NavigationBarItem","navigationBarDropdown","navContainer","navigationbar_NavigationBar","minHeight","overflowY","bottom","exact","path","render","settings_SpeechSettings","UserSettingsContainer","createPermissionSettings","addPlayerPermissionByName","createAuthorizationTable","_this4","hover","whiteSpace","textOverflow","playable","permitted","removePlayerPermission","addPlayerPermissionById","userInPlayableFound","userIdToPermit","permittedId","username","permittedUsername","userIdToRemove","LoginModal","restoreFocus","Title","isLoginDisabled","doLogin","showSignUp","SignUpModal","isSignupDisabled","doSignUp","signUp","About","fetchServerVersion","process","serverVersion","isFetchingServerVersion","ButtonTile","NavigationTile","main_ButtonTile","TileRow","columnsValue","columns","fixedSize","gridGap","gridTemplateColumns","COLUMNS","Main","main_TileRow","main_NavigationTile","unreadNotificationsCount","backgroundColor","toDate","date","options","replaceToday","isSameDay","Date","isToday","replaceYesterday","yesterday","setDate","getDate","isYesterday","toDoubleDigit","toString","getMonth","getFullYear","date1","date2","toDateString","s","Notifications","marginRight","isFetchingNotifications","markAsRead","timestamp","getHours","getMinutes","ids","FullscreenButton","fullscreen","toggleFullscreen","fullscreenchangeEventListener","isFullscreen","docElm","documentElement","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","NavbarLoginLoader","AppNavigationBar","app_FullscreenButton","gameItems","createGameLinks","gameDropdownConfig","userItemsUnmerged","createUserLinks","userItemsMerged","userDropdownConfig","singleDropdownConfig","zIndex","showOptionalText","loaders_NavbarLoginLoader","withRouter","App","appContainerRef","onBeforeUnload","onUnload","onunload","onbeforeunload","setPossibleVoices","getVoices","onvoiceschanged","returnValue","scrollTo","AppNavigationBarContainer","NewGameConfigContainer","assign","component","GameContainer","NotificationsContainer","StatisticsContainer","SettingsContainer","AboutContainer","MainContainer","LoginModalContainer","SignUpModalContainer","SimpleModalContainer","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","react_redux_es","AppContainer","getElementById"],"mappings":"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","file":"static/js/main.ec6a8eb8.chunk.js","sourcesContent":["export const START_NEW_GAME = 'START_NEW_GAME';\r\nexport const ADD_DART = 'ADD_DART';\r\nexport const UNDO_DART = 'UNDO_DART';\r\nexport const EXIT_GAME = 'EXIT_GAME';\r\nexport const REMATCH = 'REMATCH';\r\n\r\nexport const startNewGame = (players, score, checkInMode, checkOutMode, training) => ({\r\n    type: START_NEW_GAME,\r\n    players,\r\n    score,\r\n    checkInMode,\r\n    checkOutMode,\r\n    training\r\n});\r\nexport const addDart = (value, multiplier) => ({\r\n    type: ADD_DART,\r\n    value,\r\n    multiplier\r\n});\r\nexport const undoDart = () => ({\r\n    type: UNDO_DART\r\n});\r\nexport const exitGame = () => ({\r\n    type: EXIT_GAME\r\n});\r\nexport const rematch = (startingPlayer) => ({\r\n    type: REMATCH,\r\n    startingPlayer\r\n});","export const SINGLE_OUT = {key: 'SINGLE_OUT', text: 'Single-Out'};\r\nexport const DOUBLE_OUT = {key: 'DOUBLE_OUT', text: 'Double-Out'};\r\n\r\nexport const ALL_CHECKOUT_MODES = [SINGLE_OUT, DOUBLE_OUT];","export const SINGLE_IN = {key: 'SINGLE_IN', text: 'Single-In'};\r\nexport const DOUBLE_IN = {key: 'DOUBLE_IN', text: 'Double-In'};\r\n\r\nexport const ALL_CHECKIN_MODES = [SINGLE_IN, DOUBLE_IN];","import {DOUBLE_OUT, SINGLE_OUT} from \"../constants/checkoutModes\";\r\nimport {DOUBLE_IN, SINGLE_IN} from \"../constants/checkinModes\";\r\n\r\nfunction getTurnInformation(players, startScore, checkInMode, checkOutMode) {\r\n    let playerInformationList = [];\r\n    for (let i = 0; i < players.length; i++) {\r\n        playerInformationList[i] = {\r\n            score: startScore,\r\n            dartCount: 0,\r\n            average: 0.0,\r\n            checkInCondition: false\r\n        };\r\n    }\r\n\r\n    let playerIndex = 0;\r\n    let aufnahmeIndex = 0;\r\n    let dartIndex = 0;\r\n\r\n    let prevPlayerIndex;\r\n    let prevAufnahmeIndex;\r\n    let prevDartIndex;\r\n\r\n    let aufnahmeStartScore = startScore;\r\n    while (players[playerIndex].aufnahmen[aufnahmeIndex] !== undefined\r\n    && players[playerIndex].aufnahmen[aufnahmeIndex][dartIndex] !== undefined) {\r\n        prevPlayerIndex = playerIndex;\r\n        prevAufnahmeIndex = aufnahmeIndex;\r\n        prevDartIndex = dartIndex;\r\n\r\n        playerInformationList[playerIndex].dartCount++;\r\n\r\n        let dart = players[playerIndex].aufnahmen[aufnahmeIndex][dartIndex];\r\n        let dartScore = dart.value * dart.multiplier;\r\n        let checkOutCondition = checkOutMode === SINGLE_OUT || (checkOutMode === DOUBLE_OUT && dart.multiplier === 2);\r\n        let score = playerInformationList[playerIndex].score;\r\n        let checkInCondition = playerInformationList[playerIndex].checkInCondition;\r\n        if (dartIndex === 0) {\r\n            aufnahmeStartScore = score;\r\n        }\r\n        let thrownOver = isThrownOver(score, dart, checkOutMode);\r\n\r\n        if (!checkInCondition) {\r\n            checkInCondition = checkInMode === SINGLE_IN || (checkInMode === DOUBLE_IN && dart.multiplier === 2);\r\n            playerInformationList[playerIndex].checkInCondition = checkInCondition;\r\n        }\r\n        if (checkInCondition) {\r\n            if (score - dartScore === 0 && checkOutCondition) { // ausgecheckt\r\n                score = 0;\r\n            } else if (thrownOver) { // ueberworfen\r\n                score = aufnahmeStartScore;\r\n            } else {\r\n                score -= dartScore;\r\n            }\r\n        }\r\n        playerInformationList[playerIndex].score = score;\r\n\r\n        if (!thrownOver && dartIndex < 2) {\r\n            dartIndex++;\r\n            continue;\r\n        }\r\n        dartIndex = 0;\r\n        if (playerIndex < players.length - 1) {\r\n            playerIndex++;\r\n        } else {\r\n            aufnahmeIndex++;\r\n            playerIndex = 0;\r\n        }\r\n    }\r\n    for (let i = 0; i < players.length; i++) {\r\n        let average = 0.0;\r\n        let aufnahmenCount = i === playerIndex ? players[i].aufnahmen.length - 1 : players[i].aufnahmen.length;\r\n        if (aufnahmenCount > 0) {\r\n            let currentAufnahmeScore = 0;\r\n            if (i === playerIndex) {\r\n                let currentAufnahme = players[i].aufnahmen[players[i].aufnahmen.length - 1];\r\n                for (let i = 0; i < currentAufnahme.length; i++) {\r\n                    currentAufnahmeScore += currentAufnahme[i].value * currentAufnahme[i].multiplier;\r\n                }\r\n            }\r\n            let scoreDifference = startScore - (playerInformationList[i].score + currentAufnahmeScore);\r\n            average = scoreDifference / aufnahmenCount;\r\n        }\r\n        // Bis zum erfolgreichen Check-In kann ansonsten ein negativer Average rauskommen\r\n        if (average < 0.0) {\r\n            average = 0.0;\r\n        }\r\n        average = average.toFixed(2);\r\n        playerInformationList[i].average = average;\r\n    }\r\n\r\n    return {\r\n        turnInformation: {\r\n            current: {playerIndex, aufnahmeIndex, dartIndex},\r\n            previous: {\r\n                playerIndex: prevPlayerIndex,\r\n                aufnahmeIndex: prevAufnahmeIndex,\r\n                dartIndex: prevDartIndex\r\n            }\r\n        },\r\n        playerInformation: playerInformationList\r\n    };\r\n}\r\n\r\nfunction isThrownOver(score, dart, checkOutMode) {\r\n    return score - dart.value * dart.multiplier <= (checkOutMode === SINGLE_OUT ? 0 : 1);\r\n}\r\n\r\nexport default getTurnInformation;","import {ADD_DART, EXIT_GAME, REMATCH, START_NEW_GAME, UNDO_DART} from \"../actions/game\";\r\nimport getTurnInformation from \"../services/gameInformationService\";\r\n\r\nfunction game(state = null, action) {\r\n    switch (action.type) {\r\n        case START_NEW_GAME:\r\n            let players = action.players;\r\n            initPlayers(players);\r\n            return {\r\n                players: players,\r\n                score: action.score,\r\n                checkInMode: action.checkInMode,\r\n                checkOutMode: action.checkOutMode,\r\n                training: action.training\r\n            };\r\n        case ADD_DART:\r\n            return addDart(state, {value: action.value, multiplier: action.multiplier});\r\n        case UNDO_DART:\r\n            return undoDart(state);\r\n        case EXIT_GAME:\r\n            return null;\r\n        case REMATCH:\r\n            let playersCopy = state.players.slice();\r\n            while (playersCopy[0] !== action.startingPlayer) {\r\n                playersCopy.push(playersCopy.shift());\r\n            }\r\n            initPlayers(playersCopy);\r\n            return {\r\n                ...state,\r\n                players: playersCopy,\r\n                announcementText: undefined,\r\n                winner: undefined\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction initPlayers(players) {\r\n    for (let i = 0; i < players.length; i++) {\r\n        players[i].aufnahmen = [];\r\n    }\r\n    players[0].aufnahmen[0] = [];\r\n}\r\n\r\nfunction addDart(state, dart) {\r\n    let multiplier = dart.multiplier;\r\n    if (dart.value === 25 && multiplier > 2) {\r\n        return state;\r\n    }\r\n    if (dart.value === 0 && multiplier !== 1) {\r\n        multiplier = 1;\r\n    }\r\n    let validatedDart = {...dart, multiplier};\r\n    let players = state.players;\r\n\r\n    let currentTurnInfo = getTurnInformation(players, state.score, state.checkInMode, state.checkOutMode).turnInformation.current;\r\n\r\n    players[currentTurnInfo.playerIndex].aufnahmen[currentTurnInfo.aufnahmeIndex][currentTurnInfo.dartIndex] = validatedDart;\r\n\r\n    let turnInfo = getTurnInformation(players, state.score, state.checkInMode, state.checkOutMode);\r\n    currentTurnInfo = turnInfo.turnInformation.current;\r\n\r\n    let announcementText = undefined;\r\n    if (players[currentTurnInfo.playerIndex].aufnahmen[currentTurnInfo.aufnahmeIndex] === undefined) {\r\n        players[currentTurnInfo.playerIndex].aufnahmen[currentTurnInfo.aufnahmeIndex] = [];\r\n\r\n        announcementText = state.players[currentTurnInfo.playerIndex].name + \", \"\r\n            + turnInfo.playerInformation[currentTurnInfo.playerIndex].score;\r\n    }\r\n\r\n    // Pruefen, ob jemand gewonnen hat\r\n    let winner;\r\n    for (let i = 0; i < turnInfo.playerInformation.length; i++) {\r\n        if (turnInfo.playerInformation[i].score === 0) {\r\n            winner = players[i];\r\n            announcementText = players[i].name + \" hat gewonnen!\";\r\n            break;\r\n        }\r\n    }\r\n    return {\r\n        ...state,\r\n        players: players,\r\n        announcementText,\r\n        winner\r\n    };\r\n}\r\n\r\nfunction undoDart(state) {\r\n    let players = state.players;\r\n\r\n    let currentTurnInfo = getTurnInformation(players, state.score, state.checkInMode, state.checkOutMode).turnInformation.current;\r\n    if (currentTurnInfo.playerIndex === 0 && currentTurnInfo.aufnahmeIndex === 0 && currentTurnInfo.dartIndex === 0) {\r\n        return state;\r\n    }\r\n    if (currentTurnInfo.dartIndex === 0) {\r\n        players[currentTurnInfo.playerIndex].aufnahmen.splice(currentTurnInfo.aufnahmeIndex, 1);\r\n    }\r\n\r\n    let previousTurnInfo = getTurnInformation(players, state.score, state.checkInMode, state.checkOutMode).turnInformation.previous;\r\n    players[previousTurnInfo.playerIndex].aufnahmen[previousTurnInfo.aufnahmeIndex].splice(previousTurnInfo.dartIndex, 1);\r\n\r\n    return {\r\n        ...state,\r\n        players: players,\r\n        announcementText: undefined,\r\n        winner: undefined\r\n    };\r\n}\r\n\r\nexport default game","export function fetchGet(url, onSuccess, onResponseNotOK, onError) {\r\n    return baseFetch(url, 'GET', {}, onSuccess, onResponseNotOK, onError);\r\n}\r\n\r\nexport function fetchPost(url, data, onSuccess, onResponseNotOK, onError) {\r\n    return baseFetch(url, 'POST', data, onSuccess, onResponseNotOK, onError);\r\n}\r\n\r\nexport function fetchPut(url, data, onSuccess, onResponseNotOK, onError) {\r\n    return baseFetch(url, 'PUT', data, onSuccess, onResponseNotOK, onError);\r\n}\r\n\r\nexport function fetchDelete(url, data, onSuccess, onResponseNotOK, onError) {\r\n    return baseFetch(url, 'DELETE', data, onSuccess, onResponseNotOK, onError);\r\n}\r\n\r\nfunction baseFetch(url, method, data, onSuccess, onResponseNotOK, onError) {\r\n    let fetchParameter = {\r\n        credentials: 'include'\r\n    };\r\n    if (method !== 'GET') {\r\n        fetchParameter = {\r\n            body: JSON.stringify(data),\r\n            headers: {'content-type': 'application/json'},\r\n            method: method,\r\n            credentials: 'include'\r\n        }\r\n    }\r\n    return fetch(url, fetchParameter)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                const contentType = response.headers.get(\"content-type\");\r\n                if (contentType && contentType.indexOf(\"application/json\") !== -1) {\r\n                    return response.json();\r\n                } else if (contentType && contentType.indexOf(\"text/plain\") !== -1) {\r\n                    return response.text();\r\n                }\r\n                return \"\";\r\n            }\r\n            return response.json()\r\n                .then(json => {\r\n                    onResponseNotOK(json);\r\n                    return Promise.reject(\"Error fetching \" + url + \": Status: \" + json.status + \"; Message: \" + json.message)\r\n                });\r\n        }, error => {\r\n            onError(error);\r\n            return Promise.reject(\"Error fetching \" + url + \": \" + error);\r\n        })\r\n        .then(json => onSuccess(json), error => console.error(error))\r\n}\r\n","const PRODUCTION_CLIENT_HOSTNAME = \"pheru.github.io\";\r\nconst PRODUCTION_HOST = \"https://darts.pheru.de\";\r\n\r\nconst DEV_PROTOCOL = \"https:\";\r\nconst DEV_PORT = \"8443\";\r\n\r\nexport function getConfig() {\r\n    if (window.location.hostname === PRODUCTION_CLIENT_HOSTNAME) {\r\n        return configForHost(PRODUCTION_HOST);\r\n    } else {\r\n        return configForHost(devHostForHostname(window.location.hostname));\r\n    }\r\n}\r\n\r\nfunction devHostForHostname(hostname) {\r\n    return DEV_PROTOCOL + \"//\" + hostname + \":\" + DEV_PORT;\r\n}\r\n\r\nfunction configForHost(host) {\r\n    return {\r\n        resourceUrls: {\r\n            user: host + \"/user\",\r\n            playerPermission: host + \"/playerPermission\",\r\n            game: host + \"/game\",\r\n            statistic: host + \"/statistic\",\r\n            serverInformation: host + \"/serverInformation\",\r\n            notification: host + \"/notification\"\r\n        },\r\n        loginUrl: host + \"/login\",\r\n        logoutUrl: host + \"/logout\"\r\n    };\r\n}","export function ifEnterKey(action) {\r\n    return ifKey(13, action);\r\n}\r\n\r\nexport function ifEscKey(action) {\r\n    return ifKey(27, action);\r\n}\r\n\r\nfunction ifKey(keyCode, action) {\r\n    return function (target) {\r\n        if (target.keyCode === keyCode) {\r\n            action();\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport {Button, Glyphicon, Modal} from \"react-bootstrap\";\r\nimport PropTypes from 'prop-types';\r\nimport {ifEnterKey, ifEscKey} from \"../../util/functionUtil\";\r\n\r\nexport const TYPE_INFORMATION = \"TYPE_INFORMATION\";\r\nexport const TYPE_WARNING = \"TYPE_WARNING\";\r\nexport const TYPE_ERROR = \"TYPE_ERROR\";\r\nexport const TYPE_CONFIRMATION = \"TYPE_CONFIRMATION\";\r\n\r\nclass SimpleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let appearance = this.props.item.modalType !== undefined ?\r\n            this.getAppearanceByModalType(this.props.item.modalType)\r\n            : this.getAppearanceByModalType(TYPE_INFORMATION);\r\n        this.state = {\r\n            appearance: appearance\r\n        };\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.item.modalType !== this.props.item.modalType\r\n            && this.props.item.modalType !== undefined) {\r\n            let appearance = this.getAppearanceByModalType(this.props.item.modalType);\r\n            this.setState({\r\n                appearance: appearance\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Modal show={this.props.show} onKeyDown={(target) => {\r\n            if (this.props.item.modalType === TYPE_INFORMATION\r\n                || this.props.item.modalType === TYPE_WARNING\r\n                || this.props.item.modalType === TYPE_ERROR) {\r\n                ifEnterKey(this.props.hide)(target);\r\n            }\r\n            ifEscKey(this.props.hide)(target);\r\n        }}>\r\n            <Modal.Body style={{paddingTop: 0, paddingBottom: 0}}>\r\n                <h3>\r\n                    <Glyphicon glyph={this.state.appearance.glyph}\r\n                               style={{color: this.state.appearance.color}}/>\r\n                    <strong> {this.props.item.title}</strong>\r\n                </h3>\r\n                <h4>{this.props.item.message}</h4>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button style={{width: 100}} bsStyle={this.state.appearance.bsStyle}\r\n                        onClick={() => {\r\n                            if (this.props.item.onConfirm) {\r\n                                this.props.item.onConfirm();\r\n                            }\r\n                            this.props.hide();\r\n                        }}>\r\n                    {this.props.item.modalType === TYPE_CONFIRMATION ? \"Ja\" : \"OK\"}\r\n                </Button>\r\n                {this.props.item.modalType === TYPE_CONFIRMATION &&\r\n                <Button style={{width: 100}} bsStyle={this.state.appearance.bsStyle}\r\n                        onClick={() => {\r\n                            if (this.props.item.onCancel) {\r\n                                this.props.item.onCancel();\r\n                            }\r\n                            this.props.hide();\r\n                        }}>\r\n                    Nein\r\n                </Button>}\r\n            </Modal.Footer>\r\n        </Modal>;\r\n    }\r\n\r\n    getAppearanceByModalType(modalType) {\r\n        switch (modalType) {\r\n            case TYPE_ERROR:\r\n                return {\r\n                    glyph: \"remove-sign\",\r\n                    color: \"#d9534f\",\r\n                    bsStyle: \"danger\"\r\n                };\r\n            case TYPE_WARNING:\r\n                return {\r\n                    glyph: \"alert\",\r\n                    color: \"#f0ad4e\",\r\n                    bsStyle: \"warning\"\r\n                };\r\n            case TYPE_INFORMATION:\r\n                return {\r\n                    glyph: \"info-sign\",\r\n                    color: \"#5bc0de\",\r\n                    bsStyle: \"info\"\r\n                };\r\n            case TYPE_CONFIRMATION:\r\n                return {\r\n                    glyph: \"question-sign\",\r\n                    color: \"#337ab7\",\r\n                    bsStyle: \"primary\"\r\n                };\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\n\r\nSimpleModal.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    item: PropTypes.object.isRequired,\r\n    hide: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SimpleModal;","import {TYPE_ERROR, TYPE_INFORMATION, TYPE_WARNING, TYPE_CONFIRMATION} from \"../components/modals/SimpleModal\";\r\n\r\nexport const HIDE_CURRENT_MODAL = \"HIDE_CURRENT_MODAL\";\r\nexport const SHOW_MODAL = \"SHOW_MODAL\";\r\n\r\nexport const hideCurrent = () => ({\r\n    type: HIDE_CURRENT_MODAL\r\n});\r\n\r\nexport const showConfirmation = (title, message, onConfirm, onCancel) => ({\r\n    type: SHOW_MODAL,\r\n    modalType: TYPE_CONFIRMATION,\r\n    title,\r\n    message,\r\n    onConfirm,\r\n    onCancel\r\n});\r\nexport const showInformation = (title, message) => ({\r\n    type: SHOW_MODAL,\r\n    modalType: TYPE_INFORMATION,\r\n    title,\r\n    message\r\n});\r\nexport const showWarning = (title, message) => ({\r\n    type: SHOW_MODAL,\r\n    modalType: TYPE_WARNING,\r\n    title,\r\n    message\r\n});\r\nexport const showError = (title, message) => ({\r\n    type: SHOW_MODAL,\r\n    modalType: TYPE_ERROR,\r\n    title,\r\n    message\r\n});","import {logout} from \"../actions/user\";\r\nimport {showInformation} from \"../actions/modal\";\r\n\r\nexport function defaultErrorHandling(dispatch, response, errorAction) {\r\n    if (response.status === 401) {\r\n        dispatch(logout());\r\n        if (response.message === \"JWT expired!\") {\r\n            dispatch(showInformation(\"Deine Sitzung ist abgelaufen\", \"Bitte melde dich erneut an\"));\r\n        } else {\r\n            dispatch(errorAction);\r\n        }\r\n    } else {\r\n        dispatch(errorAction);\r\n    }\r\n}\r\n","import {getConfig} from \"../services/configService\";\r\nimport {fetchDelete, fetchGet, fetchPost} from \"../services/fetchService\";\r\nimport {showError} from \"./modal\";\r\nimport {defaultErrorHandling} from \"../util/actionUtil\";\r\n\r\nexport const REQUEST_FETCH_PERMITTED_USERS = 'REQUEST_FETCH_PERMITTED_USERS';\r\nexport const FETCH_PERMITTED_USERS_SUCCESSFUL = 'FETCH_PERMITTED_USERS_SUCCESSFUL';\r\nexport const FETCH_PERMITTED_USERS_FAILED = 'FETCH_PERMITTED_USERS_FAILED';\r\n\r\nexport const REQUEST_FETCH_PLAYABLE_USERS = 'REQUEST_FETCH_PLAYABLE_USERS';\r\nexport const FETCH_PLAYABLE_USERS_SUCCESSFUL = 'FETCH_PLAYABLE_USERS_SUCCESSFUL';\r\nexport const FETCH_PLAYABLE_USERS_FAILED = 'FETCH_PLAYABLE_USERS_FAILED';\r\n\r\nexport const REQUEST_UPDATE_PLAYER_PERMISSION = 'REQUEST_UPDATE_PLAYER_PERMISSION';\r\nexport const ADD_PLAYER_PERMISSION_SUCCESSFUL = 'ADD_PLAYER_PERMISSION_SUCCESSFUL';\r\nexport const REMOVE_PLAYER_PERMISSION_SUCCESSFUL = 'REMOVE_PLAYER_PERMISSION_SUCCESSFUL';\r\nexport const UPDATE_PLAYER_PERMISSION_FAILED = 'UPDATE_PLAYER_PERMISSION_FAILED';\r\n\r\nexport const requestFetchPermittedUsers = () => ({\r\n    type: REQUEST_FETCH_PERMITTED_USERS\r\n});\r\nexport const fetchPermittedUsersSuccessful = (users) => ({\r\n    type: FETCH_PERMITTED_USERS_SUCCESSFUL,\r\n    users\r\n});\r\nexport const fetchPermittedUsersFailed = (message) => ({\r\n    type: FETCH_PERMITTED_USERS_FAILED,\r\n    message\r\n});\r\nexport const requestFetchPlayableUsers = () => ({\r\n    type: REQUEST_FETCH_PLAYABLE_USERS\r\n});\r\nexport const fetchPlayableUsersSuccessful = (users) => ({\r\n    type: FETCH_PLAYABLE_USERS_SUCCESSFUL,\r\n    users\r\n});\r\nexport const fetchPlayableUsersFailed = (message) => ({\r\n    type: FETCH_PLAYABLE_USERS_FAILED,\r\n    message\r\n});\r\nexport const requestUpdatePlayerPermission = () => ({\r\n    type: REQUEST_UPDATE_PLAYER_PERMISSION\r\n});\r\nexport const addPlayerPermissionSuccessful = (changedUser) => ({\r\n    type: ADD_PLAYER_PERMISSION_SUCCESSFUL,\r\n    changedUser\r\n});\r\nexport const removePlayerPermissionSuccessful = (changedUserId) => ({\r\n    type: REMOVE_PLAYER_PERMISSION_SUCCESSFUL,\r\n    changedUserId\r\n});\r\nexport const updatePlayerPermissionFailed = (message) => ({\r\n    type: UPDATE_PLAYER_PERMISSION_FAILED,\r\n    message\r\n});\r\n\r\nexport function fetchPlayableUsers() {\r\n    return function (dispatch) {\r\n        dispatch(requestFetchPlayableUsers());\r\n        return fetchGet(getConfig().resourceUrls.playerPermission + \"/playable\",\r\n            json => dispatch(fetchPlayableUsersSuccessful(json)),\r\n            responseNotOk => {\r\n                dispatch(fetchPlayableUsersFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Failed to fetch playable users\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(fetchPlayableUsersFailed(error.message));\r\n                dispatch(showError(\"Failed to fetch playable users\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nexport function fetchPermittedUsers() {\r\n    return function (dispatch) {\r\n        dispatch(requestFetchPermittedUsers());\r\n        return fetchGet(getConfig().resourceUrls.playerPermission + \"/permitted\",\r\n            json => dispatch(fetchPermittedUsersSuccessful(json)),\r\n            responseNotOk => {\r\n                dispatch(fetchPermittedUsersFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Failed to fetch permitted users\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(fetchPermittedUsersFailed(error.message));\r\n                dispatch(showError(\"Failed to fetch permitted users\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nexport function addPlayerPermissionById(userIdToPermit) {\r\n    return function (dispatch) {\r\n        dispatch(requestUpdatePlayerPermission());\r\n        return fetchPost(getConfig().resourceUrls.playerPermission,\r\n            {\r\n                permittedId: userIdToPermit,\r\n            },\r\n            json => dispatch(addPlayerPermissionSuccessful(json)),\r\n            responseNotOk => {\r\n                dispatch(updatePlayerPermissionFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Failed to update permissions\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(updatePlayerPermissionFailed(error.message));\r\n                dispatch(showError(\"Failed to update permissions\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nexport function addPlayerPermissionByName(userNameToPermit) {\r\n    return function (dispatch) {\r\n        dispatch(requestUpdatePlayerPermission());\r\n        return fetchPost(getConfig().resourceUrls.playerPermission,\r\n            {\r\n                permittedUsername: userNameToPermit,\r\n            },\r\n            json => dispatch(addPlayerPermissionSuccessful(json)),\r\n            responseNotOk => {\r\n                dispatch(updatePlayerPermissionFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Failed to update permissions\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(updatePlayerPermissionFailed(error.message));\r\n                dispatch(showError(\"Failed to update permissions\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nexport function removePlayerPermission(userIdToRemove) {\r\n    return function (dispatch) {\r\n        dispatch(requestUpdatePlayerPermission());\r\n        return fetchDelete(getConfig().resourceUrls.playerPermission,\r\n            {\r\n                permittedId: userIdToRemove,\r\n            },\r\n            json => dispatch(removePlayerPermissionSuccessful(userIdToRemove)),\r\n            responseNotOk => {\r\n                dispatch(updatePlayerPermissionFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Failed to update permissions\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(updatePlayerPermissionFailed(error.message));\r\n                dispatch(showError(\"Failed to update permissions\", error.message));\r\n            }\r\n        );\r\n    };\r\n}","import {getConfig} from \"../services/configService\";\r\nimport {fetchGet, fetchPut} from \"../services/fetchService\";\r\nimport {showError} from \"./modal\";\r\nimport {defaultErrorHandling} from \"../util/actionUtil\";\r\n\r\nexport const REQUEST_FETCH_NOTIFICATIONS = 'REQUEST_FETCH_NOTIFICATIONS';\r\nexport const FETCH_NOTIFICATIONS_SUCCESSFUL = 'FETCH_NOTIFICATIONS_SUCCESSFUL';\r\nexport const FETCH_NOTIFICATIONS_FAILED = 'FETCH_NOTIFICATIONS_FAILED';\r\n\r\nexport const REQUEST_MARK_NOTIFICATIONS_AS_READ = 'REQUEST_MARK_NOTIFICATIONS_AS_READ';\r\nexport const MARK_NOTIFICATIONS_AS_READ_SUCCESSFUL = 'MARK_NOTIFICATIONS_AS_READ_SUCCESSFUL';\r\nexport const MARK_NOTIFICATIONS_AS_READ_FAILED = 'MARK_NOTIFICATIONS_AS_READ_FAILED';\r\n\r\nexport const requestFetchNotifications = () => ({\r\n    type: REQUEST_FETCH_NOTIFICATIONS\r\n});\r\nexport const fetchNotificationsSuccessful = (notifications) => ({\r\n    type: FETCH_NOTIFICATIONS_SUCCESSFUL,\r\n    notifications\r\n});\r\nexport const fetchNotificationsFailed = (message) => ({\r\n    type: FETCH_NOTIFICATIONS_FAILED,\r\n    message\r\n});\r\n\r\nexport const requestMarkNotificationsAsRead = (notificationIds) => ({\r\n    type: REQUEST_MARK_NOTIFICATIONS_AS_READ,\r\n    notificationIds\r\n});\r\nexport const markNotificationsAsReadSuccessful = (notifications) => ({\r\n    type: MARK_NOTIFICATIONS_AS_READ_SUCCESSFUL,\r\n    notifications\r\n});\r\nexport const markNotificationsAsReadFailed = (message) => ({\r\n    type: MARK_NOTIFICATIONS_AS_READ_FAILED,\r\n    message\r\n});\r\n\r\nexport function fetchNotifications() {\r\n    return function (dispatch) {\r\n        dispatch(requestFetchNotifications());\r\n        return fetchGet(getConfig().resourceUrls.notification,\r\n            json => dispatch(fetchNotificationsSuccessful(json)),\r\n            responseNotOk => {\r\n                dispatch(fetchNotificationsFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Failed to fetch notifications\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(fetchNotificationsFailed(error.message));\r\n                dispatch(showError(\"Failed to fetch notifications\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nexport function markNotificationsAsRead(notificationIds) {\r\n    return function (dispatch) {\r\n        dispatch(requestMarkNotificationsAsRead(notificationIds));\r\n        return fetchPut(getConfig().resourceUrls.notification,\r\n            {\r\n                ids: notificationIds,\r\n                read: true\r\n            },\r\n            json => dispatch(markNotificationsAsReadSuccessful(json)),\r\n            responseNotOk => {\r\n                dispatch(markNotificationsAsReadFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Failed to update notifications\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(markNotificationsAsReadFailed(error.message));\r\n                dispatch(showError(\"Failed to update notifications\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\n","import {fetchDelete, fetchGet, fetchPost, fetchPut} from \"../services/fetchService\";\r\nimport {getConfig} from \"../services/configService\";\r\nimport {fetchPermittedUsers, fetchPlayableUsers} from \"./playerPermission\";\r\nimport {showError} from \"./modal\";\r\nimport {defaultErrorHandling} from \"../util/actionUtil\";\r\nimport {fetchNotifications} from \"./notifications\";\r\n\r\nexport const SHOW_LOGIN_MODAL = \"SHOW_LOGIN_MODAL\";\r\nexport const HIDE_LOGIN_MODAL = \"HIDE_LOGIN_MODAL\";\r\nexport const SHOW_SIGNUP_MODAL = \"SHOW_SIGNUP_MODAL\";\r\nexport const HIDE_SIGNUP_MODAL = \"HIDE_SIGNUP_MODAL\";\r\n\r\nexport const REQUEST_LOGIN = 'REQUEST_LOGIN';\r\nexport const LOGIN_SUCCESSFUL = 'LOGIN_SUCCESSFUL';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\n\r\nexport const REQUEST_LOGIN_BY_TOKEN = 'REQUEST_LOGIN_BY_TOKEN';\r\nexport const LOGIN_BY_TOKEN_SUCCESSFUL = 'LOGIN_BY_TOKEN_SUCCESSFUL';\r\nexport const LOGIN_BY_TOKEN_FAILED = 'LOGIN_BY_TOKEN_FAILED';\r\n\r\nexport const REQUEST_LOGOUT = 'REQUEST_LOGOUT';\r\nexport const LOGOUT_SUCCESSFUL = 'LOGOUT_SUCCESSFUL';\r\nexport const LOGOUT_FAILED = 'LOGOUT_FAILED';\r\n\r\nexport const REQUEST_SIGNUP = 'REQUEST_SIGNUP';\r\nexport const SIGNUP_SUCCESSFUL = 'SIGNUP_SUCCESSFUL';\r\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED';\r\n\r\nexport const REQUEST_MODIFY_USER = 'REQUEST_MODIFY_USER';\r\nexport const MODIFY_USER_SUCCESSFUL = 'MODIFY_USER_SUCCESSFUL';\r\nexport const MODIFY_USER_FAILED = 'MODIFY_USER_FAILED';\r\n\r\nexport const REQUEST_DELETE_USER = 'REQUEST_DELETE_USER';\r\nexport const DELETE_USER_SUCCESSFUL = 'DELETE_USER_SUCCESSFUL';\r\nexport const DELETE_USER_FAILED = 'DELETE_USER_FAILED';\r\n\r\nexport const showLoginModal = () => ({\r\n    type: SHOW_LOGIN_MODAL\r\n});\r\nexport const hideLoginModal = () => ({\r\n    type: HIDE_LOGIN_MODAL\r\n});\r\nexport const showSignUpModal = () => ({\r\n    type: SHOW_SIGNUP_MODAL\r\n});\r\nexport const hideSignUpModal = () => ({\r\n    type: HIDE_SIGNUP_MODAL\r\n});\r\nexport const requestLogin = () => ({\r\n    type: REQUEST_LOGIN\r\n});\r\nexport const loginSuccessful = () => ({\r\n    type: LOGIN_SUCCESSFUL\r\n});\r\nexport const loginFailed = (message) => ({\r\n    type: LOGIN_FAILED,\r\n    message\r\n});\r\nexport const requestLoginByToken = () => ({\r\n    type: REQUEST_LOGIN_BY_TOKEN\r\n});\r\nexport const loginByTokenSuccessful = (userInfo) => ({\r\n    type: LOGIN_BY_TOKEN_SUCCESSFUL,\r\n    userInfo\r\n});\r\nexport const loginByTokenFailed = () => ({\r\n    type: LOGIN_BY_TOKEN_FAILED\r\n});\r\nexport const requestLogout = () => ({\r\n    type: REQUEST_LOGOUT\r\n});\r\nexport const logoutSuccessful = () => ({\r\n    type: LOGOUT_SUCCESSFUL\r\n});\r\nexport const logoutFailed = () => ({\r\n    type: LOGOUT_FAILED\r\n});\r\nexport const requestSignUp = () => ({\r\n    type: REQUEST_SIGNUP\r\n});\r\nexport const signUpSuccessful = () => ({\r\n    type: SIGNUP_SUCCESSFUL\r\n});\r\nexport const signUpFailed = (message) => ({\r\n    type: SIGNUP_FAILED,\r\n    message\r\n});\r\nexport const requestModifyUser = () => ({\r\n    type: REQUEST_MODIFY_USER\r\n});\r\nexport const modifyUserSuccessful = () => ({\r\n    type: MODIFY_USER_SUCCESSFUL\r\n});\r\nexport const modifyUserFailed = (message) => ({\r\n    type: MODIFY_USER_FAILED,\r\n    message\r\n});\r\nexport const requestDeleteUser = () => ({\r\n    type: REQUEST_DELETE_USER\r\n});\r\nexport const deleteUserSuccessful = () => ({\r\n    type: DELETE_USER_SUCCESSFUL\r\n});\r\nexport const deleteUserFailed = (message) => ({\r\n    type: DELETE_USER_FAILED,\r\n    message\r\n});\r\n\r\nexport function signUp(name, password) {\r\n    return function (dispatch) {\r\n        dispatch(requestSignUp());\r\n        return fetchPost(getConfig().resourceUrls.user,\r\n            {name, password},\r\n            json => {\r\n                dispatch(signUpSuccessful());\r\n                dispatch(login(name, password));\r\n            },\r\n            responseNotOk => {\r\n                dispatch(signUpFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Sign-up failed\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(signUpFailed(error.message));\r\n                dispatch(showError(\"Sign-up failed\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nexport function login(name, password) {\r\n    return function (dispatch) {\r\n        dispatch(requestLogin());\r\n        return fetchPost(getConfig().loginUrl,\r\n            {name, password},\r\n            json => {\r\n                dispatch(loginSuccessful());\r\n                dispatch(loginByToken(true));\r\n            },\r\n            responseNotOk => {\r\n                dispatch(loginFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Login failed\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(loginFailed(error.message));\r\n                dispatch(showError(\"Login failed\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nexport function loginByToken(showErrorOnFailure) {\r\n    return function (dispatch) {\r\n        dispatch(requestLoginByToken());\r\n        return fetchGet(getConfig().resourceUrls.user,\r\n            json => {\r\n                dispatch(loginByTokenSuccessful(json));\r\n                dispatch(fetchPlayableUsers());\r\n                dispatch(fetchPermittedUsers());\r\n                dispatch(fetchNotifications());\r\n            },\r\n            responseNotOk => {\r\n                dispatch(loginByTokenFailed());\r\n                if (showErrorOnFailure) {\r\n                    defaultErrorHandling(dispatch, responseNotOk, showError(\"Login by token failed\", responseNotOk.message));\r\n                }\r\n            },\r\n            error => {\r\n                dispatch(loginByTokenFailed());\r\n                dispatch(showError(\"Login by token failed\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nexport function logout() {\r\n    return function (dispatch) {\r\n        dispatch(requestLogout());\r\n        return fetchGet(getConfig().logoutUrl,\r\n            json => dispatch(logoutSuccessful()),\r\n            responseNotOk => {\r\n                dispatch(logoutFailed());\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Logout failed\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(logoutFailed());\r\n                dispatch(showError(\"Logout failed\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nexport function modifyUser(currentPassword, newName, newPassword) {\r\n    return function (dispatch) {\r\n        dispatch(requestModifyUser());\r\n        return fetchPut(getConfig().resourceUrls.user,\r\n            {currentPassword, newName, newPassword},\r\n            json => {\r\n                dispatch(modifyUserSuccessful());\r\n                dispatch(loginByToken(true));\r\n            },\r\n            responseNotOk => {\r\n                dispatch(modifyUserFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Modify user failed\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(modifyUserFailed(error.message));\r\n                dispatch(showError(\"Modify user failed\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nexport function deleteUser(currentPassword) {\r\n    return function (dispatch) {\r\n        dispatch(requestDeleteUser());\r\n        return fetchDelete(getConfig().resourceUrls.user,\r\n            {currentPassword},\r\n            json => {\r\n                dispatch(deleteUserSuccessful());\r\n                dispatch(logout());\r\n            },\r\n            responseNotOk => {\r\n                dispatch(deleteUserFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Delete user failed\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(deleteUserFailed(error.message));\r\n                dispatch(showError(\"Delete user failed\", error.message));\r\n            }\r\n        );\r\n    };\r\n}","import {\r\n    DELETE_USER_FAILED,\r\n    DELETE_USER_SUCCESSFUL,\r\n    HIDE_LOGIN_MODAL,\r\n    HIDE_SIGNUP_MODAL,\r\n    LOGIN_BY_TOKEN_FAILED,\r\n    LOGIN_BY_TOKEN_SUCCESSFUL,\r\n    LOGIN_FAILED,\r\n    LOGIN_SUCCESSFUL,\r\n    LOGOUT_FAILED,\r\n    LOGOUT_SUCCESSFUL, MODIFY_USER_FAILED, MODIFY_USER_SUCCESSFUL, REQUEST_DELETE_USER,\r\n    REQUEST_LOGIN,\r\n    REQUEST_LOGIN_BY_TOKEN,\r\n    REQUEST_LOGOUT, REQUEST_MODIFY_USER, REQUEST_SIGNUP,\r\n    SHOW_LOGIN_MODAL,\r\n    SHOW_SIGNUP_MODAL, SIGNUP_FAILED, SIGNUP_SUCCESSFUL,\r\n} from \"../actions/user\";\r\n\r\nfunction user(state = {\r\n    id: undefined,\r\n    name: undefined,\r\n    showLoginModal: false,\r\n    showSignUpModal: false,\r\n    isLoggedIn: false,\r\n    isLoggingIn: false,\r\n    isLoggingOut: false,\r\n    isSigningUp: false,\r\n    isModifying: false,\r\n    isDeletingUser: false\r\n}, action) {\r\n    switch (action.type) {\r\n        case SHOW_LOGIN_MODAL:\r\n            return {\r\n                ...state,\r\n                showLoginModal: true\r\n            };\r\n        case HIDE_LOGIN_MODAL:\r\n            return {\r\n                ...state,\r\n                showLoginModal: false\r\n            };\r\n        case SHOW_SIGNUP_MODAL:\r\n            return {\r\n                ...state,\r\n                showSignUpModal: true\r\n            };\r\n        case HIDE_SIGNUP_MODAL:\r\n            return {\r\n                ...state,\r\n                showSignUpModal: false\r\n            };\r\n        case REQUEST_LOGIN:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true\r\n            };\r\n        case LOGIN_SUCCESSFUL:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                showLoginModal: false\r\n            };\r\n        case LOGIN_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false\r\n            };\r\n        case REQUEST_LOGIN_BY_TOKEN:\r\n            return {\r\n                ...state,\r\n                name: undefined,\r\n                isLoggedIn: false,\r\n                isLoggingIn: true\r\n            };\r\n        case LOGIN_BY_TOKEN_SUCCESSFUL:\r\n            return {\r\n                ...state,\r\n                id: action.userInfo.id,\r\n                name: action.userInfo.name,\r\n                isLoggedIn: true,\r\n                isLoggingIn: false,\r\n                showLoginModal: false\r\n            };\r\n        case LOGIN_BY_TOKEN_FAILED:\r\n            return {\r\n                ...state,\r\n                id: undefined,\r\n                name: undefined,\r\n                isLoggedIn: false,\r\n                isLoggingIn: false\r\n            };\r\n        case REQUEST_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggingOut: true\r\n            };\r\n        case LOGOUT_SUCCESSFUL:\r\n            return {\r\n                ...state,\r\n                id: undefined,\r\n                name: undefined,\r\n                isLoggedIn: false,\r\n                isLoggingOut: false\r\n            };\r\n        case LOGOUT_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoggingOut: false\r\n            };\r\n        case REQUEST_SIGNUP:\r\n            return {\r\n                ...state,\r\n                isSigningUp: true\r\n            };\r\n        case SIGNUP_SUCCESSFUL:\r\n            return {\r\n                ...state,\r\n                isSigningUp: false,\r\n                showSignUpModal: false\r\n            };\r\n        case SIGNUP_FAILED:\r\n            return {\r\n                ...state,\r\n                isSigningUp: false\r\n            };\r\n        case REQUEST_MODIFY_USER:\r\n            return {\r\n                ...state,\r\n                isModifying: true\r\n            };\r\n        case MODIFY_USER_SUCCESSFUL:\r\n        case MODIFY_USER_FAILED:\r\n            return {\r\n                ...state,\r\n                isModifying: false\r\n            };\r\n        case REQUEST_DELETE_USER:\r\n            return {\r\n                ...state,\r\n                isDeletingUser: true\r\n            };\r\n        case DELETE_USER_SUCCESSFUL:\r\n        case DELETE_USER_FAILED:\r\n            return {\r\n                ...state,\r\n                isDeletingUser: false\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default user;","import {\r\n    ADD_PLAYER_PERMISSION_SUCCESSFUL,\r\n    FETCH_PERMITTED_USERS_FAILED,\r\n    FETCH_PERMITTED_USERS_SUCCESSFUL,\r\n    FETCH_PLAYABLE_USERS_FAILED,\r\n    FETCH_PLAYABLE_USERS_SUCCESSFUL,\r\n    REMOVE_PLAYER_PERMISSION_SUCCESSFUL,\r\n    REQUEST_FETCH_PERMITTED_USERS,\r\n    REQUEST_FETCH_PLAYABLE_USERS,\r\n    REQUEST_UPDATE_PLAYER_PERMISSION,\r\n    UPDATE_PLAYER_PERMISSION_FAILED\r\n} from \"../actions/playerPermission\";\r\nimport {LOGOUT_SUCCESSFUL} from \"../actions/user\";\r\n\r\nfunction playerPermission(state = {\r\n    playableUsers: [],\r\n    isFetchingPlayableUsers: false,\r\n    fetchPlayableUsersFailed: false,\r\n\r\n    permittedUsers: [],\r\n    isFetchingPermittedUsers: false,\r\n    fetchPermittedUsersFailed: false,\r\n\r\n    isUpdatingPlayerPermission: false,\r\n    updatePlayerPermissionFailed: false\r\n}, action) {\r\n    switch (action.type) {\r\n        case REQUEST_FETCH_PLAYABLE_USERS:\r\n            return {\r\n                ...state,\r\n                isFetchingPlayableUsers: true,\r\n                fetchPlayableUsersFailed: false\r\n            };\r\n        case FETCH_PLAYABLE_USERS_SUCCESSFUL:\r\n            return {\r\n                ...state,\r\n                isFetchingPlayableUsers: false,\r\n                fetchPlayableUsersFailed: false,\r\n                playableUsers: action.users\r\n            };\r\n        case FETCH_PLAYABLE_USERS_FAILED:\r\n            return {\r\n                ...state,\r\n                isFetchingPlayableUsers: false,\r\n                fetchPlayableUsersFailed: true,\r\n                playableUsers: []\r\n            };\r\n        case REQUEST_FETCH_PERMITTED_USERS:\r\n            return {\r\n                ...state,\r\n                isFetchingPermittedUsers: true,\r\n                fetchPermittedUsersFailed: false\r\n            };\r\n        case FETCH_PERMITTED_USERS_SUCCESSFUL:\r\n            return {\r\n                ...state,\r\n                isFetchingPermittedUsers: false,\r\n                fetchPermittedUsersFailed: false,\r\n                permittedUsers: action.users\r\n            };\r\n        case FETCH_PERMITTED_USERS_FAILED:\r\n            return {\r\n                ...state,\r\n                isFetchingPermittedUsers: false,\r\n                fetchPermittedUsersFailed: true,\r\n                permittedUsers: []\r\n            };\r\n        case REQUEST_UPDATE_PLAYER_PERMISSION:\r\n            return {\r\n                ...state,\r\n                isUpdatingPlayerPermission: true,\r\n                updatePlayerPermissionFailed: false\r\n            };\r\n        case ADD_PLAYER_PERMISSION_SUCCESSFUL:\r\n            let permittedUsersAfterAdd = state.permittedUsers.slice();\r\n            permittedUsersAfterAdd.push(action.changedUser);\r\n            return {\r\n                ...state,\r\n                isUpdatingPlayerPermission: false,\r\n                updatePlayerPermissionFailed: false,\r\n                permittedUsers: permittedUsersAfterAdd\r\n            };\r\n        case REMOVE_PLAYER_PERMISSION_SUCCESSFUL:\r\n            let permittedUsersAfterRemove = state.permittedUsers.slice();\r\n            let indexToRemove = permittedUsersAfterRemove.map(user => user.id).indexOf(action.changedUserId);\r\n            if (indexToRemove !== -1) {\r\n                permittedUsersAfterRemove.splice(indexToRemove, 1);\r\n            }\r\n            return {\r\n                ...state,\r\n                isUpdatingPlayerPermission: false,\r\n                updatePlayerPermissionFailed: false,\r\n                permittedUsers: permittedUsersAfterRemove\r\n            };\r\n        case UPDATE_PLAYER_PERMISSION_FAILED:\r\n            return {\r\n                ...state,\r\n                isUpdatingPlayerPermission: false,\r\n                updatePlayerPermissionFailed: true\r\n            };\r\n        case LOGOUT_SUCCESSFUL:\r\n            return {\r\n                ...state,\r\n                playableUsers: [],\r\n                permittedUsers: []\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default playerPermission;","import {fetchPost} from \"../services/fetchService\";\r\nimport {getConfig} from \"../services/configService\";\r\nimport {showError} from \"./modal\";\r\nimport {defaultErrorHandling} from \"../util/actionUtil\";\r\n\r\nexport const REQUEST_ARCHIVE_GAME = 'REQUEST_ARCHIVE_GAME';\r\nexport const ARCHIVE_GAME_SUCCESSFUL = 'ARCHIVE_GAME_SUCCESSFUL';\r\nexport const ARCHIVE_GAME_FAILED = 'ARCHIVE_GAME_FAILED';\r\n\r\nexport const requestArchiveGame = () => ({\r\n    type: REQUEST_ARCHIVE_GAME\r\n});\r\nexport const archiveGameSuccessful = () => ({\r\n    type: ARCHIVE_GAME_SUCCESSFUL\r\n});\r\nexport const archiveGameFailed = (message) => ({\r\n    type: ARCHIVE_GAME_FAILED,\r\n    message\r\n});\r\n\r\nexport function archiveGame(game) {\r\n    return function (dispatch) {\r\n        dispatch(requestArchiveGame());\r\n        return fetchPost(getConfig().resourceUrls.game,\r\n            game,\r\n            json => dispatch(archiveGameSuccessful()),\r\n            responseNotOk => {\r\n                dispatch(archiveGameFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Could not archive game\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(archiveGameFailed(error.message));\r\n                dispatch(showError(\"Could not archive game\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\n","import {ARCHIVE_GAME_FAILED, ARCHIVE_GAME_SUCCESSFUL, REQUEST_ARCHIVE_GAME} from \"../actions/games\";\r\n\r\nfunction games(state = {\r\n    isArchiving: false\r\n}, action) {\r\n    switch (action.type) {\r\n        case REQUEST_ARCHIVE_GAME:\r\n            return {\r\n                ...state,\r\n                isArchiving: true\r\n            };\r\n        case ARCHIVE_GAME_SUCCESSFUL:\r\n            return {\r\n                ...state,\r\n                isArchiving: false\r\n            };\r\n        case ARCHIVE_GAME_FAILED:\r\n            return {\r\n                ...state,\r\n                isArchiving: false\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default games","export const MEMORIZE_STATE = 'MEMORIZE_STATE';\r\n\r\nexport const memorizeState = (key, state) => ({\r\n    type: MEMORIZE_STATE,\r\n    key,\r\n    state\r\n});\r\n\r\n\r\n\r\n","import {MEMORIZE_STATE} from \"../actions/stateMemory\";\r\n\r\nfunction stateMemory(state = {\r\n    states: {}\r\n}, action) {\r\n    switch (action.type) {\r\n        case MEMORIZE_STATE:\r\n            let newStates = {...state.states};\r\n            newStates[action.key] = action.state;\r\n            return {\r\n                ...state,\r\n                states: newStates\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default stateMemory\r\n","import {getConfig} from \"../services/configService\";\r\nimport {fetchGet} from \"../services/fetchService\";\r\nimport {showError} from \"./modal\";\r\nimport {defaultErrorHandling} from \"../util/actionUtil\";\r\n\r\nexport const REQUEST_FETCH_STATISTICS = 'REQUEST_FETCH_STATISTICS';\r\nexport const FETCH_STATISTICS_SUCCESSFUL = 'FETCH_STATISTICS_SUCCESSFUL';\r\nexport const FETCH_STATISTICS_FAILED = 'FETCH_STATISTICS_FAILED';\r\n\r\nexport const requestFetchStatistics = () => ({\r\n    type: REQUEST_FETCH_STATISTICS\r\n});\r\nexport const fetchStatisticsSuccessful = (data) => ({\r\n    type: FETCH_STATISTICS_SUCCESSFUL,\r\n    data\r\n});\r\nexport const fetchStatisticsFailed = (message) => ({\r\n    type: FETCH_STATISTICS_FAILED,\r\n    message\r\n});\r\n\r\nexport function fetchStatistics() {\r\n    return function (dispatch) {\r\n        dispatch(requestFetchStatistics());\r\n        return fetchGet(getConfig().resourceUrls.statistic,\r\n            json => dispatch(fetchStatisticsSuccessful(json)),\r\n            responseNotOk => {\r\n                dispatch(fetchStatisticsFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Failed to fetch statistics\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(fetchStatisticsFailed(error.message));\r\n                dispatch(showError(\"Failed to fetch statistics\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\n","export function sortPlayerByNameAsc(a, b) {\r\n    if (a.name > b.name) {\r\n        return 1;\r\n    }\r\n    if (a.name < b.name) {\r\n        return -1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function sortDartDataByScoreDesc(a, b) {\r\n    let scoreA = parseInt(a.score, 10);\r\n    let scoreB = parseInt(b.score, 10);\r\n    if (scoreA < scoreB) {\r\n        return 1;\r\n    }\r\n    if (scoreA > scoreB) {\r\n        return -1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst scoreBoardOrder = [20, 1, 18, 4, 13, 6, 10, 15, 2, 17, 3, 19, 7, 16, 8, 11, 14, 9, 12, 5];\r\n\r\nexport function sortDartDataByScoreBoardOrder(a, b) {\r\n    let scoreA = parseInt(a.score, 10);\r\n    let scoreB = parseInt(b.score, 10);\r\n    let scoreAIndex = scoreBoardOrder.indexOf(scoreA);\r\n    let scoreBIndex = scoreBoardOrder.indexOf(scoreB);\r\n\r\n    if (scoreAIndex > scoreBIndex) {\r\n        return 1;\r\n    }\r\n    if (scoreAIndex < scoreBIndex) {\r\n        return -1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function sortGameDataByOpponentAsc(a, b) {\r\n    if (a.opponent > b.opponent) {\r\n        return 1;\r\n    }\r\n    if (a.opponent < b.opponent) {\r\n        return -1;\r\n    }\r\n    return 0;\r\n}","import {FETCH_STATISTICS_FAILED, FETCH_STATISTICS_SUCCESSFUL, REQUEST_FETCH_STATISTICS} from \"../actions/statistics\";\r\nimport {sortDartDataByScoreDesc, sortGameDataByOpponentAsc} from \"../services/sortService\";\r\n\r\nfunction statistics(state = {\r\n    isFetching: false,\r\n    totalGames: 0,\r\n    totalDarts: 0,\r\n    possibleCheckoutDarts: 0,\r\n    checkoutDarts: 0,\r\n    gamesWon: 0,\r\n    gamesLost: 0,\r\n    dartData: [],\r\n    gamesData: []\r\n}, action) {\r\n    switch (action.type) {\r\n        case REQUEST_FETCH_STATISTICS:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            };\r\n        case FETCH_STATISTICS_SUCCESSFUL:\r\n            let dartData = [];\r\n            let darts = action.data.darts.countsPerScore;\r\n            for (let property in darts) {\r\n                if (darts.hasOwnProperty(property)) {\r\n                    dartData.push({\r\n                        score: property,\r\n                        singleCount: darts[property].singleCount,\r\n                        doubleCount: property === \"0\" ? undefined : darts[property].doubleCount,\r\n                        tripleCount: property === \"25\" || property === \"0\" ? undefined : darts[property].tripleCount\r\n                    });\r\n                }\r\n            }\r\n            dartData.sort(sortDartDataByScoreDesc);\r\n\r\n            let gamesData = [];\r\n            let games = action.data.games.countsPerPlayer;\r\n            for (let property in games) {\r\n                if (games.hasOwnProperty(property)) {\r\n                    gamesData.push({\r\n                        opponent: property,\r\n                        wonCount: games[property].wonCount,\r\n                        lostCount: games[property].lostCount\r\n                    });\r\n                }\r\n            }\r\n            gamesData.sort(sortGameDataByOpponentAsc);\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                gamesWon: action.data.games.wonCount,\r\n                gamesLost: action.data.games.lostCount,\r\n                totalDarts: action.data.darts.totalCount,\r\n                possibleCheckoutDarts: action.data.darts.possibleCheckoutCount,\r\n                checkoutDarts: action.data.darts.checkoutCount,\r\n                dartData,\r\n                gamesData\r\n            };\r\n        case FETCH_STATISTICS_FAILED:\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default statistics;","import {HIDE_CURRENT_MODAL, SHOW_MODAL} from \"../actions/modal\";\r\n\r\nfunction modal(state = {\r\n    show: false,\r\n    items: []\r\n}, action) {\r\n    switch (action.type) {\r\n        case SHOW_MODAL: {\r\n            let newItems = state.items.slice();\r\n            newItems.push({\r\n                modalType: action.modalType,\r\n                title: action.title,\r\n                message: action.message,\r\n                onConfirm: action.onConfirm,\r\n                onCancel: action.onCancel\r\n            });\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                show: true\r\n            };\r\n        }\r\n        case HIDE_CURRENT_MODAL: {\r\n            let newItems = state.items.slice();\r\n            newItems.shift();\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                show: newItems.length > 0\r\n            };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default modal","import {fetchGet} from \"../services/fetchService\";\r\nimport {getConfig} from \"../services/configService\";\r\nimport {showError} from \"./modal\";\r\nimport {defaultErrorHandling} from \"../util/actionUtil\";\r\n\r\nexport const REQUEST_SERVER_VERSION = 'REQUEST_SERVER_VERSION';\r\nexport const FETCH_SERVER_VERSION_SUCCESSFUL = 'FETCH_SERVER_VERSION_SUCCESSFUL';\r\nexport const FETCH_SERVER_VERSION_FAILED = 'FETCH_SERVER_VERSION_FAILED';\r\n\r\nexport const requestServerVersion = () => ({\r\n    type: REQUEST_SERVER_VERSION\r\n});\r\nexport const fetchServerVersionSuccessful = (version) => ({\r\n    type: FETCH_SERVER_VERSION_SUCCESSFUL,\r\n    version\r\n});\r\nexport const fetchServerVersionFailed = (message) => ({\r\n    type: FETCH_SERVER_VERSION_FAILED,\r\n    message\r\n});\r\n\r\nexport function fetchServerVersion() {\r\n    return function (dispatch) {\r\n        dispatch(requestServerVersion());\r\n        return fetchGet(getConfig().resourceUrls.serverInformation,\r\n            json => dispatch(fetchServerVersionSuccessful(json)),\r\n            responseNotOk => {\r\n                dispatch(fetchServerVersionFailed(responseNotOk.message));\r\n                defaultErrorHandling(dispatch, responseNotOk, showError(\"Could not fetch server version\", responseNotOk.message));\r\n            },\r\n            error => {\r\n                dispatch(fetchServerVersionFailed(error.message));\r\n                dispatch(showError(\"Could not fetch server version\", error.message));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\n","import {\r\n    FETCH_SERVER_VERSION_FAILED,\r\n    FETCH_SERVER_VERSION_SUCCESSFUL,\r\n    REQUEST_SERVER_VERSION\r\n} from \"../actions/serverInformation\";\r\n\r\nfunction serverInformation(state = {\r\n    version: undefined,\r\n    isFetchingVersion: false\r\n}, action) {\r\n    switch (action.type) {\r\n        case REQUEST_SERVER_VERSION:\r\n            return {\r\n                ...state,\r\n                version: undefined,\r\n                isFetchingVersion: true\r\n            };\r\n        case FETCH_SERVER_VERSION_SUCCESSFUL:\r\n            return {\r\n                ...state,\r\n                version: action.version,\r\n                isFetchingVersion: false\r\n            };\r\n        case FETCH_SERVER_VERSION_FAILED:\r\n            return {\r\n                ...state,\r\n                version: \"Unbekannt\",\r\n                isFetchingVersion: false\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default serverInformation","import {\r\n    FETCH_NOTIFICATIONS_FAILED,\r\n    FETCH_NOTIFICATIONS_SUCCESSFUL,\r\n    MARK_NOTIFICATIONS_AS_READ_FAILED,\r\n    MARK_NOTIFICATIONS_AS_READ_SUCCESSFUL,\r\n    REQUEST_FETCH_NOTIFICATIONS,\r\n    REQUEST_MARK_NOTIFICATIONS_AS_READ\r\n} from \"../actions/notifications\";\r\nimport {LOGOUT_SUCCESSFUL} from \"../actions/user\";\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: false,\r\n    notifications: [],\r\n    unreadNotifications: []\r\n};\r\n\r\nfunction notifications(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case REQUEST_FETCH_NOTIFICATIONS:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            };\r\n        case FETCH_NOTIFICATIONS_SUCCESSFUL:\r\n            let unread = getUnreadNotifications(action.notifications);\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                notifications: action.notifications,\r\n                unreadNotifications: unread\r\n            };\r\n        case FETCH_NOTIFICATIONS_FAILED:\r\n            return INITIAL_STATE;\r\n        case REQUEST_MARK_NOTIFICATIONS_AS_READ:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            };\r\n        case MARK_NOTIFICATIONS_AS_READ_SUCCESSFUL:\r\n            let newNotifications = [];\r\n            for (let i = 0; i < state.notifications.length; i++) {\r\n                let notification = {...state.notifications[i]};\r\n                for (let j = 0; j < action.notifications.length; j++) {\r\n                    if (notification.id === action.notifications[j].id) {\r\n                        notification.read = action.notifications[j].read;\r\n                        break;\r\n                    }\r\n                }\r\n                newNotifications.push(notification);\r\n            }\r\n            let newUnread = getUnreadNotifications(newNotifications);\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                notifications: newNotifications,\r\n                unreadNotifications: newUnread\r\n            };\r\n        case MARK_NOTIFICATIONS_AS_READ_FAILED:\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            };\r\n        case LOGOUT_SUCCESSFUL:\r\n            return INITIAL_STATE;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction getUnreadNotifications(allNotifications) {\r\n    let unread = [];\r\n    for (let i = 0; i < allNotifications.length; i++) {\r\n        if (!allNotifications[i].read) {\r\n            unread.push(allNotifications[i]);\r\n        }\r\n    }\r\n    return unread;\r\n}\r\n\r\nexport default notifications;","export const SET_POSSIBLE_VOICES = \"SET_POSSIBLE_VOICES\";\r\nexport const SET_SELECTED_VOICE_BY_NAME = \"SET_SELECTED_VOICE_BY_NAME\";\r\nexport const TOGGLE_SPEECH_OUTPUT = \"TOGGLE_SPEECH_OUTPUT\";\r\n\r\nexport const setPossibleVoices = (voices) => ({\r\n    type: SET_POSSIBLE_VOICES,\r\n    voices\r\n});\r\nexport const setSelectedVoiceByName = (voiceName) => ({\r\n    type: SET_SELECTED_VOICE_BY_NAME,\r\n    voiceName\r\n});\r\nexport const toggleSpeechOutput = () => ({\r\n    type: TOGGLE_SPEECH_OUTPUT\r\n});","import {SET_POSSIBLE_VOICES, SET_SELECTED_VOICE_BY_NAME, TOGGLE_SPEECH_OUTPUT} from \"../actions/speech\";\r\n\r\nfunction speech(state = {\r\n    possibleVoices: [],\r\n    selectedVoice: undefined,\r\n    defaultVoice: undefined,\r\n    speechOutputActive: false\r\n}, action) {\r\n    switch (action.type) {\r\n        case SET_POSSIBLE_VOICES: {\r\n            let defaultVoice = undefined;\r\n            for (let i = 0; i < action.voices.length; i++) {\r\n                if (action.voices[i].default) {\r\n                    defaultVoice = action.voices[i];\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                defaultVoice: defaultVoice,\r\n                possibleVoices: action.voices.slice()\r\n            };\r\n        }\r\n        case SET_SELECTED_VOICE_BY_NAME: {\r\n            let newSelectedVoice = state.selectedVoice;\r\n            for (let i = 0; i < state.possibleVoices.length; i++) {\r\n                if (state.possibleVoices[i].name === action.voiceName) {\r\n                    newSelectedVoice = state.possibleVoices[i];\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                selectedVoice: newSelectedVoice\r\n            };\r\n        }\r\n        case TOGGLE_SPEECH_OUTPUT: {\r\n            return {\r\n                ...state,\r\n                speechOutputActive: !state.speechOutputActive\r\n            };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default speech","import {combineReducers} from 'redux'\r\nimport game from \"./game\";\r\nimport user from \"./user\";\r\nimport playerPermission from \"./playerPermission\";\r\nimport games from \"./games\";\r\nimport stateMemory from \"./stateMemory\";\r\nimport statistics from \"./statistics\";\r\nimport modal from \"./modal\";\r\nimport serverInformation from \"./serverInformation\";\r\nimport notifications from \"./notifications\";\r\nimport speech from \"./speech\";\r\n\r\nexport default combineReducers({\r\n    game, games, user, playerPermission, stateMemory, statistics, modal, serverInformation, notifications, speech\r\n})","import React from 'react'\r\nimport {Glyphicon} from \"react-bootstrap\";\r\n\r\nclass NavigationItem {\r\n    constructor(text, icon, route) {\r\n        this.text = text;\r\n        this.icon = icon;\r\n        this.route = route;\r\n    }\r\n}\r\n\r\nconst SETTINGS_PATH = \"/settings\";\r\n\r\nexport const NAVIGATION_ITEM = {\r\n    NEW_GAME: new NavigationItem(\"Neues Spiel\", <Glyphicon glyph=\"edit\"/>, \"/newgame\"),\r\n    NEW_TRAINING: new NavigationItem(\"Training\", <Glyphicon glyph=\"upload\"/>,\"/newtraining\"),\r\n    GAME: new NavigationItem(\"Aktuelles Spiel\", <Glyphicon glyph=\"play-circle\"/>, \"/game\"),\r\n    NOTIFICATIONS: new NavigationItem(\"Mitteilungen\", <Glyphicon glyph=\"bell\"/>, \"/notifications\"),\r\n    STATISTICS: new NavigationItem(\"Statistiken\", <Glyphicon glyph=\"stats\"/>, \"/statistics\"),\r\n    SETTINGS: new NavigationItem(\"Einstellungen\", <Glyphicon glyph=\"cog\"/>, SETTINGS_PATH),\r\n    SETTINGS_USER: new NavigationItem(\"Benutzereinstellungen\", <Glyphicon glyph=\"user\"/>, SETTINGS_PATH + \"/user\"),\r\n    SETTINGS_SPEECH: new NavigationItem(\"Spracheinstellungen\", <Glyphicon glyph=\"volume-up\"/>, SETTINGS_PATH + \"/speech\"),\r\n    SETTINGS_PERMISSIONS: new NavigationItem(\"Berechtigungen\", <Glyphicon glyph=\"list-alt\"/>, SETTINGS_PATH + \"/permissions\"),\r\n    ABOUT: new NavigationItem(\"Info\", <Glyphicon glyph=\"info-sign\"/>, \"/about\"),\r\n\r\n    LOGIN: new NavigationItem(\"Anmelden\", <Glyphicon glyph=\"log-in\"/>),\r\n    LOGOUT: new NavigationItem(\"Abmelden\", <Glyphicon glyph=\"log-out\"/>)\r\n};","import React from 'react'\r\nimport {Dropdown, FormControl, MenuItem} from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass DropdownTextfield extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            icon: this.props.iconFactory ? this.props.iconFactory(this.props.value) : null\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.value !== prevProps.value\r\n            || this.props.iconFactory !== prevProps.iconFactory\r\n            || this.props.choices !== prevProps.choices) {\r\n            this.setState({\r\n                icon: this.props.iconFactory ? this.props.iconFactory(this.props.value) : null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let showDropdownToggle = this.props.choices !== undefined && this.props.choices.length > 0;\r\n        return <Dropdown style={{...this.props.style, display: 'inline-flex'}} id={this.props.id}>\r\n            <div style={{position: 'absolute', top: 1, left: 3}}>\r\n                {this.state.icon}\r\n            </div>\r\n            <FormControl type=\"text\" value={this.props.value} placeholder={this.props.placeholder}\r\n                         onChange={(e) => this.props.onInputChange(e.target.value)}\r\n                         style={{borderTopRightRadius: showDropdownToggle ? 0 : undefined,\r\n                             borderBottomRightRadius: showDropdownToggle ? 0 : undefined,\r\n                             textAlign: 'center'}}\r\n                        autoFocus={this.props.autoFocus}\r\n            />\r\n            <Dropdown.Toggle style={{borderLeftWidth: 0, display: showDropdownToggle ? \"\" : \"none\"}}/>\r\n            <Dropdown.Menu style={{minWidth: 'calc(100% - 34px)', textAlign: 'center'}}>\r\n                {this.props.choices.map(choice =>\r\n                    <MenuItem key={\"choice\" + this.getTextForChoice(choice)}\r\n                              onClick={() => this.props.onDropdownClick(choice)}>\r\n                        {this.getTextForChoice(choice)}\r\n                    </MenuItem>\r\n                )}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    }\r\n\r\n    getTextForChoice(choice) {\r\n        return this.props.dropdownPropertyName ? choice[this.props.dropdownPropertyName] : choice;\r\n    }\r\n}\r\n\r\nDropdownTextfield.propTypes = {\r\n    value: PropTypes.any,\r\n    dropdownPropertyName: PropTypes.string,\r\n    choices: PropTypes.array,\r\n    iconFactory: PropTypes.func,\r\n    onDropdownClick: PropTypes.func,\r\n    onInputChange: PropTypes.func,\r\n    placeholder: PropTypes.string,\r\n    autoFocus: PropTypes.bool\r\n};\r\n\r\nexport default DropdownTextfield\r\n","let documentUtil = {\r\n    setTitlePrefix(titlePrefix) {\r\n        let prefix = titlePrefix ? titlePrefix + \" - \" : \"\";\r\n        document.title = prefix + \"Pheru-Darts\";\r\n    }\r\n};\r\nexport default documentUtil;","import React from 'react'\r\nimport {\r\n    Button,\r\n    Col,\r\n    Glyphicon,\r\n    Grid,\r\n    OverlayTrigger,\r\n    Row,\r\n    ToggleButton,\r\n    ToggleButtonGroup,\r\n    Tooltip\r\n} from \"react-bootstrap\";\r\nimport {ALL_CHECKOUT_MODES, DOUBLE_OUT} from \"../../../constants/checkoutModes\";\r\nimport {NAVIGATION_ITEM} from \"../../../constants/navigationItems\";\r\nimport DropdownTextfield from \"../../general/input/DropdownTextfield\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ALL_CHECKIN_MODES, SINGLE_IN} from \"../../../constants/checkinModes\";\r\nimport documentUtil from \"../../../util/documentUtil\";\r\n\r\nconst SCORE_CHOICES = [\"101\", \"201\", \"301\", \"401\", \"501\", \"1001\"];\r\n\r\nclass NewGameConfig extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (props.initialState !== undefined) {\r\n            this.state = {...props.initialState};\r\n        } else {\r\n            this.state = {\r\n                score: SCORE_CHOICES[4],\r\n                selectedPlayers: [\r\n                    {name: \"\"},\r\n                    {name: \"\"}\r\n                ],\r\n                checkOutMode: DOUBLE_OUT,\r\n                checkInMode: SINGLE_IN\r\n            };\r\n        }\r\n        this.colStyle = {\r\n            marginBottom: 15\r\n        };\r\n        this.colStyleButton = {\r\n            ...this.colStyle\r\n        };\r\n\r\n        this.swapPlayerSelection = this.swapPlayerSelection.bind(this);\r\n        this.handleScoreChange = this.handleScoreChange.bind(this);\r\n        this.handleUnregisteredUserChange = this.handleUnregisteredUserChange.bind(this);\r\n        this.handleCheckInModeChange = this.handleCheckInModeChange.bind(this);\r\n        this.handleCheckOutModeChange = this.handleCheckOutModeChange.bind(this);\r\n        this.onStartNewGameButtonClicked = this.onStartNewGameButtonClicked.bind(this);\r\n        this.startNewGame = this.startNewGame.bind(this);\r\n        this.playerIconFactory = this.playerIconFactory.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        documentUtil.setTitlePrefix(this.props.training ? \"Training\" : \"Neues Spiel\");\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if ((prevProps.isFetchingUsers && !this.props.isFetchingUsers)\r\n            || (prevProps.isLoggedIn && !this.props.isLoggedIn)) {\r\n            // Damit die ID richtig ergänzt wird, wenn User geladen wurden bzw.\r\n            // entfernt werden, wenn nicht mehr eingeloggt\r\n            let selected = this.state.selectedPlayers.slice();\r\n            for (let i = 0; i < selected.length; i++) {\r\n                let playableUser = this.getPlayableUserByName(selected[i].name);\r\n                if (playableUser) {\r\n                    selected[i] = playableUser;\r\n                } else {\r\n                    selected[i] = {name: selected[i].name};\r\n                }\r\n                this.setState({\r\n                    selectedPlayers: selected\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.memorizeState(this.state);\r\n    }\r\n\r\n    changeSelectedPlayer(selectedPlayerIndex, player) {\r\n        for (let i = 0; i < this.state.selectedPlayers.length; i++) {\r\n            if (i !== selectedPlayerIndex && this.state.selectedPlayers[i] === player) {\r\n                this.swapPlayerSelection();\r\n                return;\r\n            }\r\n        }\r\n        let selected = this.state.selectedPlayers.slice();\r\n        selected[selectedPlayerIndex] = player;\r\n        this.setState({\r\n            selectedPlayers: selected\r\n        });\r\n    }\r\n\r\n    swapPlayerSelection() {\r\n        let swapped = this.state.selectedPlayers.slice().reverse();\r\n        this.setState({\r\n            selectedPlayers: swapped\r\n        });\r\n    }\r\n\r\n    handleUnregisteredUserChange(selectedPlayerIndex, value) {\r\n        let selected = this.state.selectedPlayers.slice();\r\n        let playableUser = this.getPlayableUserByName(value);\r\n        if (playableUser) {\r\n            selected[selectedPlayerIndex] = playableUser;\r\n        } else {\r\n            selected[selectedPlayerIndex] = {name: value};\r\n        }\r\n        this.setState({\r\n            selectedPlayers: selected\r\n        });\r\n    }\r\n\r\n    handleScoreChange(value) {\r\n        if (value !== \"\" && !this.isValidScore(value)) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            score: value\r\n        });\r\n    }\r\n\r\n    isValidScore(value) {\r\n        return /^[1-9]+\\d*$/.test(value);\r\n    }\r\n\r\n    handleCheckInModeChange(e) {\r\n        this.setState({\r\n            checkInMode: e\r\n        });\r\n    }\r\n\r\n    handleCheckOutModeChange(e) {\r\n        this.setState({\r\n            checkOutMode: e\r\n        });\r\n    }\r\n\r\n    onStartNewGameButtonClicked(e) {\r\n        if (!this.validateGameConfig()) {\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (this.props.gameRunning) {\r\n            this.props.showConfirmation(\r\n                \"Neues Spiel starten?\",\r\n                \"Das aktuelle Spiel wird dadurch abgebrochen.\",\r\n                () => this.startNewGame());\r\n        } else {\r\n            this.startNewGame();\r\n        }\r\n    }\r\n\r\n    validateGameConfig() {\r\n        let validationMessages = [];\r\n        let players = this.state.selectedPlayers;\r\n        if (!this.props.training) {\r\n            for (let i = 0; i < players.length; i++) {\r\n                if (players[i].id === undefined && players[i].name === \"\") {\r\n                    validationMessages.push(\"Es wurden nicht alle benötigten Spieler ausgewählt\");\r\n                    break;\r\n                }\r\n                for (let j = i + 1; j < players.length; j++) {\r\n                    if (players[i].name === players[j].name) {\r\n                        validationMessages.push(\"Spieler dürfen nicht mehrfach vorkommen\");\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!this.isValidScore(this.state.score)) {\r\n            validationMessages.push(\"Es wurde kein gültiger Score angegeben\");\r\n        }\r\n        if (validationMessages.length > 0) {\r\n            this.props.showWarning(\"Ungültige Spielkonfiguration\",\r\n                <ul>{this.validationMessagesToListEntries(validationMessages)}</ul>\r\n            );\r\n            return false;\r\n        }\r\n        return true\r\n    }\r\n\r\n    validationMessagesToListEntries(validationMessages) {\r\n        let listEntries = [];\r\n        for (let i = 0; i < validationMessages.length; i++) {\r\n            listEntries.push(<li key={\"validationMessage_\" + i}>{validationMessages[i]}</li>)\r\n        }\r\n        return listEntries;\r\n    }\r\n\r\n    startNewGame() {\r\n        let players;\r\n        if (this.props.training) {\r\n            players = [{id: this.props.userId, name: this.props.userName ? this.props.userName : \"Training\"}];\r\n        } else {\r\n            players = this.state.selectedPlayers;\r\n        }\r\n        this.props.startNewGame(players, Number(this.state.score), this.state.checkInMode, this.state.checkOutMode, this.props.training);\r\n        this.props.history.push(NAVIGATION_ITEM.GAME.route);\r\n    }\r\n\r\n    playerIconFactory(playerName) {\r\n        if (!this.props.isLoggedIn || !playerName || this.props.isFetchingUsers) {\r\n            return null;\r\n        }\r\n        if (this.getPlayableUserByName(playerName)) {\r\n            return <Glyphicon glyph='ok' style={{color: 'green'}}/>;\r\n        }\r\n        return <OverlayTrigger placement='bottom'\r\n                               overlay={<Tooltip id=\"user-tooltip\">\r\n                                   Dieser Spieler ist entweder kein registrierter Benutzer oder Du bist nicht berechtigt\r\n                                   worden, ein Spiel mit ihm zu erstellen.<br/>\r\n                                   In den Statistiken wird dieser Spieler als \"Unregistrierter Benutzer\" gelistet.\r\n                               </Tooltip>}>\r\n            <Glyphicon glyph='exclamation-sign' style={{color: 'orange'}}/>\r\n        </OverlayTrigger>;\r\n    }\r\n\r\n    getPlayableUserByName(name) {\r\n        for (let i = 0; i < this.props.playableUsers.length; i++) {\r\n            if (this.props.playableUsers[i].name === name) {\r\n                return this.props.playableUsers[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Grid>\r\n                {!this.props.training &&\r\n                <Row className=\"show-grid text-center\">\r\n                    <Col xs={12} sm={5} style={this.colStyle}>\r\n                        <DropdownTextfield id=\"player-1-dropdown\" placeholder=\"Spieler 1\"\r\n                                           value={this.state.selectedPlayers[0].name}\r\n                                           choices={this.props.playableUsers}\r\n                                           dropdownPropertyName='name'\r\n                                           style={{width: '100%'}}\r\n                                           iconFactory={this.playerIconFactory}\r\n                                           onDropdownClick={(newValue) => this.changeSelectedPlayer(0, newValue)}\r\n                                           onInputChange={(newValue) => this.handleUnregisteredUserChange(0, newValue)}\r\n                                           autoFocus\r\n                        />\r\n                    </Col>\r\n                    <Col xs={6} xsOffset={3} sm={2} smOffset={0} style={this.colStyleButton}>\r\n                        <Button block bsStyle=\"primary\" onClick={this.swapPlayerSelection}>\r\n                            <Glyphicon glyph=\"transfer\"/>\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={12} sm={5} style={this.colStyle}>\r\n                        <DropdownTextfield id=\"player-1-dropdown\" placeholder=\"Spieler 2\"\r\n                                           value={this.state.selectedPlayers[1].name}\r\n                                           choices={this.props.playableUsers}\r\n                                           dropdownPropertyName='name'\r\n                                           style={{width: '100%'}}\r\n                                           iconFactory={this.playerIconFactory}\r\n                                           onDropdownClick={(newValue) => this.changeSelectedPlayer(1, newValue)}\r\n                                           onInputChange={(newValue) => this.handleUnregisteredUserChange(1, newValue)}/>\r\n                    </Col>\r\n                </Row>\r\n                }\r\n                <Row className=\"show-grid text-center\">\r\n                    <Col xs={12} sm={12} style={this.colStyle}>\r\n                        <DropdownTextfield id=\"score-dropdown\" value={this.state.score} choices={SCORE_CHOICES}\r\n                                           onDropdownClick={(newValue) => this.handleScoreChange(newValue)}\r\n                                           onInputChange={(newValue) => this.handleScoreChange(newValue)}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"show-grid text-center\">\r\n                    <Col xs={12} sm={12} style={this.colStyle}>\r\n                        <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={this.state.checkInMode}\r\n                                           onChange={this.handleCheckInModeChange}>\r\n                            {ALL_CHECKIN_MODES.map(mode =>\r\n                                <ToggleButton\r\n                                    style={{width: '50%'}} key={mode.key} value={mode}>{mode.text}</ToggleButton>\r\n                            )}\r\n                        </ToggleButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"show-grid text-center\">\r\n                    <Col xs={12} sm={12} style={this.colStyle}>\r\n                        <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={this.state.checkOutMode}\r\n                                           onChange={this.handleCheckOutModeChange}>\r\n                            {ALL_CHECKOUT_MODES.map(mode =>\r\n                                <ToggleButton key={mode.key} value={mode}>{mode.text}</ToggleButton>\r\n                            )}\r\n                        </ToggleButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"show-grid text-center\">\r\n                    <Col xs={12} sm={12} style={this.colStyleButton}>\r\n                        <Button bsStyle=\"primary\" bsSize=\"large\" block\r\n                                disabled={this.props.isLoggingIn}\r\n                                onClick={this.onStartNewGameButtonClicked}>\r\n                            Neues {this.props.training ? \"Trainingsspiel\" : \"Spiel\"} starten\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Grid>\r\n        </div>\r\n    }\r\n}\r\n\r\nNewGameConfig.propTypes = {\r\n    initialState: PropTypes.object,\r\n    training: PropTypes.bool,\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    isLoggingIn: PropTypes.bool.isRequired,\r\n    userId: PropTypes.string,\r\n    userName: PropTypes.string,\r\n    playableUsers: PropTypes.array.isRequired,\r\n    gameRunning: PropTypes.bool.isRequired,\r\n    fetchAllUsersFailed: PropTypes.bool.isRequired,\r\n    isFetchingUsers: PropTypes.bool.isRequired,\r\n    startNewGame: PropTypes.func.isRequired,\r\n    memorizeState: PropTypes.func.isRequired,\r\n    showWarning: PropTypes.func.isRequired,\r\n    showConfirmation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NewGameConfig\r\n","import {connect} from 'react-redux'\r\nimport {startNewGame} from \"../actions/game\";\r\nimport NewGameConfig from \"../components/views/newgame/NewGameConfig\";\r\nimport {memorizeState} from \"../actions/stateMemory\";\r\nimport {sortPlayerByNameAsc} from \"../services/sortService\";\r\nimport {showConfirmation, showWarning} from \"../actions/modal\";\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    initialState: state.stateMemory.states[getMemoryKeyByProps(ownProps)],\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    isLoggingIn: state.user.isLoggingIn,\r\n    userId: state.user.id,\r\n    userName: state.user.name,\r\n    playableUsers: putPlayerInFront(state.user.name, state.playerPermission.playableUsers.slice().sort(sortPlayerByNameAsc)),\r\n    gameRunning: state.game !== null,\r\n    fetchAllUsersFailed: state.playerPermission.fetchPlayableUsersFailed,\r\n    isFetchingUsers: state.playerPermission.isFetchingPlayableUsers\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    startNewGame: (players, score, checkInMode, checkOutMode, training) =>\r\n        dispatch(startNewGame(players, score, checkInMode, checkOutMode, training)),\r\n    memorizeState: (state) => dispatch(memorizeState(getMemoryKeyByProps(ownProps), state)),\r\n    showWarning: (title, message) => dispatch(showWarning(title, message)),\r\n    showConfirmation: (title, message, onConfirm, onCancel) => dispatch(showConfirmation(title, message, onConfirm, onCancel))\r\n});\r\n\r\nfunction getMemoryKeyByProps(ownProps) {\r\n    return ownProps.training ? \"newgameconfig_training\" : \"newgameconfig\";\r\n}\r\n\r\nfunction putPlayerInFront(name, players) {\r\n    let index = -1;\r\n    let player = undefined;\r\n    for (let i = 0; i < players.length; i++) {\r\n        if(players[i].name === name){\r\n            index = i;\r\n            player = players[i];\r\n        }\r\n    }\r\n    if(index > -1){\r\n        players.splice(index, 1);\r\n        players.unshift(player);\r\n    }\r\n    return players;\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(NewGameConfig)","import React from 'react'\r\nimport {Button, Col, Grid, Row} from \"react-bootstrap\";\r\nimport ToggleButton from \"react-bootstrap/es/ToggleButton\";\r\nimport ToggleButtonGroup from \"react-bootstrap/es/ToggleButtonGroup\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ScoreButtons extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            multiplier: 1\r\n        };\r\n        this.colStyle = {\r\n            margin: 0,\r\n            padding: 0\r\n        };\r\n\r\n        this.toggleDouble = this.toggleDouble.bind(this);\r\n        this.toggleTriple = this.toggleTriple.bind(this);\r\n        this.addDart = this.addDart.bind(this);\r\n    }\r\n\r\n    render() {\r\n        let cols = [];\r\n        for (let i = 1; i <= 20; i++) {\r\n            cols.push(<Col key={\"scorebuttons_col_\" + i} xs={3} sm={2} style={this.colStyle}>\r\n                <Button className=\"score-button\" onClick={() => this.addDart(i)} key={\"scorebuttons_button_\" + i} bsSize=\"large\" bsStyle=\"primary\" block>{i}</Button>\r\n            </Col>)\r\n        }\r\n        return <Grid>\r\n            <Row className=\"show-grid text-center\">\r\n                {cols}\r\n                <Col xs={3} sm={2} style={this.colStyle}>\r\n                    <Button className=\"score-button\" onClick={() => this.addDart(25)} bsSize=\"large\" bsStyle=\"primary\" block>Bull</Button>\r\n                </Col>\r\n                <Col xs={3} sm={2} style={this.colStyle}>\r\n                    <ToggleButtonGroup type=\"checkbox\" value={this.state.multiplier} onChange={this.toggleDouble} block vertical>\r\n                        <ToggleButton className=\"score-button\" value={2} bsSize=\"large\" bsStyle=\"success\" block>\r\n                            Double\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </Col>\r\n                <Col xs={3} sm={2} style={this.colStyle}>\r\n                    <ToggleButtonGroup type=\"checkbox\" value={this.state.multiplier} onChange={this.toggleTriple} block vertical>\r\n                        <ToggleButton className=\"score-button\" value={3} bsSize=\"large\" bsStyle=\"success\" block>\r\n                            Triple\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </Col>\r\n                <Col xs={3} sm={2} style={this.colStyle}>\r\n                    <Button className=\"score-button\" onClick={() => this.addDart(0)} bsSize=\"large\" bsStyle=\"danger\" block>0</Button>\r\n                </Col>\r\n            </Row>\r\n        </Grid>\r\n    }\r\n\r\n    addDart(value){\r\n        this.props.addDart(value, this.state.multiplier);\r\n        this.setState({\r\n            multiplier: 1\r\n        });\r\n    }\r\n\r\n    toggleDouble() {\r\n        this.setState({\r\n            multiplier: this.state.multiplier === 2 ? 1 : 2\r\n        });\r\n    }\r\n\r\n    toggleTriple() {\r\n        this.setState({\r\n            multiplier: this.state.multiplier === 3 ? 1 : 3\r\n        });\r\n    }\r\n}\r\n\r\nScoreButtons.propTypes = {\r\n    addDart: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ScoreButtons\r\n","import {connect} from 'react-redux'\r\nimport ScoreButtons from \"../components/views/game/ScoreButtons\";\r\nimport {addDart} from \"../actions/game\";\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addDart: (value, multiplier) => dispatch(addDart(value, multiplier))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ScoreButtons)\r\n","import React from 'react'\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Player extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.borderRadius = 6;\r\n        this.activeBorder = '4px solid #2196f3';\r\n        this.blackBorder = '1px solid black';\r\n        this.rowStyle = {\r\n            margin: 0,\r\n            padding: 0\r\n        };\r\n        this.colStyle = {\r\n            margin: 0,\r\n            padding: 0,\r\n        };\r\n        this.borderedColStyle = {\r\n            ...this.colStyle,\r\n            border: '1px solid #337ab7'\r\n        };\r\n        this.pStyle = {\r\n            fontWeight: 'bold',\r\n            margin: 0,\r\n            padding: 0\r\n        };\r\n        this.pStyleSmall = {\r\n            ...this.pStyle,\r\n            fontSize: '3vw'\r\n        };\r\n        this.pStyleBig = {\r\n            ...this.pStyle,\r\n            fontSize: '5vw'\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <Row className={\"show-grid text-center player\" + (this.props.current ? \" player-current\" : \"\")}>\r\n            <Col xs={12} sm={12} style={{...this.colStyle, borderRadius: this.borderRadius}}>\r\n                <Row className=\"show-grid text-center\" style={this.rowStyle}>\r\n                    <Col xs={12} sm={12} style={{...this.colStyle, borderTopLeftRadius: this.borderRadius, borderTopRightRadius: this.borderRadius}}>\r\n                        <p style={this.pStyleSmall}>{this.props.name}</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"show-grid text-center\" style={this.rowStyle}>\r\n                    <Col xs={12} sm={12} style={this.colStyle}>\r\n                        <p style={this.pStyleBig}>{this.props.score}</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"show-grid text-center\" style={this.rowStyle}>\r\n                    <Col xs={6} sm={6}\r\n                         style={{...this.colStyle, borderRight: this.blackBorder, borderTop: this.blackBorder}}>\r\n                        <p style={this.pStyleSmall}># {this.props.dartCount}</p>\r\n                    </Col>\r\n                    <Col xs={6} sm={6} style={{...this.colStyle, borderTop: this.blackBorder}}>\r\n                        <p style={this.pStyleSmall}>&empty; {this.props.average}</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"show-grid text-center\" style={this.rowStyle}>\r\n                    <Col xs={4} sm={4}\r\n                         style={{...this.colStyle, borderBottomLeftRadius: this.borderRadius, borderTop: this.blackBorder}}>\r\n                        <p style={this.pStyleSmall}>{this.props.dart1}</p>\r\n                    </Col>\r\n                    <Col xs={4} sm={4} style={{\r\n                        ...this.colStyle,\r\n                        borderRight: this.blackBorder,\r\n                        borderLeft: this.blackBorder,\r\n                        borderTop: this.blackBorder\r\n                    }}>\r\n                        <p style={this.pStyleSmall}>{this.props.dart2}</p>\r\n                    </Col>\r\n                    <Col xs={4} sm={4}\r\n                         style={{...this.colStyle, borderBottomRightRadius: this.borderRadius, borderTop: this.blackBorder}}>\r\n                        <p style={this.pStyleSmall}>{this.props.dart3}</p>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    }\r\n}\r\n\r\nPlayer.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    score: PropTypes.number.isRequired,\r\n    dartCount: PropTypes.number.isRequired,\r\n    average: PropTypes.string.isRequired,\r\n    dart1: PropTypes.string.isRequired,\r\n    dart2: PropTypes.string.isRequired,\r\n    dart3: PropTypes.string.isRequired,\r\n    current: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Player\r\n","import {connect} from 'react-redux'\r\nimport Player from \"../components/views/game/Player\";\r\nimport getTurnInformation from \"../services/gameInformationService\";\r\n\r\n// TODO turninfo in game -> kein container mehr\r\nconst mapStateToProps = function (state, ownProps) {\r\n    let players = state.game.players;\r\n    let player = players[ownProps.index];\r\n    let startScore = state.game.score;\r\n    let checkOutMode = state.game.checkOutMode;\r\n    let checkInMode = state.game.checkInMode;\r\n    let turnInfo = getTurnInformation(players, startScore, checkInMode, checkOutMode);\r\n\r\n    let score = turnInfo.playerInformation[ownProps.index].score;\r\n    let darts = getDarts(player);\r\n    let dartCount = turnInfo.playerInformation[ownProps.index].dartCount;\r\n    let current = turnInfo.turnInformation.current.playerIndex === ownProps.index;\r\n    let average = turnInfo.playerInformation[ownProps.index].average;\r\n    return {\r\n        name: player.name,\r\n        score: score,\r\n        dartCount: dartCount,\r\n        average: average,\r\n        dart1: darts[0],\r\n        dart2: darts[1],\r\n        dart3: darts[2],\r\n        current: current\r\n    };\r\n};\r\n\r\nfunction getDarts(player) {\r\n    let darts = [];\r\n    let aufnahme = player.aufnahmen[player.aufnahmen.length - 1];\r\n    if (aufnahme !== undefined) {\r\n        for (let j = 0; j < aufnahme.length; j++) {\r\n            let dart = aufnahme[j];\r\n            let prefix;\r\n            switch (dart.multiplier) {\r\n                case 2:\r\n                    prefix = 'D';\r\n                    break;\r\n                case 3:\r\n                    prefix = 'T';\r\n                    break;\r\n                default:\r\n                    prefix = '';\r\n            }\r\n            darts.push(prefix + dart.value);\r\n        }\r\n    }\r\n    for (let i = 0; i < 3; i++) {\r\n        if (darts[i] === undefined) {\r\n            darts[i] = \"-\";\r\n        }\r\n    }\r\n    return darts;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Player)","import React from 'react'\r\nimport ScoreButtonsContainer from \"../../../containers/ScoreButtonsContainer\";\r\nimport PlayerContainer from \"../../../containers/PlayerContainer\";\r\nimport {Button, Col, Dropdown, Glyphicon, Grid, MenuItem, Modal, Row, Well} from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport {speak} from \"../../../services/speechSynthService\";\r\nimport documentUtil from \"../../../util/documentUtil\";\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gameFinishedModalShow: props.winner !== undefined,\r\n            rematchStartingPlayer: props.players[props.players.length > 1 ? 1 : 0]\r\n        };\r\n        this.colStyle = {\r\n            marginBottom: 15\r\n        };\r\n        this.colStyleButton = {\r\n            ...this.colStyle,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            paddingLeft: 2,\r\n            paddingRight: 2\r\n        };\r\n        this.modalBodyStyle = {\r\n            textAlign: 'center'\r\n        };\r\n        this.handleGameFinishedModalClose = this.handleGameFinishedModalClose.bind(this);\r\n        this.handleRematchStartingPlayerChanged = this.handleRematchStartingPlayerChanged.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        documentUtil.setTitlePrefix(\"Aktuelles Spiel\");\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.players !== prevProps.players\r\n            || this.props.winner !== prevProps.winner) {\r\n            this.setState({\r\n                rematchStartingPlayer: this.props.players[this.props.players.length > 1 ? 1 : 0],\r\n                gameFinishedModalShow: this.props.winner !== undefined\r\n            });\r\n        }\r\n        if (this.props.speechOutputActive && this.props.announcementText\r\n            && this.props.announcementText !== prevProps.announcementText) {\r\n            speak(this.props.announcementText, this.props.selectedVoice);\r\n        }\r\n    }\r\n\r\n    handleRematchStartingPlayerChanged(player) {\r\n        this.setState({rematchStartingPlayer: player});\r\n    }\r\n\r\n    handleGameFinishedModalClose() {\r\n        this.setState({gameFinishedModalShow: false});\r\n    }\r\n\r\n    render() {\r\n        return <div style={{height: \"100%\"}}>\r\n            <Grid>\r\n                <Row className=\"show-grid text-center\">\r\n                    <Col xs={12} xsPush={0} sm={2} smPush={10} style={{...this.colStyle, marginBottom: 0}}>\r\n                        <Row className=\"show-grid text-center\">\r\n                            <Col xs={5} sm={12}\r\n                                 style={{...this.colStyleButton, fontWeight: 'bold'}}>\r\n                                <Well style={{margin: 0, padding: 2}}>\r\n                                    <div style={{borderBottom: '0.5px black solid'}}>{this.props.startScore}</div>\r\n                                    <div>{this.props.checkInMode.text} {this.props.checkOutMode.text}</div>\r\n                                </Well>\r\n                            </Col>\r\n                            <Col xs={5} sm={12} style={this.colStyleButton}>\r\n                                <Button bsStyle='warning' bsSize='large' block\r\n                                        onClick={() => this.props.undoDart()}>\r\n                                    <Glyphicon glyph=\"erase\"/>\r\n                                </Button>\r\n                            </Col>\r\n                            <Col xs={2} sm={12} style={this.colStyleButton}>\r\n                                <Button bsStyle='info' bsSize='large' block\r\n                                        onClick={() => this.props.toggleSpeechOutput()}>\r\n                                    <Glyphicon glyph={this.props.speechOutputActive ? \"volume-up\" : \"volume-off\"}/>\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs={12} xsPull={0} sm={this.props.training ? 10 : 5} smPull={2} style={this.colStyle}>\r\n                        <PlayerContainer index={0}/>\r\n                    </Col>\r\n                    {!this.props.training &&\r\n                    <Col xs={12} xsPull={0} sm={5} smPull={2} style={this.colStyle}>\r\n                        <PlayerContainer index={1}/>\r\n                    </Col>\r\n                    }\r\n                </Row>\r\n            </Grid>\r\n            <ScoreButtonsContainer/>\r\n\r\n            <Modal dialogClassName='modal-bottom' show={this.state.gameFinishedModalShow}\r\n                   onHide={this.handleGameFinishedModalClose}\r\n                   keyboard={false} backdrop='static'>\r\n                <Modal.Body style={this.modalBodyStyle}>\r\n                    <h4>{this.props.winner !== undefined && this.props.winner.name} hat gewonnen!</h4>\r\n                </Modal.Body>\r\n                <Modal.Footer style={{textAlign: 'center'}}>\r\n                    <Dropdown style={{display: 'inline-flex'}} id=\"rematch_player_dropdown\">\r\n                        <Button bsStyle='primary' onClick={() => {\r\n                            if (this.props.isLoggedIn) {\r\n                                this.props.archiveGame(this.props.game);\r\n                            }\r\n                            this.props.rematch(this.state.rematchStartingPlayer);\r\n                        }}>\r\n                            Rematch ({this.state.rematchStartingPlayer.name} beginnt)\r\n                        </Button>\r\n                        <Dropdown.Toggle bsStyle=\"primary\"/>\r\n                        <Dropdown.Menu style={{minWidth: '100%', textAlign: 'center'}}>\r\n                            {this.props.players.map((player, i) =>\r\n                                <MenuItem key={\"rematch_player_\" + i}\r\n                                          onClick={() => this.handleRematchStartingPlayerChanged(player)}>\r\n                                    {player.name} beginnt\r\n                                </MenuItem>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Button style={{marginLeft: 10}} bsStyle='primary' onClick={() => {\r\n                        if (this.props.isLoggedIn) {\r\n                            this.props.archiveGame(this.props.game);\r\n                        }\r\n                        this.props.exit();\r\n                    }}>\r\n                        Zurück zum Menü\r\n                    </Button>\r\n                    <Button style={{marginLeft: 10}} bsStyle='warning' onClick={() => this.props.undoDart()}>\r\n                        Dart rückgängig machen\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nGame.propTypes = {\r\n    startScore: PropTypes.number.isRequired,\r\n    checkInMode: PropTypes.object.isRequired,\r\n    checkOutMode: PropTypes.object.isRequired,\r\n    players: PropTypes.array.isRequired,\r\n    winner: PropTypes.object,\r\n    game: PropTypes.object.isRequired,\r\n    undoDart: PropTypes.func.isRequired,\r\n    exit: PropTypes.func.isRequired,\r\n    rematch: PropTypes.func.isRequired,\r\n    archiveGame: PropTypes.func.isRequired,\r\n    toggleSpeechOutput: PropTypes.func.isRequired,\r\n    training: PropTypes.bool,\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    announcementText: PropTypes.string,\r\n    speechOutputActive: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Game\r\n","export function speak(text, voice) {\r\n    let utterance = new SpeechSynthesisUtterance(text);\r\n    utterance.voice = voice;\r\n\r\n    // Ein speak direkt nach einem cancel wird nicht ausgeführt, daher eine kleine Pause einfügen\r\n    if (window.speechSynthesis.speaking) {\r\n        window.speechSynthesis.cancel();\r\n        setTimeout(function () { window.speechSynthesis.speak(utterance); }, 250);\r\n    } else {\r\n        window.speechSynthesis.speak(utterance);\r\n    }\r\n}","import {connect} from 'react-redux'\r\nimport Game from \"../components/views/game/Game\";\r\nimport {exitGame, rematch, undoDart} from \"../actions/game\";\r\nimport {archiveGame} from \"../actions/games\";\r\nimport {toggleSpeechOutput} from \"../actions/speech\";\r\n\r\nconst mapStateToProps = function (state) {\r\n    let startScore = state.game.score;\r\n    let checkInMode = state.game.checkInMode;\r\n    let checkOutMode = state.game.checkOutMode;\r\n    let players = state.game.players;\r\n    let winner = state.game.winner;\r\n    let game = state.game;\r\n    let training = state.game.training;\r\n    let announcementText = state.game.announcementText;\r\n    let isLoggedIn = state.user.isLoggedIn;\r\n    let selectedVoice = state.speech.selectedVoice ? state.speech.selectedVoice : state.speech.defaultVoice;\r\n    let speechOutputActive = state.speech.speechOutputActive;\r\n    return {\r\n        startScore,\r\n        checkInMode,\r\n        checkOutMode,\r\n        players,\r\n        winner,\r\n        game,\r\n        training,\r\n        announcementText,\r\n        isLoggedIn,\r\n        selectedVoice,\r\n        speechOutputActive\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    undoDart: () => dispatch(undoDart()),\r\n    exit: () => dispatch(exitGame()),\r\n    rematch: (startingPlayer) => dispatch(rematch(startingPlayer)),\r\n    archiveGame: (game) => dispatch(archiveGame(game)),\r\n    toggleSpeechOutput: () => dispatch(toggleSpeechOutput())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Game)","const SELECTED_VOICE_NAME = \"selectedVoiceName\";\r\n\r\nexport let localStorageService = {\r\n    getSelectedVoiceName() {\r\n        return localStorage.getItem(SELECTED_VOICE_NAME);\r\n    },\r\n    setSelectedVoiceName(voiceName) {\r\n        return localStorage.setItem(SELECTED_VOICE_NAME, voiceName);\r\n    }\r\n};","import React from 'react'\r\nimport {Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass GamesBarChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={this.props.data}>\r\n                <CartesianGrid vertical={false}/>\r\n                <XAxis dataKey=\"opponent\"/>\r\n                <YAxis/>\r\n                <Tooltip labelFormatter={() => \"\"}/>\r\n                <Legend/>\r\n                <Bar isAnimationActive={false} name=\"Gewonnen\" dataKey=\"wonCount\" stackId=\"a\" fill=\"#08965f\"/>\r\n                <Bar isAnimationActive={false} name=\"Verloren\" dataKey=\"lostCount\" stackId=\"a\" fill=\"#e01d36\"/>\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n    }\r\n}\r\n\r\nGamesBarChart.propTypes = {\r\n    data : PropTypes.array.isRequired\r\n};\r\n\r\nexport default GamesBarChart;","import React from 'react'\r\nimport {Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DartsBarChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={this.props.data}>\r\n                <CartesianGrid vertical={false}/>\r\n                <XAxis dataKey=\"score\" interval={0}/>\r\n                <YAxis/>\r\n                <Tooltip labelFormatter={() => \"\"}/>\r\n                <Legend/>\r\n                <Bar isAnimationActive={false} name=\"Single\" dataKey=\"singleCount\" stackId=\"a\" fill=\"#333\"/>\r\n                <Bar isAnimationActive={false} name=\"Double\" dataKey=\"doubleCount\" stackId=\"a\" fill=\"#08965f\"/>\r\n                <Bar isAnimationActive={false} name=\"Triple\" dataKey=\"tripleCount\" stackId=\"a\" fill=\"#e01d36\"/>\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n    }\r\n\r\n    /* Vertical-Layout (achsen anpassen, (cartesian grid anpassen?))\r\n    <BarChart data={this.props.data} layout=\"vertical\">\r\n                <CartesianGrid vertical={false}/>\r\n                <XAxis type=\"number\" />\r\n                <YAxis interval={0} type=\"category\" dataKey=\"score\"/>\r\n                <Tooltip labelFormatter={() => \"\"}/>\r\n                <Legend/>\r\n                <Bar name=\"Single\" dataKey=\"singleCount\" stackId=\"a\" fill=\"#222222\"/>\r\n                <Bar name=\"Double\" dataKey=\"doubleCount\" stackId=\"a\" fill=\"#08965f\"/>\r\n                <Bar name=\"Triple\" dataKey=\"tripleCount\" stackId=\"a\" fill=\"#e01d36\"/>\r\n            </BarChart>\r\n     */\r\n}\r\n\r\nDartsBarChart.propTypes = {\r\n    data : PropTypes.array.isRequired\r\n};\r\n\r\nexport default DartsBarChart;","import React from 'react'\r\nimport './stackloader.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass StackLoader extends React.Component {\r\n\r\n    render() {\r\n        return <div className=\"stack-loader-container\">\r\n            <i className=\"stack-loader-layer\"/>\r\n            <i className=\"stack-loader-layer\"/>\r\n            <i className=\"stack-loader-layer\"/>\r\n            <p className=\"stack-loader-label\"><strong>{this.props.label}</strong></p>\r\n        </div>;\r\n    }\r\n}\r\n\r\nStackLoader.propTypes = {\r\n    label: PropTypes.string,\r\n};\r\n\r\nexport default StackLoader;","import React from 'react'\r\nimport {\r\n    Legend,\r\n    PolarAngleAxis,\r\n    PolarGrid,\r\n    PolarRadiusAxis,\r\n    Radar,\r\n    RadarChart,\r\n    ResponsiveContainer,\r\n    Tooltip\r\n} from \"recharts\";\r\nimport PropTypes from \"prop-types\";\r\nimport {sortDartDataByScoreBoardOrder} from \"../../../services/sortService\";\r\n\r\nclass DartsRadarChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: this.sortAndFillData(props.data)\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.data !== this.props.data) {\r\n            this.setState({\r\n                data: this.sortAndFillData(this.props.data)\r\n            });\r\n        }\r\n    }\r\n\r\n    sortAndFillData(data) {\r\n        let sortedData = [];\r\n        for (let i = 1; i <= 20; i++) {\r\n            let existing = this.getExisitingScore(data, i);\r\n            if (existing !== null) {\r\n                sortedData.push(existing);\r\n            } else {\r\n                sortedData.push({\r\n                    score: \"\" + i,\r\n                    singleCount: 0,\r\n                    doubleCount: 0,\r\n                    tripleCount: 0\r\n                });\r\n            }\r\n        }\r\n        sortedData.sort(sortDartDataByScoreBoardOrder);\r\n        return sortedData;\r\n    }\r\n\r\n    getExisitingScore(data, score) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (parseInt(data[i].score, 10) === score) {\r\n                return data[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let windowWidth = (window.innerWidth > 0) ? window.innerWidth : window.screen.width;\r\n        let windowHeight = (window.innerHeight > 0) ? window.innerHeight : window.screen.height;\r\n        return <ResponsiveContainer width=\"100%\" height={windowWidth > windowHeight ? 500 : windowWidth}>\r\n            <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"90%\" data={this.state.data}>\r\n                <PolarGrid/>\r\n                <PolarAngleAxis dataKey=\"score\"/>\r\n                <PolarRadiusAxis angle={90} scale=\"sqrt\"/>\r\n                <Radar isAnimationActive={false} name=\"Single\" dataKey=\"singleCount\" stroke=\"#222222\" fill=\"#222222\" fillOpacity={0.6}/>\r\n                <Radar isAnimationActive={false} name=\"Double\" dataKey=\"doubleCount\" stroke=\"#08965f\" fill=\"#08965f\" fillOpacity={0.6}/>\r\n                <Radar isAnimationActive={false} name=\"Triple\" dataKey=\"tripleCount\" stroke=\"#e01d36\" fill=\"#e01d36\" fillOpacity={0.6}/>\r\n                <Legend/>\r\n                <Tooltip labelFormatter={() => \"\"}/>\r\n            </RadarChart>\r\n        </ResponsiveContainer>\r\n    }\r\n}\r\n\r\nDartsRadarChart.propTypes = {\r\n    data: PropTypes.array.isRequired\r\n};\r\n\r\nexport default DartsRadarChart;","import React from 'react'\r\nimport {Alert, Button, Glyphicon} from \"react-bootstrap\";\r\nimport Proptypes from \"prop-types\";\r\n\r\nclass OnlyForLoggedInUsers extends React.Component {\r\n    render() {\r\n        return this.props.isLoggedIn\r\n            ? this.props.children\r\n            : <Alert bsStyle=\"warning\"\r\n                     style={{marginBottom: 5, textAlign: 'center'}}>\r\n                <strong>{this.props.text}</strong>\r\n                <br/>\r\n                <Button bsStyle=\"primary\" style={{marginTop: 10}} onClick={this.props.showLogin}\r\n                        disabled={this.props.isLoggingIn}>\r\n                    <Glyphicon glyph=\"log-in\"/> Anmelden\r\n                </Button>\r\n            </Alert>\r\n    }\r\n}\r\n\r\nOnlyForLoggedInUsers.propTypes = {\r\n    text: Proptypes.string.isRequired,\r\n    showLogin: Proptypes.func.isRequired,\r\n    isLoggedIn: Proptypes.bool.isRequired,\r\n    isLoggingIn: Proptypes.bool.isRequired,\r\n};\r\n\r\nexport default OnlyForLoggedInUsers;","import {connect} from 'react-redux'\r\nimport {showLoginModal} from \"../actions/user\";\r\nimport OnlyForLoggedInUsers from \"../components/general/alerts/OnlyForLoggedInUsers\";\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    text: ownProps.text,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    isLoggingIn: state.user.isLoggingIn\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showLogin: () => dispatch(showLoginModal())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(OnlyForLoggedInUsers)","import React from 'react'\r\nimport {Alert, Glyphicon, Table, ToggleButton, ToggleButtonGroup, Well} from \"react-bootstrap\";\r\nimport GamesBarChart from \"./GamesBarChart\";\r\nimport DartsBarChart from \"./DartsBarChart\";\r\nimport PropTypes from \"prop-types\";\r\nimport StackLoader from \"../../general/loaders/StackLoader\";\r\nimport DartsRadarChart from \"./DartsRadarChart\";\r\nimport OnlyForLoggedInUsersContainer from \"../../../containers/OnlyForLoggedInUsersContainer\";\r\nimport documentUtil from \"../../../util/documentUtil\";\r\n\r\nconst TITLE = \"Statistiken\";\r\n\r\nconst DART_CHART_TYPE_BAR = \"bar\";\r\nconst DART_CHART_TYPE_RADAR = \"radar\";\r\n\r\nclass Statistics extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dartChartType: DART_CHART_TYPE_BAR\r\n        };\r\n        this.tableStyle = {\r\n            border: \"1px solid #a5b0b6\",\r\n            borderCollapse: \"collapse\",\r\n            textAlign: \"center\",\r\n            verticalAlign: \"middle\"\r\n        };\r\n        this.dartsBarChartRef = React.createRef();\r\n        this.dartsRadarChartRef = React.createRef();\r\n        this.handleDartChartTypeChange = this.handleDartChartTypeChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        documentUtil.setTitlePrefix(TITLE);\r\n        if (this.props.isLoggedIn) {\r\n            this.props.fetchStatistics();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.isLoggedIn && this.props.isLoggedIn) {\r\n            this.props.fetchStatistics();\r\n        }\r\n    }\r\n\r\n    handleDartChartTypeChange(e) {\r\n        this.setState({dartChartType: e},\r\n            () => {\r\n                // Ohne Timeout funktioniert das smooth-scrollen nicht,\r\n                // liegt wahrscheinlich an der Chart-Komponente\r\n                setTimeout(() => {\r\n                    let scrollRef = this.getRefForDartChartType(e);\r\n                    if (scrollRef && scrollRef.current) {\r\n                        scrollRef.current.scrollIntoView({block: \"end\", behavior: \"smooth\"});\r\n                    }\r\n                }, 50);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    getRefForDartChartType(type) {\r\n        switch (type) {\r\n            case DART_CHART_TYPE_BAR:\r\n                return this.dartsBarChartRef;\r\n            case DART_CHART_TYPE_RADAR:\r\n                return this.dartsRadarChartRef;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <OnlyForLoggedInUsersContainer\r\n            text=\"Statistiken können nur für angemeldete Benutzer erstellt und eingesehen werden\">\r\n            {this.props.isFetchingStatistics ?\r\n                <div style={{position: 'absolute', left: '50%', top: '50%'}}>\r\n                    <StackLoader label=\"Lade Statistiken...\"/>\r\n                </div>\r\n                : this.createStatisticsView()}\r\n        </OnlyForLoggedInUsersContainer>\r\n    }\r\n\r\n    createStatisticsView() {\r\n        return <div style={{textAlign: 'center'}}>\r\n            <h1 style={{marginTop: 0}}><strong>{TITLE}</strong></h1>\r\n            <h2><strong>Darts</strong></h2>\r\n            {this.props.dartData.length > 0\r\n                ? this.createDartsView()\r\n                : <Alert bsStyle=\"warning\">\r\n                    <strong>Keine Daten vorhanden</strong>\r\n                </Alert>}\r\n            <h2><strong>Spiele</strong></h2>\r\n            {this.props.gamesData.length > 0\r\n                ? this.createGamesView()\r\n                : <Alert bsStyle=\"warning\">\r\n                    <strong>Keine Daten vorhanden</strong>\r\n                </Alert>}\r\n        </div>\r\n    }\r\n\r\n    createDartsView() {\r\n        return <Well style={{\r\n            paddingBottom: 0,\r\n            marginBottom: 5,\r\n            textAlign: 'center'\r\n        }}>\r\n            <Table responsive style={{textAlign: 'center'}}>\r\n                <tbody>\r\n                <tr>\r\n                    <th style={this.tableStyle}>Gesamt:</th>\r\n                    <td colSpan={3} style={this.tableStyle}>{this.props.totalDarts}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th rowSpan={2} style={this.tableStyle}>Checkouts:</th>\r\n                    <th style={this.tableStyle}>Mögliche Checkouts</th>\r\n                    <th style={this.tableStyle}>Erfolgreiche Checkouts</th>\r\n                    <th style={this.tableStyle}>Checkoutrate</th>\r\n                </tr>\r\n                <tr>\r\n                    <td style={this.tableStyle}>{this.props.possibleCheckoutDarts}</td>\r\n                    <td style={this.tableStyle}>{this.props.checkoutDarts}</td>\r\n                    <td style={this.tableStyle}>{this.getDartCheckoutRate()}</td>\r\n                </tr>\r\n                </tbody>\r\n            </Table>\r\n            <ToggleButtonGroup type=\"radio\" name=\"options\" value={this.state.dartChartType}\r\n                               onChange={this.handleDartChartTypeChange}\r\n                               style={{marginBottom: 10}}>\r\n                <ToggleButton value={DART_CHART_TYPE_BAR} style={{width: 100}}>\r\n                    <Glyphicon glyph=\"stats\"/>\r\n                </ToggleButton>\r\n                <ToggleButton value={DART_CHART_TYPE_RADAR} style={{width: 100}}>\r\n                    <Glyphicon glyph=\"certificate\"/>\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n            {this.state.dartChartType === DART_CHART_TYPE_BAR &&\r\n            <div ref={this.dartsBarChartRef}>\r\n                <DartsBarChart data={this.props.dartData}/>\r\n            </div>\r\n            }\r\n            {this.state.dartChartType === DART_CHART_TYPE_RADAR &&\r\n            <div ref={this.dartsRadarChartRef}>\r\n                <DartsRadarChart data={this.props.dartData}/>\r\n            </div>\r\n            }\r\n        </Well>\r\n    }\r\n\r\n    createGamesView() {\r\n        return <Well\r\n            style={{\r\n                paddingBottom: 0,\r\n                marginBottom: 5\r\n            }}>\r\n            <Table responsive style={{textAlign: 'center'}}>\r\n                <tbody>\r\n                <tr>\r\n                    <th style={this.tableStyle}>Gesamt</th>\r\n                    <th style={this.tableStyle}>Gewonnen</th>\r\n                    <th style={this.tableStyle}>Verloren</th>\r\n                    <th style={this.tableStyle}>Siegrate</th>\r\n                </tr>\r\n                <tr>\r\n                    <td style={this.tableStyle}>{this.props.gamesWon + this.props.gamesLost}</td>\r\n                    <td style={this.tableStyle}>{this.props.gamesWon}</td>\r\n                    <td style={this.tableStyle}>{this.props.gamesLost}</td>\r\n                    <td style={this.tableStyle}>{this.getWinRate()}</td>\r\n                </tr>\r\n                </tbody>\r\n            </Table>\r\n            <GamesBarChart data={this.props.gamesData}/>\r\n        </Well>\r\n    }\r\n\r\n    getWinRate() {\r\n        return this.getRate(this.props.gamesWon, this.props.gamesWon + this.props.gamesLost);\r\n    }\r\n\r\n    getDartCheckoutRate() {\r\n        return this.getRate(this.props.checkoutDarts, this.props.possibleCheckoutDarts);\r\n    }\r\n\r\n    getRate(value, possible) {\r\n        let rate = (value / possible * 100).toFixed(2);\r\n        return isNaN(rate) ? \"-\" : rate + \"%\";\r\n    }\r\n\r\n}\r\n\r\nStatistics.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    isLoggingIn: PropTypes.bool.isRequired,\r\n    isFetchingStatistics: PropTypes.bool.isRequired,\r\n    gamesWon: PropTypes.number.isRequired,\r\n    gamesLost: PropTypes.number.isRequired,\r\n    totalDarts: PropTypes.number.isRequired,\r\n    dartData: PropTypes.array,\r\n    gamesData: PropTypes.array,\r\n\r\n    showLogin: PropTypes.func.isRequired,\r\n    fetchStatistics: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Statistics;","import {connect} from 'react-redux'\r\nimport Statistics from \"../components/views/statistics/Statistics\";\r\nimport {showLoginModal} from \"../actions/user\";\r\nimport {fetchStatistics} from \"../actions/statistics\";\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    isLoggingIn: state.user.isLoggingIn,\r\n    isFetchingStatistics: state.statistics.isFetching,\r\n    gamesWon : state.statistics.gamesWon,\r\n    gamesLost : state.statistics.gamesLost,\r\n    totalDarts : state.statistics.totalDarts,\r\n    possibleCheckoutDarts : state.statistics.possibleCheckoutDarts,\r\n    checkoutDarts: state.statistics.checkoutDarts,\r\n    dartData : state.statistics.dartData,\r\n    gamesData: state.statistics.gamesData\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showLogin: () => dispatch(showLoginModal()),\r\n    fetchStatistics: () => dispatch(fetchStatistics())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Statistics)","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Alert, FormControl} from \"react-bootstrap\";\r\nimport documentUtil from \"../../../util/documentUtil\";\r\n\r\nconst TITLE = \"Spracheinstellungen\";\r\n\r\nclass SpeechSettings extends React.Component {\r\n\r\n    componentDidMount() {\r\n        documentUtil.setTitlePrefix(TITLE);\r\n    }\r\n\r\n    render() {\r\n        return <div style={{...this.props.style}}>\r\n            <h3 style={{marginTop: 0}}><strong>{TITLE}</strong></h3>\r\n            <Alert bsStyle=\"warning\" style={{marginBottom: 5, textAlign: 'center'}}>\r\n                Diese Einstellungen sind abhängig vom verwendeten Endgerät und Browser.<br/>\r\n                Daher werden sie nicht in Deinem Benutzerkonto gespeichert, sondern in Deinem Browser.\r\n            </Alert>\r\n            <p style={{marginBottom: 0}}><strong>Sprache:</strong></p>\r\n            <FormControl componentClass=\"select\" style={{width: 400, maxWidth: \"95%\", display: \"initial\"}}\r\n                         onChange={(e) => {\r\n                             this.props.onSelectedVoiceChange(e.target.value);\r\n                         }}\r\n                         value={this.props.selectedVoice\r\n                             ? this.props.selectedVoice.name\r\n                             : this.props.defaultVoice\r\n                                 ? this.props.defaultVoice.name\r\n                                 : undefined}>\r\n                {this.props.possibleVoices.map(possibleVoice => {\r\n                        let key = \"possible_voice_\" + possibleVoice.name;\r\n                        return <option key={key}\r\n                                       value={possibleVoice.name}>{possibleVoice.name} {possibleVoice.default && \"[Standard]\"}</option>\r\n                    }\r\n                )}\r\n            </FormControl>\r\n        </div>\r\n    }\r\n}\r\n\r\nSpeechSettings.propTypes = {\r\n    possibleVoices: PropTypes.array.isRequired,\r\n    selectedVoice: PropTypes.object,\r\n    defaultVoice: PropTypes.object,\r\n    onSelectedVoiceChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SpeechSettings","import React from 'react'\r\n\r\n/**\r\n * Wird benötigt, da das bootstrap-MenuItem ein a-tag rendered,\r\n * welches dadurch keine weiteren a-tags als children haben kann.\r\n */\r\nclass CustomDropDownMenuItem extends React.Component {\r\n    render() {\r\n        return <div role=\"menuitem\" onClick={this.props.onSelect}>\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\n\r\nCustomDropDownMenuItem.propTypes = {};\r\n\r\nexport default CustomDropDownMenuItem;","import React from 'react'\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport CustomDropDownMenuItem from \"../CustomDropDownMenuItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass NavigationBarDropdown extends React.Component {\r\n    render() {\r\n        let menuClassName = this.props.right ? \"navigation-bar-dropdown-menu-right\" : \"\";\r\n        menuClassName = this.props.fullWidth ? \"navigation-bar-dropdown-menu-full-width\" : menuClassName;\r\n        return <Dropdown id={this.props.id}>\r\n            <Dropdown.Toggle noCaret={!this.props.withCaret}\r\n                             className={this.props.withCaret ? \"navigation-bar-dropdown-toggle\" : \"navigation-bar-bordered-item\"}>\r\n                {this.props.icon} {this.props.text}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu className={menuClassName}>\r\n                {this.props.items.map((item, i) =>\r\n                    <CustomDropDownMenuItem key={this.props.id + \"_item_\" + i}>\r\n                        {item}\r\n                    </CustomDropDownMenuItem>\r\n                )}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    }\r\n}\r\n\r\nNavigationBarDropdown.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    items: PropTypes.array.isRequired,\r\n    icon: PropTypes.element,\r\n    text: PropTypes.string,\r\n    withCaret: PropTypes.bool,\r\n    right: PropTypes.bool,\r\n    fullWidth: PropTypes.bool\r\n};\r\n\r\nexport default NavigationBarDropdown;","import React from 'react'\r\nimport {MenuItem} from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport NavigationBarDropdown from \"./NavigationBarDropdown\";\r\n\r\nclass NavigationBarContainer {\r\n    constructor(unmergedItems, mergedItems, dropdownConfig) {\r\n        if (unmergedItems.length !== mergedItems.length) {\r\n            throw new Error(\"merged and unmerged items must have equal length\");\r\n        }\r\n        this.unmergedItems = unmergedItems;\r\n        this.mergedItems = mergedItems;\r\n        this.dropdownConfig = dropdownConfig;\r\n    }\r\n}\r\n\r\nclass DropdownConfig {\r\n    constructor(id, icon, text, showCaret = true) {\r\n        this.id = id;\r\n        this.icon = icon;\r\n        this.text = text;\r\n        this.showCaret = showCaret;\r\n    }\r\n}\r\n\r\nclass NavigationBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lastWidth: -1,\r\n            mergeCount: 0\r\n        };\r\n        this.bar = React.createRef();\r\n        this.resetMergeCount = this.resetMergeCount.bind(this);\r\n        this.maxMergeCount = this.maxMergeCount.bind(this);\r\n        this.shouldMerge = this.shouldMerge.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.resetMergeCount);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        let fixedChanged = this.props.fixedItems !== undefined &&\r\n            this.props.fixedItems.filter(this.notFalse).length !== prevProps.fixedItems.filter(this.notFalse).length;\r\n        let leftMergedChanged = this.props.leftContainer !== undefined &&\r\n            this.props.leftContainer.mergedItems.filter(this.notFalse).length !== prevProps.leftContainer.mergedItems.filter(this.notFalse).length;\r\n        let leftUnmergedChanged = this.props.leftContainer !== undefined &&\r\n            this.props.leftContainer.unmergedItems.filter(this.notFalse).length !== prevProps.leftContainer.unmergedItems.filter(this.notFalse).length;\r\n        let rightMergedChanged = this.props.rightContainer !== undefined &&\r\n            this.props.rightContainer.mergedItems.filter(this.notFalse).length !== prevProps.rightContainer.mergedItems.filter(this.notFalse).length;\r\n        let rightUnmergedChanged = this.props.rightContainer !== undefined &&\r\n            this.props.rightContainer.unmergedItems.filter(this.notFalse).length !== prevProps.rightContainer.unmergedItems.filter(this.notFalse).length;\r\n        if (fixedChanged\r\n            || leftMergedChanged || leftUnmergedChanged\r\n            || rightMergedChanged || rightUnmergedChanged) {\r\n            this.resetMergeCount()\r\n        } else if (this.shouldMerge() && this.state.mergeCount < this.maxMergeCount()) {\r\n            let prevCount = this.state.mergeCount;\r\n            this.setState({mergeCount: prevCount + 1});\r\n        }\r\n    }\r\n\r\n    notFalse(element){\r\n        return element !== false;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.resetMergeCount);\r\n    }\r\n\r\n    shouldMerge() {\r\n        if (!this.bar || !this.bar.current) {\r\n            return false;\r\n        }\r\n        return this.bar.current.offsetWidth < this.bar.current.scrollWidth;\r\n    }\r\n\r\n    maxMergeCount() {\r\n        let count = 0;\r\n        if (this.props.leftContainer) {\r\n            count += this.props.leftContainer.unmergedItems.length;\r\n        }\r\n        if (this.props.rightContainer) {\r\n            count += this.props.rightContainer.unmergedItems.length;\r\n        }\r\n        if (this.props.singleDropdown) {\r\n            count += 1;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    resetMergeCount(e) {\r\n        if(e === undefined){\r\n            this.setState({mergeCount: 0});\r\n        } else if (e.target.innerWidth !== this.state.lastWidth) {\r\n            // Nur bei Änderungen an der Breite, nicht bei der Höhe\r\n            this.setState({mergeCount: 0, lastWidth: e.target.innerWidth});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let allUnmergedRightLinks = this.props.rightContainer ? this.props.rightContainer.unmergedItems : [];\r\n        let allMergedRightLinks = this.props.rightContainer ? this.props.rightContainer.mergedItems : [];\r\n        let mergedRightLinks = [];\r\n        let unmergedRightLinks = [];\r\n\r\n        let allUnmergedLeftLinks = this.props.leftContainer ? this.props.leftContainer.unmergedItems : [];\r\n        let allMergedLeftLinks = this.props.leftContainer ? this.props.leftContainer.mergedItems : [];\r\n        let mergedLeftLinks = [];\r\n        let unmergedLeftLinks = [];\r\n\r\n        let singleDropdownLinks = [];\r\n\r\n        if (this.state.mergeCount === this.maxMergeCount() && this.props.singleDropdown) {\r\n            singleDropdownLinks = allMergedLeftLinks.concat(<MenuItem divider/>).concat(allMergedRightLinks);\r\n        } else {\r\n            let mergeRightLengthDiff = allUnmergedRightLinks.length - this.state.mergeCount;\r\n            let rightSliceIndex = mergeRightLengthDiff >= 0 ? mergeRightLengthDiff : 0;\r\n            mergedRightLinks = allMergedRightLinks.slice(rightSliceIndex, allUnmergedRightLinks.length);\r\n            unmergedRightLinks = allUnmergedRightLinks.slice(0, rightSliceIndex);\r\n\r\n            let mergeLeftLengthDiff = this.state.mergeCount - allUnmergedRightLinks.length;\r\n            let leftSliceIndex = mergeLeftLengthDiff >= 0 ? mergeLeftLengthDiff : 0;\r\n            mergedLeftLinks = allMergedLeftLinks.slice(0, leftSliceIndex);\r\n            unmergedLeftLinks = allUnmergedLeftLinks.slice(leftSliceIndex, allUnmergedLeftLinks.length);\r\n        }\r\n        let style = {...this.props.style};\r\n        if (this.props.alignCenter) {\r\n            style.justifyContent = \"center\";\r\n        }\r\n        return <div ref={this.bar} className={\"navigation-bar\" + (this.props.small ? \" navigation-bar-small\" : \"\")} style={style}>\r\n            <div className=\"navigation-bar-container\">\r\n                {this.props.fixedItems}\r\n                {mergedLeftLinks.length > 0 &&\r\n                <NavigationBarDropdown id={this.props.leftContainer.dropdownConfig.id} items={mergedLeftLinks}\r\n                                       icon={this.props.leftContainer.dropdownConfig.icon}\r\n                                       text={this.props.leftContainer.dropdownConfig.text}\r\n                                       withCaret={this.props.leftContainer.dropdownConfig.showCaret}/>}\r\n                {unmergedLeftLinks}\r\n            </div>\r\n\r\n            <div className=\"navigation-bar-container navigation-bar-container-right\">\r\n                {unmergedRightLinks}\r\n                {mergedRightLinks.length > 0 &&\r\n                <NavigationBarDropdown id={this.props.rightContainer.dropdownConfig.id} items={mergedRightLinks}\r\n                                       icon={this.props.rightContainer.dropdownConfig.icon}\r\n                                       text={this.props.rightContainer.dropdownConfig.text}\r\n                                       withCaret={this.props.rightContainer.dropdownConfig.showCaret}\r\n                                       right/>}\r\n                {singleDropdownLinks.length > 0 &&\r\n                <NavigationBarDropdown id={this.props.singleDropdown.id} items={singleDropdownLinks}\r\n                                       icon={this.props.singleDropdown.icon}\r\n                                       text={this.props.singleDropdown.text}\r\n                                       withCaret={this.props.singleDropdown.showCaret}\r\n                                       fullWidth/>}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nNavigationBar.propTypes = {\r\n    fixedItems: PropTypes.array,\r\n    leftContainer: PropTypes.instanceOf(NavigationBarContainer),\r\n    rightContainer: PropTypes.instanceOf(NavigationBarContainer),\r\n    singleDropdown: PropTypes.instanceOf(DropdownConfig),\r\n    alignCenter: PropTypes.bool,\r\n    small: PropTypes.bool\r\n};\r\n\r\nexport default NavigationBar;\r\nexport {NavigationBarContainer, DropdownConfig}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass NavigationBarItem extends React.Component {\r\n\r\n    render() {\r\n        return <NavLink className=\"navigation-bar-item\" to={this.props.navigationItem.route}>\r\n            {this.props.navigationItem.icon} {(this.props.showText === undefined || this.props.showText) && this.props.navigationItem.text}\r\n            {this.props.children}\r\n        </NavLink>\r\n    }\r\n}\r\n\r\nNavigationBarItem.propTypes = {\r\n    showText: PropTypes.bool,\r\n    navigationItem: PropTypes.object.isRequired\r\n};\r\n\r\nexport default NavigationBarItem","import React from 'react'\r\nimport {Alert, Button, FormControl, Modal} from \"react-bootstrap\";\r\nimport PropTypes from 'prop-types';\r\nimport Glyphicon from \"react-bootstrap/es/Glyphicon\";\r\n\r\nconst initialState = {\r\n    name: \"\",\r\n    password: \"\",\r\n    nameMatch: false\r\n};\r\n\r\nclass DeletionConfirmationModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initialState;\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.show !== this.props.show\r\n            && this.props.show === false) {\r\n            this.setState(initialState);\r\n        }\r\n    }\r\n\r\n    handleNameChange(value) {\r\n        let match = this.props.name === value;\r\n        this.setState({name: value, nameMatch: match});\r\n    }\r\n\r\n    handlePasswordChange(value) {\r\n        this.setState({password: value});\r\n    }\r\n\r\n    render() {\r\n        return <Modal backdrop='static' show={this.props.show} onHide={this.props.hide}>\r\n            <Modal.Body style={{textAlign: 'center', paddingTop: 0, paddingBottom: 0}}>\r\n                <h3>\r\n                    <Glyphicon glyph=\"exclamation-sign\" style={{color: \"#d9534f\"}}/>\r\n                    <strong> Benutzerkonto endgültig löschen</strong>\r\n                </h3>\r\n                <Alert bsStyle=\"danger\" style={{textAlign: 'center'}}>\r\n                    Das Löschen Deines Benutzerkontos kann nicht rückgängig gemacht werden! <br/>\r\n                    Um Dein Konto dennoch zu löschen, musst du Deinen Benutzernamen und Dein Passwort bestätigen.\r\n                </Alert>\r\n                <FormControl style={{marginBottom: 5}} type=\"text\" value={this.state.name}\r\n                             disabled={this.props.isDeleting}\r\n                             onChange={(e) => this.handleNameChange(e.target.value)}\r\n                             placeholder=\"Benutzername\" autoFocus/>\r\n                <FormControl style={{marginBottom: 5}} type=\"password\" value={this.state.password}\r\n                             disabled={this.props.isDeleting}\r\n                             onChange={(e) => this.handlePasswordChange(e.target.value)}\r\n                             placeholder=\"Passwort\"/>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{textAlign: 'center'}}>\r\n                <Button style={{width: 100}} bsStyle=\"danger\"\r\n                        disabled={this.isButtonDisabled()}\r\n                        onClick={() => this.props.deleteUser(this.state.password)}>\r\n                    Löschen\r\n                </Button>\r\n                <Button style={{width: 100}} bsStyle='primary'\r\n                        onClick={this.props.hide} disabled={this.props.isDeleting}>\r\n                    Abbrechen\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>;\r\n    }\r\n\r\n    isButtonDisabled() {\r\n        return this.props.isDeleting || !this.state.nameMatch || this.state.password === \"\";\r\n    }\r\n\r\n}\r\n\r\nDeletionConfirmationModal.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    hide: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isDeleting: PropTypes.bool.isRequired,\r\n    deleteUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DeletionConfirmationModal;","import React from 'react'\r\nimport {Alert, Button, ControlLabel, FormControl, Glyphicon} from \"react-bootstrap\";\r\nimport PropTypes from 'prop-types';\r\nimport DeletionConfirmationModal from \"../../modals/DeletionConfirmationModal\";\r\nimport documentUtil from \"../../../util/documentUtil\";\r\n\r\nconst TITLE = \"Benutzereinstellungen\";\r\n\r\nclass UserSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: props.userName !== undefined ? props.userName : \"\",\r\n            currentPassword: \"\",\r\n            newPassword: \"\",\r\n            passwordRepeat: \"\",\r\n            passwordsMatch: true,\r\n            saveButtonDisabled: true,\r\n            showDeletionConfirmationModal: false\r\n        };\r\n        this.handleUserNameChange = this.handleUserNameChange.bind(this);\r\n        this.handleCurrentPasswordChange = this.handleCurrentPasswordChange.bind(this);\r\n        this.handleNewPasswordChange = this.handleNewPasswordChange.bind(this);\r\n        this.handlePasswordRepeatChange = this.handlePasswordRepeatChange.bind(this);\r\n        this.saveButtonDisabled = this.saveButtonDisabled.bind(this);\r\n        this.showDeletionConfirmationModal = this.showDeletionConfirmationModal.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        documentUtil.setTitlePrefix(TITLE);\r\n    }\r\n\r\n    handleUserNameChange(value) {\r\n        this.setState({\r\n            userName: value,\r\n            saveButtonDisabled: this.saveButtonDisabled(this.state.currentPassword, this.state.passwordsMatch, value, this.state.newPassword)\r\n        });\r\n    }\r\n\r\n    handleNewPasswordChange(value) {\r\n        let match = value === this.state.passwordRepeat;\r\n        this.setState({\r\n            newPassword: value,\r\n            passwordsMatch: match,\r\n            saveButtonDisabled: this.saveButtonDisabled(this.state.currentPassword, match, this.state.userName, value)\r\n        });\r\n    }\r\n\r\n    handleCurrentPasswordChange(value) {\r\n        this.setState({\r\n            currentPassword: value,\r\n            saveButtonDisabled: this.saveButtonDisabled(value, this.state.passwordsMatch, this.state.userName, this.state.newPassword)\r\n        });\r\n    }\r\n\r\n    handlePasswordRepeatChange(value) {\r\n        let match = value === this.state.newPassword;\r\n        this.setState({\r\n            passwordRepeat: value,\r\n            passwordsMatch: match,\r\n            saveButtonDisabled: this.saveButtonDisabled(this.state.currentPassword, match, this.state.name, this.state.newPassword)\r\n        });\r\n    }\r\n\r\n    saveButtonDisabled(currentPassword, passwordsMatch, userName, newPassword) {\r\n        return currentPassword === \"\"\r\n            || !passwordsMatch\r\n            || (userName === this.props.userName && newPassword === \"\");\r\n    }\r\n\r\n    showDeletionConfirmationModal(show) {\r\n        this.setState({showDeletionConfirmationModal: show});\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <DeletionConfirmationModal show={this.state.showDeletionConfirmationModal}\r\n                                       hide={() => this.showDeletionConfirmationModal(false)}\r\n                                       name={this.props.userName} isDeleting={this.props.isDeletingUser}\r\n                                       deleteUser={this.props.deleteUser}/>\r\n            <h3 style={{marginTop: 0}}><strong>{TITLE}</strong></h3>\r\n            <ControlLabel>Benutzername ändern</ControlLabel>\r\n            <FormControl type=\"text\"\r\n                         className=\"user-settings-input\"\r\n                         disabled={this.props.isDeletingUser || this.props.isModifyingUser}\r\n                         value={this.state.userName}\r\n                         onChange={(e) => this.handleUserNameChange(e.target.value)}\r\n                         placeholder=\"Benutzername\"/>\r\n            <ControlLabel>Passwort ändern</ControlLabel>\r\n            <FormControl type=\"password\"\r\n                         className=\"user-settings-input\"\r\n                         disabled={this.props.isDeletingUser || this.props.isModifyingUser}\r\n                         value={this.state.newPassword}\r\n                         onChange={(e) => this.handleNewPasswordChange(e.target.value)}\r\n                         placeholder=\"Neues Passwort\"/>\r\n            <FormControl type=\"password\"\r\n                         className=\"user-settings-input\"\r\n                         disabled={this.props.isDeletingUser || this.props.isModifyingUser}\r\n                         value={this.state.passwordRepeat}\r\n                         onChange={(e) => this.handlePasswordRepeatChange(e.target.value)}\r\n                         placeholder=\"Neues Passwort wiederholen\"/>\r\n            {!this.state.passwordsMatch &&\r\n            <div style={{color: \"red\"}}>\r\n                <Glyphicon glyph=\"remove\"/> Passwort muss übereinstimmen\r\n            </div>\r\n            }\r\n            <ControlLabel style={{marginTop: 15}}>Aktuelles Passwort bestätigen</ControlLabel>\r\n            <FormControl type=\"password\"\r\n                         className=\"user-settings-input\"\r\n                         disabled={this.props.isDeletingUser || this.props.isModifyingUser}\r\n                         value={this.state.currentPassword}\r\n                         onChange={(e) => this.handleCurrentPasswordChange(e.target.value)}\r\n                         placeholder=\"Aktuelles Passwort\"/>\r\n            <Button bsStyle=\"primary\" style={{display: \"block\", margin: \"auto auto 10px\"}}\r\n                    disabled={this.props.isDeletingUser || this.props.isModifyingUser || this.state.saveButtonDisabled}\r\n                    onClick={() => this.props.modifyUser(\r\n                        this.state.currentPassword,\r\n                        this.state.userName === this.props.userName ? null : this.state.userName,\r\n                        this.state.newPassword === \"\" ? null : this.state.newPassword\r\n                    )}>\r\n                Änderungen speichern\r\n            </Button>\r\n\r\n            <Alert bsStyle=\"danger\" style={{marginTop: 25}}>\r\n                <h3 style={{marginTop: 0}}><strong>Benutzerkonto löschen</strong></h3>\r\n                <Button style={{display: \"block\", margin: \"auto\"}} bsStyle=\"danger\" disabled={this.props.disabled}\r\n                        onClick={() => this.showDeletionConfirmationModal(true)}>\r\n                    Benutzer löschen\r\n                </Button>\r\n            </Alert>\r\n        </div>\r\n    }\r\n}\r\n\r\nUserSettings.propTypes = {\r\n    userName: PropTypes.string.isRequired,\r\n    isModifyingUser: PropTypes.bool.isRequired,\r\n    isDeletingUser: PropTypes.bool.isRequired,\r\n    modifyUser: PropTypes.func.isRequired,\r\n    deleteUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserSettings","import {connect} from 'react-redux'\r\nimport {deleteUser, modifyUser} from \"../actions/user\";\r\nimport UserSettings from \"../components/views/settings/UserSettings\";\r\n\r\nconst mapStateToProps = state => ({\r\n    userName: state.user.name,\r\n    isModifyingUser: state.user.isModifying,\r\n    isDeletingUser: state.user.isDeletingUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    modifyUser: (currentPassword, newName, newPassword) => dispatch(modifyUser(currentPassword, newName, newPassword)),\r\n    deleteUser: (currentPassword) => dispatch(deleteUser(currentPassword))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UserSettings)","import React from 'react'\r\nimport {Button, FormControl, Glyphicon, OverlayTrigger, Table, Tooltip, Well} from \"react-bootstrap\";\r\nimport {ifEnterKey} from \"../../../util/functionUtil\";\r\nimport PropTypes from \"prop-types\";\r\nimport StackLoader from \"../../general/loaders/StackLoader\";\r\nimport SpeechSettings from \"./SpeechSettings\";\r\nimport {NAVIGATION_ITEM} from \"../../../constants/navigationItems\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport NavigationBar, {DropdownConfig, NavigationBarContainer} from \"../../general/navigationbar/NavigationBar\";\r\nimport NavigationBarItem from \"../../general/navigationbar/NavigationBarItem\";\r\nimport OnlyForLoggedInUsersContainer from \"../../../containers/OnlyForLoggedInUsersContainer\";\r\nimport UserSettingsContainer from \"../../../containers/UserSettingsContainer\";\r\nimport documentUtil from \"../../../util/documentUtil\";\r\n\r\nclass Settings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userNameToPermit: \"\",\r\n            permitButtonDisabled: true,\r\n            playersInformation: Settings.mergeUsers(this.props.playableUsers, this.props.permittedUsers)\r\n        };\r\n        this.handleUserNameToPermitChange = this.handleUserNameToPermitChange.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.userName !== prevProps.userName\r\n            || this.props.permittedUsers !== prevProps.permittedUsers\r\n            || this.props.playableUsers !== prevProps.playableUsers\r\n        ) {\r\n            this.setState({\r\n                name: this.props.userName !== undefined ? this.props.userName : \"\",\r\n                playersInformation: Settings.mergeUsers(this.props.playableUsers, this.props.permittedUsers)\r\n            });\r\n        }\r\n    }\r\n\r\n    static mergeUsers(playableUsers, permittedUsers) {\r\n        let playerInformation = playableUsers.map(user => (\r\n            {\r\n                id: user.id,\r\n                name: user.name,\r\n                playable: true,\r\n                permitted: false\r\n            }\r\n        ));\r\n        for (let i = 0; i < permittedUsers.length; i++) {\r\n            let userInPlayableFound = false;\r\n            for (let j = 0; j < playerInformation.length; j++) {\r\n                if (permittedUsers[i].id === playerInformation[j].id) {\r\n                    playerInformation[j].permitted = true;\r\n                    userInPlayableFound = true;\r\n                }\r\n            }\r\n            if (!userInPlayableFound) {\r\n                playerInformation.push({\r\n                    id: permittedUsers[i].id,\r\n                    name: permittedUsers[i].name,\r\n                    playable: false,\r\n                    permitted: true\r\n                });\r\n            }\r\n        }\r\n        return playerInformation;\r\n    }\r\n\r\n    handleUserNameToPermitChange(value) {\r\n        let buttonDisabled = value === undefined || value === null || value === \"\";\r\n        this.setState({\r\n            userNameToPermit: value,\r\n            permitButtonDisabled: buttonDisabled\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let navigationBarItems = [\r\n            this.props.isLoggedIn &&\r\n            <NavigationBarItem key=\"settings_user_link\" navigationItem={NAVIGATION_ITEM.SETTINGS_USER}/>,\r\n\r\n            this.props.isLoggedIn &&\r\n            <NavigationBarItem key=\"settings_permissions_link\" navigationItem={NAVIGATION_ITEM.SETTINGS_PERMISSIONS}/>,\r\n\r\n            <NavigationBarItem key=\"settings_speech_link\" navigationItem={NAVIGATION_ITEM.SETTINGS_SPEECH}/>,\r\n        ];\r\n        let navigationBarDropdown = new DropdownConfig(\"settings_dropdown\",\r\n            <Glyphicon glyph=\"cog\"/>, \"Weitere Einstellungen\");\r\n        let navContainer = new NavigationBarContainer(navigationBarItems, navigationBarItems, navigationBarDropdown);\r\n        return <div style={{textAlign: 'center'}}>\r\n            <NavigationBar style={{top: 40, borderTop: \"1px solid black\", minHeight: 31}}\r\n                           rightContainer={navContainer} alignCenter small/>\r\n            <div style={{\r\n                marginTop: 31,\r\n                paddingTop: 10,\r\n                paddingLeft: 20,\r\n                paddingRight: 20,\r\n                overflowY: \"auto\",\r\n                position: \"absolute\",\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0\r\n            }}>\r\n                <Route exact path={NAVIGATION_ITEM.SETTINGS.route} render={() => this.props.isLoggedIn\r\n                    ? <Redirect to={NAVIGATION_ITEM.SETTINGS_USER.route}/>\r\n                    : <Redirect to={NAVIGATION_ITEM.SETTINGS_SPEECH.route}/>}/>\r\n                <Route path={NAVIGATION_ITEM.SETTINGS_SPEECH.route} render={() =>\r\n                    <SpeechSettings style={{marginBottom: 5}}\r\n                                    selectedVoice={this.props.selectedVoice}\r\n                                    defaultVoice={this.props.defaultVoice}\r\n                                    possibleVoices={this.props.possibleVoices}\r\n                                    onSelectedVoiceChange={this.props.setSelectedVoiceByName}/>\r\n                }\r\n                />\r\n                <Route path={NAVIGATION_ITEM.SETTINGS_USER.route} render={() =>\r\n                    <OnlyForLoggedInUsersContainer\r\n                        text=\"Benutzereinstellungen können nur von angemeldeten Benutzern angepasst werden\">\r\n                        <UserSettingsContainer/>\r\n                    </OnlyForLoggedInUsersContainer>\r\n                }\r\n                />\r\n                <Route path={NAVIGATION_ITEM.SETTINGS_PERMISSIONS.route} render={() =>\r\n                    <OnlyForLoggedInUsersContainer\r\n                        text=\"Berechtigungen können nur von angemeldeten Benutzern angepasst werden\">\r\n                        {this.createPermissionSettings()}\r\n                    </OnlyForLoggedInUsersContainer>\r\n                }\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    createPermissionSettings() {\r\n        const TITLE = \"Berechtigungen\";\r\n        documentUtil.setTitlePrefix(TITLE);\r\n        return <div>\r\n            <h3 style={{marginTop: 0}}><strong>{TITLE}</strong></h3>\r\n            <div>\r\n                <p><strong>Hier siehst Du welche Spieler Dir erlaubt haben ein Spiel mit ihnen zu erstellen und\r\n                    kannst einstellen wer dich in einem Spiel auswählen darf.</strong></p>\r\n                <FormControl style={{marginBottom: 5, width: 300, maxWidth: \"95%\", display: 'inline'}} type=\"text\"\r\n                             disabled={this.props.isUpdatingPlayerPermission}\r\n                             value={this.state.userNameToPermit}\r\n                             onChange={(e) => this.handleUserNameToPermitChange(e.target.value)}\r\n                             onKeyDown={ifEnterKey(() => {\r\n                                     if (!this.state.permitButtonDisabled && !this.props.isUpdatingPlayerPermission) {\r\n                                         this.props.addPlayerPermissionByName(this.state.userNameToPermit)\r\n                                     }\r\n                                 }\r\n                             )}\r\n                             placeholder=\"Spieler berechtigen\"/>\r\n                <Button bsStyle=\"success\" style={{marginLeft: 2}}\r\n                        disabled={this.state.permitButtonDisabled || this.props.isUpdatingPlayerPermission}\r\n                        onClick={() => this.props.addPlayerPermissionByName(this.state.userNameToPermit)}>\r\n                    Berechtigen\r\n                </Button>\r\n            </div>\r\n            {this.createAuthorizationTable()}\r\n        </div>\r\n    }\r\n\r\n    createAuthorizationTable() {\r\n        return <Well style={{marginTop: 20, paddingBottom: 0, textAlign: 'center'}}>\r\n            <Table responsive hover style={{textAlign: 'center'}}>\r\n                <thead>\r\n                <tr>\r\n                    <th style={{whiteSpace: 'normal', textAlign: 'center', maxWidth: 100}}>Name</th>\r\n                    <th style={{whiteSpace: 'normal', textAlign: 'center'}}>Darf von mir in Spielen ausgewählt werden\r\n                    </th>\r\n                    <th style={{whiteSpace: 'normal', textAlign: 'center'}}>Darf mich in Spielen auswählen</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.state.playersInformation.map(playerInformation =>\r\n                    playerInformation.id !== this.props.userId &&\r\n                    <tr key={\"user_row_\" + playerInformation.id}>\r\n                        <td style={{\r\n                            whiteSpace: 'normal',\r\n                            textOverflow: 'ellipsis',\r\n                            maxWidth: 100\r\n                        }}>{playerInformation.name}</td>\r\n                        <td>\r\n                            {playerInformation.playable\r\n                                ? <Glyphicon style={{color: 'green'}} glyph=\"ok\"/>\r\n                                : <Glyphicon style={{color: 'red'}} glyph=\"remove\"/>}\r\n                        </td>\r\n                        <td>\r\n                            {playerInformation.permitted\r\n                                ? <OverlayTrigger placement='top'\r\n                                                  overlay={<Tooltip id=\"tooltip\">Berechtigung nehmen</Tooltip>}>\r\n                                    <Button bsStyle=\"success\"\r\n                                            onClick={() => this.props.removePlayerPermission(playerInformation.id)}\r\n                                            disabled={this.props.isUpdatingPlayerPermission}>\r\n                                        <Glyphicon glyph=\"ok\"/>\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                                : <OverlayTrigger placement='top'\r\n                                                  overlay={<Tooltip id=\"tooltip\">Berechtigung geben</Tooltip>}>\r\n                                    <Button bsStyle=\"danger\"\r\n                                            onClick={() => this.props.addPlayerPermissionById(playerInformation.id)}\r\n                                            disabled={this.props.isUpdatingPlayerPermission}>\r\n                                        <Glyphicon glyph=\"remove\"/>\r\n                                    </Button>\r\n                                </OverlayTrigger>\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n            </Table>\r\n            {(this.props.isFetchingPlayableUsers || this.props.isFetchingPermittedUsers)\r\n            &&\r\n            <StackLoader label=\"Lade Spieler-Berechtigungen...\"/>\r\n            }\r\n        </Well>\r\n    }\r\n\r\n}\r\n\r\nSettings.propTypes = {\r\n    userId: PropTypes.string,\r\n    userName: PropTypes.string,\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    isLoggingIn: PropTypes.bool.isRequired,\r\n\r\n    playableUsers: PropTypes.array.isRequired,\r\n    fetchPlayableUsersFailed: PropTypes.bool.isRequired,\r\n    isFetchingPlayableUsers: PropTypes.bool.isRequired,\r\n\r\n    permittedUsers: PropTypes.array.isRequired,\r\n    fetchPermittedUsersFailed: PropTypes.bool.isRequired,\r\n    isFetchingPermittedUsers: PropTypes.bool.isRequired,\r\n\r\n    isUpdatingPlayerPermission: PropTypes.bool.isRequired,\r\n\r\n    showLogin: PropTypes.func.isRequired,\r\n    addPlayerPermissionById: PropTypes.func.isRequired,\r\n    addPlayerPermissionByName: PropTypes.func.isRequired,\r\n    removePlayerPermission: PropTypes.func.isRequired,\r\n\r\n    possibleVoices: PropTypes.array.isRequired,\r\n    selectedVoice: PropTypes.object,\r\n    setSelectedVoiceByName: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Settings;","import {connect} from 'react-redux'\r\nimport Settings from \"../components/views/settings/Settings\";\r\nimport {showLoginModal} from \"../actions/user\";\r\nimport {addPlayerPermissionById, addPlayerPermissionByName, removePlayerPermission} from \"../actions/playerPermission\";\r\nimport {sortPlayerByNameAsc} from \"../services/sortService\";\r\nimport {setSelectedVoiceByName} from \"../actions/speech\";\r\n\r\nconst mapStateToProps = state => ({\r\n    userId: state.user.id,\r\n    userName: state.user.name,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    isLoggingIn: state.user.isLoggingIn,\r\n\r\n    playableUsers: state.playerPermission.playableUsers.slice().sort(sortPlayerByNameAsc),\r\n    fetchPlayableUsersFailed: state.playerPermission.fetchPlayableUsersFailed,\r\n    isFetchingPlayableUsers: state.playerPermission.isFetchingPlayableUsers,\r\n\r\n    permittedUsers: state.playerPermission.permittedUsers.slice().sort(sortPlayerByNameAsc),\r\n    fetchPermittedUsersFailed: state.playerPermission.fetchPermittedUsersFailed,\r\n    isFetchingPermittedUsers: state.playerPermission.isFetchingPermittedUsers,\r\n\r\n    isUpdatingPlayerPermission: state.playerPermission.isUpdatingPlayerPermission,\r\n\r\n    possibleVoices: state.speech.possibleVoices,\r\n    selectedVoice: state.speech.selectedVoice,\r\n    defaultVoice: state.speech.defaultVoice\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showLogin: () => dispatch(showLoginModal()),\r\n    addPlayerPermissionById: (userId) => dispatch(addPlayerPermissionById(userId)),\r\n    addPlayerPermissionByName: (username) => dispatch(addPlayerPermissionByName(username)),\r\n    removePlayerPermission: (userId) => dispatch(removePlayerPermission(userId)),\r\n    setSelectedVoiceByName: (voiceName) => dispatch(setSelectedVoiceByName(voiceName))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Settings)","import React from 'react'\r\nimport {Button, FormControl, Modal} from \"react-bootstrap\";\r\nimport PropTypes from 'prop-types';\r\nimport {ifEnterKey} from \"../../util/functionUtil\";\r\n\r\nconst initialState = {\r\n    name: \"\",\r\n    password: \"\"\r\n};\r\n\r\nclass LoginModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initialState;\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.show !== this.props.show\r\n            && this.props.show === false) {\r\n            this.setState(initialState);\r\n        }\r\n    }\r\n\r\n    handleNameChange(value) {\r\n        this.setState({name: value});\r\n    }\r\n\r\n    handlePasswordChange(value) {\r\n        this.setState({password: value});\r\n    }\r\n\r\n    render() {\r\n        // restoreFocus auf false, da sonst beim Öffnen des SignUpModals der Fokus verloren geht\r\n        // (der LoginModal wird geschlossen und setzt den Fokus auf das zuletzt fokusierte Element)\r\n        return <Modal restoreFocus={false} bsSize=\"small\" backdrop='static' show={this.props.show}\r\n                      onHide={this.props.hide}>\r\n            <Modal.Body style={{textAlign: 'center', paddingBottom: 0}}>\r\n                <Modal.Title style={{marginBottom: 10}}>Anmelden</Modal.Title>\r\n                <FormControl style={{marginBottom: 5}} type=\"text\" value={this.state.name}\r\n                             onChange={(e) => this.handleNameChange(e.target.value)}\r\n                             onKeyDown={ifEnterKey(() => {\r\n                                 if (!this.isLoginDisabled()) {\r\n                                     this.doLogin();\r\n                                 }\r\n                             })}\r\n                             placeholder=\"Benutzername\" autoFocus/>\r\n                <FormControl type=\"password\" value={this.state.password}\r\n                             onChange={(e) => this.handlePasswordChange(e.target.value)}\r\n                             onKeyDown={ifEnterKey(() => {\r\n                                 if (!this.isLoginDisabled()) {\r\n                                     this.doLogin();\r\n                                 }\r\n                             })}\r\n                             placeholder=\"Passwort\"/>\r\n                <Button bsStyle=\"link\" onClick={() => {\r\n                    this.props.hide();\r\n                    this.props.showSignUp();\r\n                }}>Registrieren</Button>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{textAlign: 'center'}}>\r\n                <Button style={{width: 100}} bsStyle=\"primary\"\r\n                        disabled={this.isLoginDisabled()}\r\n                        onClick={() => this.doLogin()}>\r\n                    Anmelden\r\n                </Button>\r\n                <Button style={{width: 100}} bsStyle='primary' onClick={this.props.hide}\r\n                        disabled={this.props.isLoggingIn}>\r\n                    Abbrechen\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>;\r\n    }\r\n\r\n    isLoginDisabled() {\r\n        return this.props.isLoggingIn || this.state.name === \"\" || this.state.password === \"\";\r\n    }\r\n\r\n    doLogin() {\r\n        this.props.login(this.state.name, this.state.password);\r\n    }\r\n}\r\n\r\nLoginModal.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    hide: PropTypes.func.isRequired,\r\n    showSignUp: PropTypes.func.isRequired,\r\n    show: PropTypes.bool.isRequired,\r\n    isLoggingIn: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default LoginModal;\r\n","import {connect} from 'react-redux'\r\nimport LoginModal from \"../../components/modals/LoginModal\";\r\nimport {hideLoginModal, login, showSignUpModal} from \"../../actions/user\";\r\n\r\nconst mapStateToProps = state => ({\r\n    show: state.user.showLoginModal,\r\n    isLoggingIn: state.user.isLoggingIn\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    login: (name, password) => dispatch(login(name, password)),\r\n    hide: () => dispatch(hideLoginModal()),\r\n    showSignUp: () => dispatch(showSignUpModal())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LoginModal)","import React from 'react'\r\nimport {Button, FormControl, Glyphicon, Modal} from \"react-bootstrap\";\r\nimport PropTypes from 'prop-types';\r\nimport {ifEnterKey} from \"../../util/functionUtil\";\r\n\r\nconst initialState = {\r\n    name: \"\",\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n    passwordsMatch: true\r\n};\r\n\r\nclass SignUpModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initialState;\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handlePasswordRepeatChange = this.handlePasswordRepeatChange.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.show !== this.props.show\r\n            && this.props.show === false) {\r\n            this.setState(initialState);\r\n        }\r\n    }\r\n\r\n    handleNameChange(value) {\r\n        this.setState({name: value});\r\n    }\r\n\r\n    handlePasswordChange(value) {\r\n        let match = value === this.state.passwordRepeat;\r\n        this.setState({password: value, passwordsMatch: match});\r\n    }\r\n\r\n    handlePasswordRepeatChange(value) {\r\n        let match = value === this.state.password;\r\n        this.setState({passwordRepeat: value, passwordsMatch: match});\r\n    }\r\n\r\n    render() {\r\n        return <Modal bsSize=\"small\" backdrop='static' show={this.props.show} onHide={this.props.hide}>\r\n            <Modal.Body style={{textAlign: 'center'}}>\r\n                <Modal.Title style={{marginBottom: 10}}>Registrieren</Modal.Title>\r\n                <FormControl style={{marginBottom: 5}} type=\"text\" value={this.state.name}\r\n                             onChange={(e) => this.handleNameChange(e.target.value)}\r\n                             onKeyDown={ifEnterKey(() => {\r\n                                 if (!this.isSignupDisabled()) {\r\n                                     this.doSignUp()\r\n                                 }\r\n                             })}\r\n                             placeholder=\"Benutzername\" autoFocus/>\r\n                <FormControl style={{marginBottom: 5}} type=\"password\" value={this.state.password}\r\n                             onChange={(e) => this.handlePasswordChange(e.target.value)}\r\n                             onKeyDown={ifEnterKey(() => {\r\n                                 if (!this.isSignupDisabled()) {\r\n                                     this.doSignUp()\r\n                                 }\r\n                             })}\r\n                             placeholder=\"Passwort\"/>\r\n                <FormControl type=\"password\" value={this.state.passwordRepeat}\r\n                             onChange={(e) => this.handlePasswordRepeatChange(e.target.value)}\r\n                             onKeyDown={ifEnterKey(() => {\r\n                                 if (!this.isSignupDisabled()) {\r\n                                     this.doSignUp()\r\n                                 }\r\n                             })}\r\n                             placeholder=\"Passwort wiederholen\"/>\r\n                {!this.state.passwordsMatch &&\r\n                <div style={{color: \"red\"}}>\r\n                    <Glyphicon glyph=\"remove\"/> Passwort muss übereinstimmen\r\n                </div>\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer style={{textAlign: 'center'}}>\r\n                <Button style={{width: 100}} bsStyle=\"primary\"\r\n                        disabled={this.isSignupDisabled()}\r\n                        onClick={() => this.doSignUp()}>\r\n                    Registrieren\r\n                </Button>\r\n                <Button style={{width: 100}} bsStyle='primary' onClick={this.props.hide}>Abbrechen</Button>\r\n            </Modal.Footer>\r\n        </Modal>;\r\n    }\r\n\r\n    isSignupDisabled() {\r\n        return !this.state.passwordsMatch || this.props.isSigningUp || this.state.name === \"\"\r\n            || this.state.password === \"\" || this.state.passwordRepeat === \"\";\r\n    }\r\n\r\n    doSignUp() {\r\n        this.props.signUp(this.state.name, this.state.password);\r\n    }\r\n}\r\n\r\nSignUpModal.propTypes = {\r\n    show: PropTypes.bool,\r\n    hide: PropTypes.func.isRequired,\r\n    isSigningUp: PropTypes.bool,\r\n    signUp: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SignUpModal;\r\n","import {connect} from 'react-redux'\r\nimport SignUpModal from \"../../components/modals/SignUpModal\";\r\nimport {hideSignUpModal, signUp} from \"../../actions/user\";\r\n\r\nconst mapStateToProps = state => ({\r\n    show: state.user.showSignUpModal,\r\n    isSigningUp: state.user.isSigningUp\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUp: (name, password) => dispatch(signUp(name, password)),\r\n    hide: () => dispatch(hideSignUpModal())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SignUpModal)","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass About extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchServerVersion();\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            Client: {`${process.env.REACT_APP_VERSION}`} <br/>\r\n            Server: {this.props.serverVersion ? this.props.serverVersion : \"Lade...\"}\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nAbout.propTypes = {\r\n    fetchServerVersion: PropTypes.func.isRequired,\r\n    serverVersion: PropTypes.string\r\n};\r\n\r\nexport default About","import {connect} from 'react-redux'\r\nimport {fetchServerVersion} from \"../actions/serverInformation\";\r\nimport About from \"../components/views/about/About\";\r\n\r\nconst mapStateToProps = state => ({\r\n    serverVersion: state.serverInformation.version,\r\n    isFetchingServerVersion: state.serverInformation.isFetchingVersion\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchServerVersion: () => dispatch(fetchServerVersion())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(About)","import {connect} from 'react-redux'\r\nimport SimpleModal from \"../../components/modals/SimpleModal\";\r\nimport {hideCurrent} from \"../../actions/modal\";\r\n\r\nconst mapStateToProps = state => ({\r\n    show: state.modal.show,\r\n    item: state.modal.show ? state.modal.items[0] : {}\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    hide: () => dispatch(hideCurrent())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SimpleModal)","import React from 'react'\r\nimport {Button} from \"react-bootstrap\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ButtonTile extends React.Component {\r\n\r\n    render() {\r\n        return <Button bsStyle=\"primary\"\r\n                       disabled={this.props.disabled}\r\n                       style={{\r\n                           margin: 5,\r\n                           fontSize: 40,\r\n                           display: \"inherit\",\r\n                           ...this.props.style\r\n                       }}\r\n                       onClick={this.props.onClick}>\r\n            {this.props.icon}\r\n            {this.props.text}\r\n            {this.props.children}\r\n        </Button>\r\n    }\r\n}\r\n\r\nButtonTile.propTypes = {\r\n    onClick: PropTypes.func,\r\n    icon: PropTypes.element,\r\n    text: PropTypes.string,\r\n    route: PropTypes.string,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\nexport default ButtonTile","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ButtonTile from \"./ButtonTile\";\r\n\r\nclass NavigationTile extends React.Component {\r\n\r\n    render() {\r\n        return <ButtonTile style={this.props.style}\r\n                           onClick={() => this.props.history.push(this.props.navigationItem.route)}\r\n                           icon={this.props.navigationItem.icon}\r\n                           text={this.props.navigationItem.text}\r\n                           disabled={this.props.disabled}>\r\n            {this.props.children}\r\n        </ButtonTile>\r\n    }\r\n}\r\n\r\nNavigationTile.propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    navigationItem: PropTypes.object.isRequired,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\nexport default NavigationTile","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TileRow extends React.Component {\r\n\r\n    render() {\r\n        let columnsValue = \"\";\r\n        for (let i = 0; i < this.props.columns.length; i++) {\r\n            if (this.props.columns[i].fixedSize) {\r\n                columnsValue += this.props.columns[i].width + \"px\";\r\n            } else {\r\n                columnsValue += \"minmax(\" + this.props.columns[i].width + \"px, 1fr)\";\r\n            }\r\n            columnsValue += \" \";\r\n        }\r\n        return <div style={{\r\n            display: 'grid',\r\n            gridGap: this.props.gridGap ? this.props.gridGap + \"px\" : 0,\r\n            gridTemplateColumns: \"repeat(auto-fit, \" + columnsValue + \")\"\r\n        }}>\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\n\r\nTileRow.propTypes = {\r\n    gridGap: PropTypes.number,\r\n    columns: PropTypes.array.isRequired\r\n};\r\n\r\nexport default TileRow","import React from 'react'\r\nimport ButtonTile from \"./ButtonTile\";\r\nimport PropTypes from 'prop-types';\r\nimport {NAVIGATION_ITEM} from \"../../../constants/navigationItems\";\r\nimport {Badge} from \"react-bootstrap\";\r\nimport NavigationTile from \"./NavigationTile\";\r\nimport TileRow from \"./TileRow\";\r\nimport documentUtil from \"../../../util/documentUtil\";\r\n\r\nconst COLUMNS = [{width: 300}];\r\n\r\nclass Main extends React.Component {\r\n\r\n    componentDidMount() {\r\n        documentUtil.setTitlePrefix(\"\")\r\n    }\r\n\r\n    render() {\r\n        return <div style={{height: \"100%\"}}>\r\n            <TileRow columns={COLUMNS}>\r\n                <NavigationTile navigationItem={NAVIGATION_ITEM.NEW_GAME} history={this.props.history}/>\r\n                <NavigationTile navigationItem={NAVIGATION_ITEM.NEW_TRAINING} history={this.props.history}/>\r\n                {this.props.gameRunning &&\r\n                <NavigationTile navigationItem={NAVIGATION_ITEM.GAME} history={this.props.history}/>\r\n                }\r\n            </TileRow>\r\n            <TileRow columns={COLUMNS}>\r\n                <NavigationTile navigationItem={NAVIGATION_ITEM.SETTINGS} history={this.props.history}/>\r\n                {this.props.isLoggedIn &&\r\n                <NavigationTile navigationItem={NAVIGATION_ITEM.NOTIFICATIONS} history={this.props.history}\r\n                                style={{position: \"relative\"}}>\r\n                    {this.props.unreadNotificationsCount > 0 &&\r\n                    <Badge style={{\r\n                        backgroundColor: \"#222\",\r\n                        color: \"white\",\r\n                        position: \"absolute\",\r\n                        top: 5,\r\n                        left: \"54%\"\r\n                    }}>\r\n                        {this.props.unreadNotificationsCount}\r\n                    </Badge>\r\n                    }\r\n                </NavigationTile>\r\n                }\r\n                {this.props.isLoggedIn &&\r\n                <NavigationTile navigationItem={NAVIGATION_ITEM.STATISTICS} history={this.props.history}/>\r\n                }\r\n            </TileRow>\r\n            <TileRow columns={COLUMNS}>\r\n                {this.props.isLoggedIn\r\n                    ? <ButtonTile onClick={this.props.logout} disabled={this.props.isLoggingOut}\r\n                                  icon={NAVIGATION_ITEM.LOGOUT.icon} text={NAVIGATION_ITEM.LOGOUT.text}/>\r\n                    : <ButtonTile onClick={this.props.showLogin} disabled={this.props.isLoggingIn}\r\n                                  icon={NAVIGATION_ITEM.LOGIN.icon} text={NAVIGATION_ITEM.LOGIN.text}/>\r\n                }\r\n            </TileRow>\r\n        </div>\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    isLoggingIn: PropTypes.bool.isRequired,\r\n    isLoggingOut: PropTypes.bool.isRequired,\r\n    gameRunning: PropTypes.bool.isRequired,\r\n    unreadNotificationsCount: PropTypes.number.isRequired,\r\n    showLogin: PropTypes.func.isRequired,\r\n    logout: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Main","import {connect} from 'react-redux'\r\nimport Main from \"../components/views/main/Main\";\r\nimport {logout, showLoginModal} from \"../actions/user\";\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    isLoggingIn: state.user.isLoggingIn,\r\n    isLoggingOut: state.user.isLoggingOut,\r\n\r\n    gameRunning: state.game !== null,\r\n    unreadNotificationsCount: state.notifications.unreadNotifications.length\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showLogin: () => dispatch(showLoginModal()),\r\n    logout: () => dispatch(logout())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Main)","export function toDate(date, options) {\r\n    if (options && options.replaceToday && isToday(date)) {\r\n        return \"Heute\";\r\n    } else if (options && options.replaceYesterday && isYesterday(date)) {\r\n        return \"Gestern\";\r\n    } else {\r\n        let day = toDoubleDigit(date.getDate().toString());\r\n        let month = toDoubleDigit((date.getMonth() + 1).toString()); // +1 da getMonth 0-11 liefert\r\n        let year = date.getFullYear().toString();\r\n        return day + \".\" + month + \".\" + year;\r\n    }\r\n}\r\n\r\nexport function toTime(date) {\r\n    let hours = toDoubleDigit(date.getHours().toString());\r\n    let minutes = toDoubleDigit(date.getMinutes().toString());\r\n    return hours + \":\" + minutes + \" Uhr\";\r\n}\r\n\r\nfunction isToday(date) {\r\n    return isSameDay(new Date(), date);\r\n}\r\n\r\nfunction isYesterday(date) {\r\n    let yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    return isSameDay(yesterday, date);\r\n}\r\n\r\nfunction isSameDay(date1, date2) {\r\n    return date1.toDateString() === date2.toDateString();\r\n}\r\n\r\nfunction toDoubleDigit(s) {\r\n    if (s < 10) {\r\n        return \"0\" + s;\r\n    }\r\n    return s;\r\n}","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport StackLoader from \"../../general/loaders/StackLoader\";\r\nimport {Badge, Button, Glyphicon, Table, Well} from \"react-bootstrap\";\r\nimport {toDate, toTime} from \"../../../util/dateUtil\";\r\nimport OnlyForLoggedInUsersContainer from \"../../../containers/OnlyForLoggedInUsersContainer\";\r\nimport documentUtil from \"../../../util/documentUtil\";\r\n\r\nclass Notifications extends React.Component {\r\n\r\n    componentDidMount() {\r\n        documentUtil.setTitlePrefix(\"Mitteilungen\");\r\n    }\r\n\r\n    render() {\r\n        return <OnlyForLoggedInUsersContainer\r\n            text=\"Mitteilungen können nur von angemeldeten Benutzern eingesehen werden\">\r\n            <Well style={{paddingBottom: 0, textAlign: \"center\"}}>\r\n                <Button bsStyle=\"primary\" style={{marginRight: 5}}\r\n                        onClick={this.props.fetchNotifications}\r\n                        disabled={this.props.isFetchingNotifications}>\r\n                    <Glyphicon glyph=\"refresh\"/> Neu Laden\r\n                </Button>\r\n                <Button bsStyle=\"primary\"\r\n                        onClick={() => this.props.markAsRead(this.props.unreadNotifications.map(\r\n                            (notification) => notification.id\r\n                        ))}\r\n                        disabled={this.props.isFetchingNotifications || this.props.unreadNotifications.length === 0}>\r\n                    <Glyphicon glyph=\"check\"/> Alle als gelesen markieren\r\n                </Button>\r\n                <Table hover style={{textAlign: \"initial\"}}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th style={{whiteSpace: 'normal', width: 100}}>Zeitpunkt</th>\r\n                        <th style={{whiteSpace: 'normal'}}>Mitteilung</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.notifications.map(notification =>\r\n                        <tr key={\"notification_row_\" + notification.id}>\r\n                            <td style={{\r\n                                whiteSpace: 'normal',\r\n                                width: 100,\r\n                                verticalAlign: \"middle\",\r\n                                textAlign: \"center\"\r\n                            }}>\r\n                                {toDate(new Date(notification.timestamp), {\r\n                                    replaceToday: true, replaceYesterday: true\r\n                                })}\r\n                                <br/>\r\n                                {toTime(new Date(notification.timestamp))}\r\n                                <br/>\r\n                                {!notification.read &&\r\n                                <Badge style={{backgroundColor: \"#337ab7\"}}>Neu</Badge>\r\n                                }\r\n                            </td>\r\n                            <td style={{verticalAlign: \"middle\"}}>\r\n                                {notification.message}\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                    {this.props.notifications.length === 0 &&\r\n                    <tr>\r\n                        <td style={{whiteSpace: 'normal', width: 100}}/>\r\n                        <td>Keine Mitteilungen vorhanden</td>\r\n                    </tr>\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n                {this.props.isFetchingNotifications && <StackLoader label=\"Lade Mitteilungen...\"/>}\r\n            </Well>\r\n        </OnlyForLoggedInUsersContainer>\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    isLoggingIn: PropTypes.bool.isRequired,\r\n    fetchNotifications: PropTypes.func.isRequired,\r\n    markAsRead: PropTypes.func.isRequired,\r\n    isFetchingNotifications: PropTypes.bool.isRequired,\r\n    notifications: PropTypes.array.isRequired,\r\n    showLogin: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Notifications","import {connect} from 'react-redux'\r\nimport Notifications from \"../components/views/notifications/Notifications\";\r\nimport {fetchNotifications, markNotificationsAsRead} from \"../actions/notifications\";\r\nimport {showLoginModal} from \"../actions/user\";\r\n\r\nconst mapStateToProps = state => ({\r\n    notifications: state.notifications.notifications.slice().reverse(),\r\n    unreadNotifications: state.notifications.unreadNotifications,\r\n    isFetchingNotifications: state.notifications.isFetching,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    isLoggingIn: state.user.isLoggingIn\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showLogin: () => dispatch(showLoginModal()),\r\n    fetchNotifications: () => dispatch(fetchNotifications()),\r\n    markAsRead: (ids) => dispatch(markNotificationsAsRead(ids))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Notifications)","import React from 'react'\r\nimport {Button, Glyphicon} from \"react-bootstrap\";\r\n\r\nclass FullscreenButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fullscreen: false\r\n        };\r\n        this.toggleFullscreen = this.toggleFullscreen.bind(this);\r\n        this.fullscreenchangeEventListener = this.fullscreenchangeEventListener.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"fullscreenchange\", this.fullscreenchangeEventListener);\r\n        document.addEventListener(\"webkitfullscreenchange\", this.fullscreenchangeEventListener);\r\n        document.addEventListener(\"msfullscreenchange\", this.fullscreenchangeEventListener);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"fullscreenchange\", this.fullscreenchangeEventListener);\r\n        document.addEventListener(\"webkitfullscreenchange\", this.fullscreenchangeEventListener);\r\n        document.addEventListener(\"msfullscreenchange\", this.fullscreenchangeEventListener);\r\n    }\r\n\r\n    fullscreenchangeEventListener(e) {\r\n        this.setState({fullscreen: this.isFullscreen()});\r\n    }\r\n\r\n    toggleFullscreen() {\r\n        let docElm = document.documentElement;\r\n        if (!this.isFullscreen()) {\r\n            if (docElm.requestFullscreen) {\r\n                docElm.requestFullscreen();\r\n            } else if (docElm.mozRequestFullScreen) {\r\n                docElm.mozRequestFullScreen();\r\n            } else if (docElm.webkitRequestFullScreen) {\r\n                docElm.webkitRequestFullScreen();\r\n            } else if (docElm.msRequestFullscreen) {\r\n                docElm.msRequestFullscreen();\r\n            }\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.webkitExitFullscreen) {\r\n                document.webkitExitFullscreen();\r\n            } else if (document.mozCancelFullScreen) {\r\n                document.mozCancelFullScreen();\r\n            } else if (document.msExitFullscreen) {\r\n                document.msExitFullscreen();\r\n            }\r\n        }\r\n    }\r\n\r\n    isFullscreen() {\r\n        return (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n            (document.webkitFullscreenElement && document.webkitFullscreenElement !== null) ||\r\n            (document.mozFullScreenElement && document.mozFullScreenElement !== null) ||\r\n            (document.msFullscreenElement && document.msFullscreenElement !== null);\r\n    }\r\n\r\n    render() {\r\n        return <Button onClick={this.toggleFullscreen} className={this.props.className}>\r\n            {this.state.fullscreen\r\n                ? <Glyphicon className={this.props.className + \"-icon\"} glyph=\"resize-small\"/>\r\n                : <Glyphicon className={this.props.className + \"-icon\"} glyph=\"resize-full\"/>\r\n            }\r\n        </Button>\r\n    }\r\n}\r\n\r\nFullscreenButton.propTypes = {};\r\n\r\nexport default FullscreenButton\r\n","import React from 'react'\r\nimport './navbarloginloader.css'\r\n\r\nclass NavbarLoginLoader extends React.Component {\r\n\r\n    render() {\r\n        return <div className=\"navbar-login-loader\"/>;\r\n    }\r\n}\r\n\r\nNavbarLoginLoader.propTypes = {};\r\n\r\nexport default NavbarLoginLoader;","import React from 'react'\r\nimport {Badge, Button, Glyphicon} from \"react-bootstrap\";\r\nimport {NAVIGATION_ITEM} from \"../../constants/navigationItems\";\r\nimport {Link} from \"react-router-dom\";\r\nimport FullscreenButton from \"./FullscreenButton\";\r\nimport PropTypes from \"prop-types\";\r\nimport NavbarLoginLoader from \"../general/loaders/NavbarLoginLoader\";\r\nimport NavigationBarItem from \"../general/navigationbar/NavigationBarItem\";\r\nimport NavigationBar, {DropdownConfig, NavigationBarContainer} from \"../general/navigationbar/NavigationBar\";\r\n\r\nclass AppNavigationBar extends React.Component {\r\n\r\n    render() {\r\n        let fixedItems = [\r\n            <FullscreenButton key=\"fullscreen-button\" className=\"navigation-bar-bordered-item\"/>,\r\n            <Link key=\"brand\" className=\"navigation-bar-item navigation-bar-header\" to={\"/\"}>\r\n                Pheru-Darts\r\n            </Link>\r\n        ];\r\n\r\n        let gameItems = this.createGameLinks();\r\n        let gameDropdownConfig = new DropdownConfig(\"game_dropdown\", <Glyphicon glyph=\"expand\"/>, \"Spielmenü\");\r\n        let leftContainer = new NavigationBarContainer(gameItems, gameItems, gameDropdownConfig);\r\n\r\n        let userItemsUnmerged = this.createUserLinks(false);\r\n        let userItemsMerged = this.createUserLinks(true);\r\n        let userDropdownConfig = new DropdownConfig(\"user_dropdown\", <Glyphicon glyph=\"user\"/>,\r\n            this.props.userName ? this.props.userName : \"Benutzer\");\r\n        let rightContainer = new NavigationBarContainer(userItemsUnmerged, userItemsMerged, userDropdownConfig);\r\n\r\n        let singleDropdownConfig = new DropdownConfig(\"hamburger_dropdown\",\r\n            <Glyphicon className=\"navigation-bar-bordered-item-icon\" glyph=\"menu-hamburger\"/>,\r\n            null, false);\r\n        return <NavigationBar\r\n            style={{zIndex: 1030}}\r\n            fixedItems={fixedItems}\r\n            leftContainer={leftContainer}\r\n            rightContainer={rightContainer}\r\n            singleDropdown={singleDropdownConfig}\r\n        />\r\n    }\r\n\r\n    createGameLinks() {\r\n        return [\r\n            <NavigationBarItem key=\"new-game-link\" navigationItem={NAVIGATION_ITEM.NEW_GAME}/>,\r\n            <NavigationBarItem key=\"new-training-link\" navigationItem={NAVIGATION_ITEM.NEW_TRAINING}/>,\r\n            this.props.gameRunning && <NavigationBarItem key=\"game-link\" navigationItem={NAVIGATION_ITEM.GAME}/>\r\n        ]\r\n    }\r\n\r\n    createUserLinks(showOptionalText) {\r\n        return [\r\n            <NavigationBarItem key=\"settings-link\" navigationItem={NAVIGATION_ITEM.SETTINGS}\r\n                               showText={showOptionalText}/>,\r\n\r\n            this.props.isLoggedIn &&\r\n            <NavigationBarItem key=\"notifications-link\" navigationItem={NAVIGATION_ITEM.NOTIFICATIONS}\r\n                               showText={showOptionalText}>\r\n                {this.props.unreadNotificationsCount > 0 &&\r\n                <Badge style={{marginLeft: 2, backgroundColor: \"#337ab7\"}}>\r\n                    {this.props.unreadNotificationsCount}\r\n                </Badge>\r\n                }\r\n            </NavigationBarItem>,\r\n\r\n            this.props.isLoggedIn &&\r\n            <NavigationBarItem key=\"statistics-link\" navigationItem={NAVIGATION_ITEM.STATISTICS}\r\n                               showText={showOptionalText}/>,\r\n\r\n            !this.props.isLoggedIn &&\r\n            <Button key=\"login-link\"\r\n                    className=\"navigation-bar-item\"\r\n                    onClick={this.props.showLogin}\r\n                    disabled={this.props.isLoggingIn}>\r\n                <div style={{position: \"relative\"}}>\r\n                    {NAVIGATION_ITEM.LOGIN.icon} {this.props.isLoggingIn ? \"Melde an...\" : NAVIGATION_ITEM.LOGIN.text}\r\n                    {this.props.isLoggingIn &&\r\n                    <NavbarLoginLoader/>\r\n                    }\r\n                </div>\r\n            </Button>,\r\n\r\n            this.props.isLoggedIn &&\r\n            <Button key=\"logout-link\"\r\n                    className=\"navigation-bar-item\"\r\n                    onClick={() => {\r\n                        if (this.props.gameRunning) {\r\n                            this.props.showConfirmation(\r\n                                \"Wirklich abmelden?\",\r\n                                \"Das aktuelle Spiel wird dadurch abgebrochen.\",\r\n                                () => {\r\n                                    this.props.exitGame();\r\n                                    this.props.logout();\r\n                                }\r\n                            );\r\n                        } else {\r\n                            this.props.logout();\r\n                        }\r\n                    }}\r\n                    disabled={this.props.isLoggingOut}>\r\n                <div style={{position: \"relative\"}}>\r\n                    {NAVIGATION_ITEM.LOGOUT.icon} {NAVIGATION_ITEM.LOGOUT.text} ({this.props.userName})\r\n                </div>\r\n            </Button>\r\n        ]\r\n    }\r\n}\r\n\r\nAppNavigationBar.propTypes = {\r\n    userName: PropTypes.string,\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    isLoggingIn: PropTypes.bool.isRequired,\r\n    isLoggingOut: PropTypes.bool.isRequired,\r\n    gameRunning: PropTypes.bool.isRequired,\r\n    showLogin: PropTypes.func.isRequired,\r\n    logout: PropTypes.func.isRequired,\r\n    showConfirmation: PropTypes.func.isRequired,\r\n    exitGame: PropTypes.func.isRequired,\r\n    unreadNotificationsCount: PropTypes.number.isRequired\r\n};\r\n\r\nexport default AppNavigationBar","import {connect} from 'react-redux'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {logout, showLoginModal} from \"../actions/user\";\r\nimport {showConfirmation} from \"../actions/modal\";\r\nimport {exitGame} from \"../actions/game\";\r\nimport AppNavigationBar from \"../components/app/AppNavigationBar\";\r\n\r\nconst mapStateToProps = state => ({\r\n    userName: state.user.name,\r\n\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    isLoggingIn: state.user.isLoggingIn,\r\n    isLoggingOut: state.user.isLoggingOut,\r\n\r\n    gameRunning: state.game !== null,\r\n\r\n    unreadNotificationsCount: state.notifications.unreadNotifications.length\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showLogin: () => dispatch(showLoginModal()),\r\n    logout: () => dispatch(logout()),\r\n    showConfirmation: (title, message, onConfirm, onCancel) => dispatch(showConfirmation(title, message, onConfirm, onCancel)),\r\n    exitGame: () => dispatch(exitGame())\r\n});\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AppNavigationBar))","import React from 'react'\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport NewGameConfigContainer from \"../../containers/NewGameConfigContainer\";\r\nimport GameContainer from \"../../containers/GameContainer\";\r\nimport {NAVIGATION_ITEM} from \"../../constants/navigationItems\";\r\nimport {localStorageService} from \"../../services/storageService\";\r\nimport StatisticsContainer from \"../../containers/StatisticsContainer\";\r\nimport SettingsContainer from \"../../containers/SettingsContainer\";\r\nimport LoginModalContainer from \"../../containers/modals/LoginModalContainer\";\r\nimport SignUpModalContainer from \"../../containers/modals/SignUpModalContainer\";\r\nimport PropTypes from 'prop-types';\r\nimport AboutContainer from \"../../containers/AboutContainer\";\r\nimport SimpleModalContainer from \"../../containers/modals/SimpleModalContainer\";\r\nimport MainContainer from \"../../containers/MainContainer\";\r\nimport NotificationsContainer from \"../../containers/NotificationsContainer\";\r\nimport AppNavigationBarContainer from \"../../containers/AppNavigationBarContainer\";\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.appContainerRef = React.createRef();\r\n        this.onBeforeUnload = this.onBeforeUnload.bind(this);\r\n        this.onUnload = this.onUnload.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onunload = this.onUnload;\r\n        window.onbeforeunload = this.onBeforeUnload;\r\n\r\n        this.props.setPossibleVoices(window.speechSynthesis.getVoices());\r\n        this.props.setSelectedVoiceByName(localStorageService.getSelectedVoiceName());\r\n        if (speechSynthesis.onvoiceschanged !== undefined) {\r\n            speechSynthesis.onvoiceschanged = () => {\r\n                this.props.setPossibleVoices(window.speechSynthesis.getVoices());\r\n                if (this.props.selectedVoice === undefined) {\r\n                    this.props.setSelectedVoiceByName(localStorageService.getSelectedVoiceName());\r\n                }\r\n            };\r\n        }\r\n        this.props.loginByToken(false);\r\n    }\r\n\r\n    onUnload(e) {\r\n        if (this.props.selectedVoice) {\r\n            localStorageService.setSelectedVoiceName(this.props.selectedVoice.name);\r\n        }\r\n    }\r\n\r\n    onBeforeUnload(e) {\r\n        if (this.props.gameRunning) {\r\n            let dialogText = 'Seite wirklich verlassen?';\r\n            e.returnValue = dialogText;\r\n            return dialogText;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            this.appContainerRef.current.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div style={{height: \"100%\"}}>\r\n            <AppNavigationBarContainer/>\r\n            <div ref={this.appContainerRef}\r\n                 style={{\r\n                     position: \"absolute\",\r\n                     top: 0,\r\n                     left: 0,\r\n                     right: 0,\r\n                     bottom: 0,\r\n                     paddingTop: 10,\r\n                     paddingLeft: 20,\r\n                     paddingRight: 20,\r\n                     marginTop: 40,\r\n                     overflowY: \"auto\"\r\n                 }}>\r\n                <Switch>\r\n                    <Route path={NAVIGATION_ITEM.NEW_GAME.route} render={(props) =>\r\n                        <NewGameConfigContainer {...props} key=\"newgameconfig\"/>}\r\n                    />\r\n                    <Route path={NAVIGATION_ITEM.NEW_TRAINING.route} render={(props) =>\r\n                        <NewGameConfigContainer {...props} key=\"newgameconfig_training\" training/>}\r\n                    />\r\n                    {this.props.gameRunning &&\r\n                    <Route path={NAVIGATION_ITEM.GAME.route} component={GameContainer}/>\r\n                    }\r\n                    <Route path={NAVIGATION_ITEM.NOTIFICATIONS.route} component={NotificationsContainer}/>\r\n                    <Route path={NAVIGATION_ITEM.STATISTICS.route} component={StatisticsContainer}/>\r\n                    <Route path={NAVIGATION_ITEM.SETTINGS.route} component={SettingsContainer}/>\r\n                    <Route path={NAVIGATION_ITEM.ABOUT.route} component={AboutContainer}/>\r\n                    {/*no-match-route*/}\r\n                    <Route component={MainContainer}/>\r\n                </Switch>\r\n            </div>\r\n            <LoginModalContainer/>\r\n            <SignUpModalContainer/>\r\n            <SimpleModalContainer/>\r\n        </div>\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    userName: PropTypes.string,\r\n\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    isLoggingIn: PropTypes.bool.isRequired,\r\n    isLoggingOut: PropTypes.bool.isRequired,\r\n\r\n    gameRunning: PropTypes.bool.isRequired,\r\n\r\n    fetchPlayableUsers: PropTypes.func.isRequired,\r\n    fetchPlayableUsersFailed: PropTypes.bool.isRequired,\r\n\r\n    fetchPermittedUsers: PropTypes.func.isRequired,\r\n    fetchPermittedUsersFailed: PropTypes.bool.isRequired,\r\n\r\n    showLogin: PropTypes.func.isRequired,\r\n    loginByToken: PropTypes.func.isRequired,\r\n    logout: PropTypes.func.isRequired,\r\n\r\n    showConfirmation: PropTypes.func.isRequired,\r\n    exitGame: PropTypes.func.isRequired,\r\n\r\n    unreadNotificationsCount: PropTypes.number.isRequired,\r\n\r\n    selectedVoice: PropTypes.object\r\n};\r\n\r\nexport default App;","import {connect} from 'react-redux'\r\nimport App from \"../components/app/App\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {loginByToken, logout, showLoginModal} from \"../actions/user\";\r\nimport {fetchPermittedUsers, fetchPlayableUsers} from \"../actions/playerPermission\";\r\nimport {showConfirmation} from \"../actions/modal\";\r\nimport {exitGame} from \"../actions/game\";\r\nimport {setPossibleVoices, setSelectedVoiceByName} from \"../actions/speech\";\r\n\r\nconst mapStateToProps = state => ({\r\n    userName: state.user.name,\r\n\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    isLoggingIn: state.user.isLoggingIn,\r\n    isLoggingOut: state.user.isLoggingOut,\r\n\r\n    gameRunning: state.game !== null,\r\n\r\n    fetchPlayableUsersFailed: state.playerPermission.fetchPlayableUsersFailed,\r\n    fetchPermittedUsersFailed: state.playerPermission.fetchPermittedUsersFailed,\r\n\r\n    unreadNotificationsCount: state.notifications.unreadNotifications.length,\r\n\r\n    selectedVoice: state.speech.selectedVoice\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchPlayableUsers : () => dispatch(fetchPlayableUsers()),\r\n    fetchPermittedUsers : () => dispatch(fetchPermittedUsers()),\r\n    showLogin: () => dispatch(showLoginModal()),\r\n    loginByToken: (showErrorOnFailure) => dispatch(loginByToken(showErrorOnFailure)),\r\n    logout: () => dispatch(logout()),\r\n    showConfirmation: (title, message, onConfirm, onCancel) => dispatch(showConfirmation(title, message, onConfirm, onCancel)),\r\n    exitGame: () => dispatch(exitGame()),\r\n    setPossibleVoices: (voices) => dispatch(setPossibleVoices(voices)),\r\n    setSelectedVoiceByName: (voice) => dispatch(setSelectedVoiceByName(voice))\r\n});\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App))","import React from 'react'\r\nimport {render} from 'react-dom'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {applyMiddleware, createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport rootReducer from './reducers'\r\nimport AppContainer from \"./containers/AppContainer\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware\r\n    )\r\n);\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <AppContainer/>\r\n        </HashRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}